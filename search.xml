<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docker容器内操作权限问题</title>
      <link href="/2019/09/28/docker%E5%AE%B9%E5%99%A8%E5%86%85%E7%9B%AE%E5%BD%95%E9%97%B4%E7%A7%BB%E5%8A%A8%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/"/>
      <url>/2019/09/28/docker%E5%AE%B9%E5%99%A8%E5%86%85%E7%9B%AE%E5%BD%95%E9%97%B4%E7%A7%BB%E5%8A%A8%E6%9D%83%E9%99%90%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>参考博客:<br><a href="https://blog.csdn.net/weixin_43577800/article/details/84844438" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43577800/article/details/84844438</a></p><ul><li style="list-style:none"><input type="checkbox" checked> 问题解决:<br>退出容器进入宿主机中,授权挂载的两个数据卷</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R 1000 /home/softs/jenkins</span><br></pre></td></tr></table></figure><a id="more"></a><p>映射了两个数据卷,但是在docker容器内需要把数据卷1的内容移到数据卷2目录项,出现以下提示:<br>没有权限操作…</p><p>参考博客:<br><a href="https://blog.csdn.net/weixin_43577800/article/details/84844438" target="_blank" rel="noopener">https://blog.csdn.net/weixin_43577800/article/details/84844438</a><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cannot create regular file &apos;/var/yl_cloud/order.war&apos;: Permission denied</span><br></pre></td></tr></table></figure><p></p><p>问题解决:</p><p>退出容器进入宿主机中,授权挂载的两个数据卷</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R 1000 /home/softs/jenkins</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> docker容器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决创建容器是出现的错误:IPv4 forwarding is disabled. Networking will not work.</title>
      <link href="/2019/09/28/%E8%A7%A3%E5%86%B3%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8%E6%98%AF%E5%87%BA%E7%8E%B0%E7%9A%84%E9%94%99%E8%AF%AF-IPv4-forwarding-is-disabled-Networking-will-not-work/"/>
      <url>/2019/09/28/%E8%A7%A3%E5%86%B3%E5%88%9B%E5%BB%BA%E5%AE%B9%E5%99%A8%E6%98%AF%E5%87%BA%E7%8E%B0%E7%9A%84%E9%94%99%E8%AF%AF-IPv4-forwarding-is-disabled-Networking-will-not-work/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录~!<br><a id="more"></a></p><p>测试服务器跟换<code>IP</code>后,在启动容器的时候导致无法访问,然后尝试重新创建容器,出现了<br><code>IPv4 forwarding is disabled. Networking will not work.</code>错误..</p><h6 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h6><ul><li>在宿主机下更改<code>00-system.conf</code>文件</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/sysctl.d/00-system.conf</span><br></pre></td></tr></table></figure><ul><li>添加一下代码</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure><ul><li>重启<code>network</code>服务</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart network</span><br></pre></td></tr></table></figure><p>原文博客:<a href="https://blog.csdn.net/zhydream77/article/details/81902457" target="_blank" rel="noopener">https://blog.csdn.net/zhydream77/article/details/81902457</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> IPv4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch基础练习</title>
      <link href="/2019/09/22/ElasticSearch%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/"/>
      <url>/2019/09/22/ElasticSearch%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>ElasticSearch</code>基础<code>CRUD</code>操作<br><a id="more"></a></p><h2 id="参数格式都是6-x的格式-实例是在7-x版本下完成的-所以实例格式与参数格式有所差异"><a href="#参数格式都是6-x的格式-实例是在7-x版本下完成的-所以实例格式与参数格式有所差异" class="headerlink" title="参数格式都是6.x的格式,实例是在7.x版本下完成的,所以实例格式与参数格式有所差异"></a>参数格式都是6.x的格式,实例是在7.x版本下完成的,所以实例格式与参数格式有所差异</h2><p>基于<code>lasticSearch 7.0</code>版本的<code>CRUD</code>操作</p><h5 id="1-建立索引库"><a href="#1-建立索引库" class="headerlink" title="1. 建立索引库"></a>1. 建立索引库</h5><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 建立索引库</span><br><span class="line">PUT /user</span><br></pre></td></tr></table></figure><h6 id="1-1-建立索引库并设置副本和分片"><a href="#1-1-建立索引库并设置副本和分片" class="headerlink" title="1.1 建立索引库并设置副本和分片"></a>1.1 建立索引库并设置副本和分片</h6><ul><li><p>Ps: <strong>7.x</strong>版本副本和分片默认为: 1</p></li><li><p>参数格式:</p></li></ul><p>PUT /{索引库名称}</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 建立索引库并设置副本和分片</span><br><span class="line">PUT /user</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line">    <span class="attr">"number_of_replicas"</span>: <span class="number">2</span>,</span><br><span class="line">    <span class="attr">"number_of_shards"</span>: <span class="number">3</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="1-2-建立索引库并设置mapping"><a href="#1-2-建立索引库并设置mapping" class="headerlink" title="1.2 # 建立索引库并设置mapping"></a>1.2 # 建立索引库并设置<code>mapping</code></h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">PUT /user</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"settings"</span>: &#123;</span><br><span class="line">    <span class="attr">"number_of_replicas"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"number_of_shards"</span>: <span class="number">4</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"mappings"</span>: &#123;</span><br><span class="line">    <span class="attr">"properties"</span>: &#123;</span><br><span class="line">      <span class="attr">"userId"</span>:&#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"name"</span>:&#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"age"</span>:&#123;</span><br><span class="line">        <span class="attr">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">"deptId"</span>:&#123;</span><br><span class="line">      <span class="attr">"type"</span>: <span class="string">"keyword"</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-删除索引库"><a href="#2-删除索引库" class="headerlink" title="2. 删除索引库"></a>2. 删除索引库</h5><ul><li><p>参数格式:</p><p>DELETE /{索引库名称}</p></li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 删除索引库</span><br><span class="line">DELETE /user</span><br></pre></td></tr></table></figure><h5 id="3-添加文档"><a href="#3-添加文档" class="headerlink" title="3. 添加文档"></a>3. 添加文档</h5><ul><li><p>参数格式:</p><p>PUT /{索引库}/{类型}/{索引id}</p></li></ul><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 添加文档</span><br><span class="line">PUT /user/_doc/1</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"userId"</span>:<span class="string">"4"</span>,</span><br><span class="line">  <span class="attr">"name"</span>:<span class="string">"I kittle"</span>,</span><br><span class="line">  <span class="attr">"memo"</span>:<span class="string">"xiao mi"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="4-检索文档"><a href="#4-检索文档" class="headerlink" title="4. 检索文档"></a>4. 检索文档</h5><ul><li>参数格式:</li></ul><p>GET /{索引库}/{类型}/{索引id}</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 获取文档</span><br><span class="line">GET /user/_doc/1</span><br></pre></td></tr></table></figure><h5 id="5-检索文档-排序"><a href="#5-检索文档-排序" class="headerlink" title="5. 检索文档:排序"></a>5. 检索文档:排序</h5><ul><li>参数格式</li></ul><p>GET /{索引库}/{类型}/_search<br>{<br>“sort”:[<br>{“age”:”asc”}<br>]<br>}</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 搜索文档:排序</span><br><span class="line">GET /user/_doc/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sort"</span>:[</span><br><span class="line">    &#123;<span class="attr">"age"</span>:<span class="string">"asc"</span>&#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="6-检索查询"><a href="#6-检索查询" class="headerlink" title="6.检索查询"></a>6.检索查询</h5><ul><li>参数格式:</li></ul><p>GET /user/_doc/_search<br>{<br>“query”:{<br>{检索方式}:{field:value}<br>}<br>}</p><ul><li>检索方式:</li></ul><blockquote><p>term表示精确匹配,value值不会被分词器拆分,按照倒排索引匹配,一般用于filter中<br>match_phrase表示短语检索,value值不会被分词器拆分,直接去倒排索引中匹配<br>match表示全文检索,value值会被分词器拆分,然后去倒排索引中匹配<br>range表示范围检索,有 gt/gte/lt/lte 等</p></blockquote><h6 id="6-1-查询名称为’wang-da’的员工"><a href="#6-1-查询名称为’wang-da’的员工" class="headerlink" title="6.1 查询名称为’wang da’的员工"></a>6.1 查询名称为’wang da’的员工</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查询名称为'wang da'的员工</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>:&#123;</span><br><span class="line">    <span class="attr">"term"</span>:&#123;</span><br><span class="line">      <span class="attr">"name"</span>:<span class="string">"wang"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="6-2-使用match查询’wang’员工"><a href="#6-2-使用match查询’wang’员工" class="headerlink" title="6.2 使用match查询’wang’员工"></a>6.2 使用match查询’wang’员工</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 使用match查询'wang'员工</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>:&#123;</span><br><span class="line">    <span class="attr">"term"</span>:&#123;</span><br><span class="line">      <span class="attr">"name"</span>:<span class="string">"wang"</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="6-3-查询出28到30岁的员工"><a href="#6-3-查询出28到30岁的员工" class="headerlink" title="6.3 查询出28到30岁的员工"></a>6.3 查询出28到30岁的员工</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 查询出28到30岁的员工</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"range"</span>: &#123;</span><br><span class="line">      <span class="attr">"age"</span>: &#123;</span><br><span class="line">        <span class="attr">"gte"</span>: <span class="number">28</span>,</span><br><span class="line">        <span class="attr">"lte"</span>: <span class="number">30</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="7-关键字查询"><a href="#7-关键字查询" class="headerlink" title="7. 关键字查询"></a>7. 关键字查询</h5><p>multi_match:表示在多个字段间做检索</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#关键字查询</span><br><span class="line">GET /emp/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"multi_match"</span>: &#123;</span><br><span class="line">      <span class="attr">"query"</span>: <span class="string">"am"</span>,</span><br><span class="line">      <span class="attr">"fields"</span>: [<span class="string">"name"</span>,<span class="string">"memo"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="8-投影查询"><a href="#8-投影查询" class="headerlink" title="8. 投影查询"></a>8. 投影查询</h5><p>类似MySQL的查询语句中select后面的字段一样</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 查询指定字段'_source'和'query'是同一级别的</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">    <span class="attr">"_source"</span>:[<span class="string">"name"</span>,<span class="string">"age"</span>]</span><br><span class="line">    , <span class="attr">"query"</span>: &#123;</span><br><span class="line">      <span class="attr">"range"</span>: &#123;</span><br><span class="line">        <span class="attr">"age"</span>: &#123;</span><br><span class="line">          <span class="attr">"gte"</span>: <span class="number">28</span>,</span><br><span class="line">          <span class="attr">"lte"</span>: <span class="number">30</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="9-高亮显示"><a href="#9-高亮显示" class="headerlink" title="9. 高亮显示"></a>9. 高亮显示</h5><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 'am'高亮显示,高亮查询:把检索出来的文档匹配的内容高亮显示,需要配合检索使用,把查询的内容高亮</span><br><span class="line">GET /emp/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"multi_match"</span>: &#123;</span><br><span class="line">      <span class="attr">"query"</span>: <span class="string">"am"</span>,</span><br><span class="line">      <span class="attr">"fields"</span>: [<span class="string">"name"</span>,<span class="string">"memo"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">"_source"</span>: [<span class="string">"userId"</span>,<span class="string">"name"</span>,<span class="string">"memo"</span>],</span><br><span class="line">  <span class="attr">"highlight"</span>: &#123;</span><br><span class="line">    <span class="attr">"fields"</span>: &#123;</span><br><span class="line">      <span class="attr">"name"</span>:&#123;&#125;,</span><br><span class="line">      <span class="attr">"memo"</span>:&#123;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="10-逻辑查询"><a href="#10-逻辑查询" class="headerlink" title="10. 逻辑查询"></a>10. 逻辑查询</h5><p>逻辑查询规则: must/should/must_not,相当于 and/or/not</p><ul><li>参数格式:</li></ul><p><img src="/images/pasted-56.png" alt="filename already exists, renamed"></p><h6 id="10-1-检索部门为1-并且大于32岁的员工"><a href="#10-1-检索部门为1-并且大于32岁的员工" class="headerlink" title="10.1 检索部门为1,并且大于32岁的员工"></a>10.1 检索部门为1,并且大于32岁的员工</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#需求:获取部门为1,并且大于32岁的员工</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"bool"</span>: &#123;</span><br><span class="line">      <span class="attr">"must"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"term"</span>: &#123;</span><br><span class="line">            <span class="attr">"deptId"</span>:<span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"range"</span>: &#123;</span><br><span class="line">            <span class="attr">"age"</span>: &#123;</span><br><span class="line">              <span class="attr">"gt"</span>: <span class="number">32</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="10-2-检索出部门1或者小于30岁的员工"><a href="#10-2-检索出部门1或者小于30岁的员工" class="headerlink" title="10.2 检索出部门1或者小于30岁的员工."></a>10.2 检索出部门1或者小于30岁的员工.</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">#需求:检索出部门1或者小于30岁的员工.</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"age"</span>: &#123;</span><br><span class="line">        <span class="attr">"order"</span>: <span class="string">"asc"</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"deptId"</span>:<span class="string">"asc"</span></span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"bool"</span>: &#123;</span><br><span class="line">      <span class="attr">"should"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"term"</span>: &#123;</span><br><span class="line">            <span class="attr">"deptId"</span>:<span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"range"</span>: &#123;</span><br><span class="line">            <span class="attr">"age"</span>: &#123;</span><br><span class="line">              <span class="attr">"gt"</span>: <span class="number">30</span></span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="10-3-获取部门不为1的员工"><a href="#10-3-获取部门不为1的员工" class="headerlink" title="10.3 获取部门不为1的员工"></a>10.3 获取部门不为1的员工</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#需求:获取部门不为1的员工</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"sort"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"deptId"</span>: &#123;</span><br><span class="line">        <span class="attr">"order"</span>: <span class="string">"asc"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  ],</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"bool"</span>: &#123;</span><br><span class="line">      <span class="attr">"must_not"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"term"</span>: &#123;</span><br><span class="line">            <span class="attr">"deptId"</span>: <span class="string">"1"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="11-过滤查询"><a href="#11-过滤查询" class="headerlink" title="11. 过滤查询"></a>11. 过滤查询</h5><p>filter表示在查询中不涉及评分,并且有缓存,用于精确匹配,filter中的检索方式多为term</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"query"</span>: &#123;</span><br><span class="line">    <span class="attr">"bool"</span>: &#123;</span><br><span class="line">      <span class="attr">"filter"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"term"</span>: &#123;</span><br><span class="line">            <span class="attr">"deptId"</span>: <span class="number">1</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;,</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">"range"</span>: &#123;</span><br><span class="line">            <span class="attr">"age"</span>:&#123;</span><br><span class="line">              <span class="attr">"gt"</span>:<span class="number">30</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      ]</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="12-分组查询"><a href="#12-分组查询" class="headerlink" title="12. 分组查询"></a>12. 分组查询</h5><p>分组运算:avg/sum/min/max/value_count/stats(执行以上所有功能)</p><h6 id="12-1-统计各部门平均年龄"><a href="#12-1-统计各部门平均年龄" class="headerlink" title="12.1 统计各部门平均年龄"></a>12.1 统计各部门平均年龄</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#需求:统计各部门平均年龄</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"groupByDeptId"</span>:&#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"deptId"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"userAge"</span>: &#123;</span><br><span class="line">          <span class="attr">"avg"</span>: &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"age"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="12-2-统计各部门的人数"><a href="#12-2-统计各部门的人数" class="headerlink" title="12.2 统计各部门的人数"></a>12.2 统计各部门的人数</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#需求:统计各部门的人数</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"groupByDeptId"</span>: &#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"deptId"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"totalCount"</span>: &#123;</span><br><span class="line">          <span class="attr">"value_count"</span>: &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"deptId"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="12-3-统计每个部门最大年龄"><a href="#12-3-统计每个部门最大年龄" class="headerlink" title="12.3 统计每个部门最大年龄"></a>12.3 统计每个部门最大年龄</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#需求:统计每个部门最大年龄</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"groupByDeptId"</span>: &#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"deptId"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"maxAge"</span>: &#123;</span><br><span class="line">          <span class="attr">"max"</span>: &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"age"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="12-4-统计每个部门最小年龄"><a href="#12-4-统计每个部门最小年龄" class="headerlink" title="12.4 统计每个部门最小年龄"></a>12.4 统计每个部门最小年龄</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#需求:统计每个部门最小年龄</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"groupBydeptId"</span>: &#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"deptId"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"minAge"</span>: &#123;</span><br><span class="line">          <span class="attr">"min"</span>: &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"age"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="12-5-统计所有员工年龄总和"><a href="#12-5-统计所有员工年龄总和" class="headerlink" title="12.5 统计所有员工年龄总和"></a>12.5 统计所有员工年龄总和</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#需求:统计所有员工年龄总和</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"sumAge"</span>: &#123;</span><br><span class="line">      <span class="attr">"sum"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"age"</span></span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="12-6-使用state函数"><a href="#12-6-使用state函数" class="headerlink" title="12.6 使用state函数"></a>12.6 使用state函数</h6><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#需求:使用state函数</span><br><span class="line">GET /user/_search</span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">    <span class="attr">"groupByDeptId"</span>: &#123;</span><br><span class="line">      <span class="attr">"terms"</span>: &#123;</span><br><span class="line">        <span class="attr">"field"</span>: <span class="string">"deptId"</span>,</span><br><span class="line">        <span class="attr">"size"</span>: <span class="number">10</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">"aggs"</span>: &#123;</span><br><span class="line">        <span class="attr">"stateUse"</span>: &#123;</span><br><span class="line">          <span class="attr">"stats"</span>: &#123;</span><br><span class="line">            <span class="attr">"field"</span>: <span class="string">"age"</span></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> ElasticSearch系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux查看MySQL初始密码,配置远程访问</title>
      <link href="/2019/09/21/MySQL%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/21/MySQL%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><h6 id="查看初始密码"><a href="#查看初始密码" class="headerlink" title="查看初始密码"></a>查看初始密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h6 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录<code>MySQL</code></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h6 id="实现远程连接（改表法）"><a href="#实现远程连接（改表法）" class="headerlink" title="实现远程连接（改表法）"></a>实现远程连接（改表法）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host = &apos;%&apos; where user = &apos;root&apos;;</span><br></pre></td></tr></table></figure><h6 id="实现远程连接-授权法"><a href="#实现远程连接-授权法" class="headerlink" title="实现远程连接(授权法)"></a>实现远程连接(授权法)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">grant all privileges  on *.* to root@&apos;%&apos; identified by &quot;password&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决MySQL错误:Too many connections</title>
      <link href="/2019/09/21/%E8%A7%A3%E5%86%B3MySQL%E9%94%99%E8%AF%AF-Too-many-connections/"/>
      <url>/2019/09/21/%E8%A7%A3%E5%86%B3MySQL%E9%94%99%E8%AF%AF-Too-many-connections/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录~!</p><p>解决<code>MySQL</code>错误:<code>Too many connections</code><br><a id="more"></a><br>在搭建测试服务器的时候重新安装了<code>MySQL</code>,配置文件没有备份过来,导致项目启动的时候出现了<code>Too many connections</code>错误..即是连接太多了..</p><p>这就需要我们配置<code>MySQL</code>的连接数了..</p><p>在<code>MySQL</code>官方文档中有说明连接数默认值为<code>151</code></p><blockquote><p><a href="https://dev.mysql.com/doc/refman/5.7/en/too-many-connections.html" target="_blank" rel="noopener">MySQL官方文档</a></p></blockquote><p><img src="/images/pasted-55.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> MySQL数据库系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>yum安装MySQL</title>
      <link href="/2019/09/21/yum%E5%AE%89%E8%A3%85MySQL/"/>
      <url>/2019/09/21/yum%E5%AE%89%E8%A3%85MySQL/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><h5 id="下载并安装MySQL官方的-Yum-Repository"><a href="#下载并安装MySQL官方的-Yum-Repository" class="headerlink" title="下载并安装MySQL官方的 Yum Repository"></a>下载并安装MySQL官方的 <code>Yum Repository</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><h6 id="使用上面的命令就直接下载了安装用的Yum-Repository-然后就可以直接yum安装。"><a href="#使用上面的命令就直接下载了安装用的Yum-Repository-然后就可以直接yum安装。" class="headerlink" title="使用上面的命令就直接下载了安装用的Yum Repository,然后就可以直接yum安装。"></a>使用上面的命令就直接下载了安装用的Yum Repository,然后就可以直接yum安装。</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql57-community-release-el7-10.noarch.rpm</span><br></pre></td></tr></table></figure><h6 id="使用yum安装MySQL"><a href="#使用yum安装MySQL" class="headerlink" title="使用yum安装MySQL"></a>使用yum安装MySQL</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install mysql-community-server</span><br></pre></td></tr></table></figure><h5 id="MySQL数据库设置"><a href="#MySQL数据库设置" class="headerlink" title="MySQL数据库设置"></a>MySQL数据库设置</h5><h6 id="先启动MySQL"><a href="#先启动MySQL" class="headerlink" title="先启动MySQL"></a>先启动MySQL</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl start mysqld</span><br></pre></td></tr></table></figure><h6 id="查看启动状态"><a href="#查看启动状态" class="headerlink" title="查看启动状态"></a>查看启动状态</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status mysqld</span><br></pre></td></tr></table></figure><h6 id="查看初始密码"><a href="#查看初始密码" class="headerlink" title="查看初始密码"></a>查看初始密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep &quot;password&quot; /var/log/mysqld.log</span><br></pre></td></tr></table></figure><h6 id="登录MySQL"><a href="#登录MySQL" class="headerlink" title="登录MySQL"></a>登录<code>MySQL</code></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure><h6 id="实现远程连接（改表法）"><a href="#实现远程连接（改表法）" class="headerlink" title="实现远程连接（改表法）"></a>实现远程连接（改表法）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host = &apos;%&apos; where user = &apos;root&apos;;</span><br></pre></td></tr></table></figure><h6 id="实现远程连接-授权法"><a href="#实现远程连接-授权法" class="headerlink" title="实现远程连接(授权法)"></a>实现远程连接(授权法)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">grant all privileges  on *.* to root@&apos;%&apos; identified by &quot;password&quot;;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置java环境</title>
      <link href="/2019/09/20/Linux%E9%85%8D%E7%BD%AEjava%E7%8E%AF%E5%A2%83/"/>
      <url>/2019/09/20/Linux%E9%85%8D%E7%BD%AEjava%E7%8E%AF%E5%A2%83/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><h5 id="java环境配置"><a href="#java环境配置" class="headerlink" title="java环境配置"></a><code>java</code>环境配置</h5><h6 id="通过ftp把jdk上传到服务器并解压"><a href="#通过ftp把jdk上传到服务器并解压" class="headerlink" title="通过ftp把jdk上传到服务器并解压"></a>通过<code>ftp</code>把<code>jdk</code>上传到服务器并解压</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-8u181-linux-x64.tar.gz</span><br></pre></td></tr></table></figure><h6 id="通过pwd命令获取路径"><a href="#通过pwd命令获取路径" class="headerlink" title="通过pwd命令获取路径"></a>通过<code>pwd</code>命令获取路径</h6><p><img src="/images/pasted-45.png" alt="filename already exists, renamed"></p><h6 id="修改-etc-profile文件加入以下配置"><a href="#修改-etc-profile文件加入以下配置" class="headerlink" title="修改/etc/profile文件加入以下配置"></a>修改<code>/etc/profile</code>文件加入以下配置</h6><ul><li>ps:多个环境变量路径之间用<code>:</code>隔开</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#Jdk </span><br><span class="line">JAVA_HOME=/home/softs/java8/jdk1.8.0_181/</span><br><span class="line">PATH=$JAVA_HOME/bin</span><br><span class="line">#文件尾部加入</span><br><span class="line">PATH=$PATH</span><br><span class="line">export PATH</span><br></pre></td></tr></table></figure><h6 id="刷新配置"><a href="#刷新配置" class="headerlink" title="刷新配置"></a>刷新配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><h6 id="测试是否配置成功"><a href="#测试是否配置成功" class="headerlink" title="测试是否配置成功"></a>测试是否配置成功</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Linux </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加代码复制功能</title>
      <link href="/2019/09/08/Hexo%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/"/>
      <url>/2019/09/08/Hexo%E6%B7%BB%E5%8A%A0%E4%BB%A3%E7%A0%81%E5%A4%8D%E5%88%B6%E5%8A%9F%E8%83%BD/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>Hexo</code>添加代码复制功能~!<br><a id="more"></a></p><h6 id="1-在js目录添加clipboard-min-js文件"><a href="#1-在js目录添加clipboard-min-js文件" class="headerlink" title="1. 在js目录添加clipboard.min.js文件"></a>1. 在<code>js</code>目录添加<code>clipboard.min.js</code>文件</h6><ul><li><a href="https://www.lgzblog.com/js/clipboard.min.js" target="_blank" rel="noopener">clipboard.min.js</a></li></ul><h6 id="2-在js目录添加cpbutt-js文件"><a href="#2-在js目录添加cpbutt-js文件" class="headerlink" title="2.在js目录添加cpbutt.js文件"></a>2.在<code>js</code>目录添加<code>cpbutt.js</code>文件</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'table'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params">i, e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> $wrap = $(<span class="string">'&lt;div&gt;'</span>).addClass(<span class="string">'highlight-wrap'</span>);</span><br><span class="line">        $(e).after($wrap);</span><br><span class="line">        $wrap.append($(<span class="string">'&lt;button&gt;'</span>).addClass(<span class="string">'copy-btn'</span>).append(<span class="string">'复制'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> code = $(<span class="keyword">this</span>).parent().find(<span class="string">'.code'</span>).find(<span class="string">'.line'</span>).map(<span class="function"><span class="keyword">function</span> (<span class="params">i, e</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> $(e).text();</span><br><span class="line">            &#125;).toArray().join(<span class="string">'\n'</span>);</span><br><span class="line">            <span class="keyword">var</span> ta = <span class="built_in">document</span>.createElement(<span class="string">'textarea'</span>);</span><br><span class="line">            <span class="keyword">var</span> yPosition = <span class="built_in">window</span>.pageYOffset || <span class="built_in">document</span>.documentElement.scrollTop;</span><br><span class="line">            ta.style.top = yPosition + <span class="string">'px'</span>; <span class="comment">// Prevent page scroll</span></span><br><span class="line">            ta.style.position = <span class="string">'absolute'</span>;</span><br><span class="line">            ta.style.opacity = <span class="string">'0'</span>;</span><br><span class="line">            ta.readOnly = <span class="literal">true</span>;</span><br><span class="line">            ta.value = code;</span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(ta);</span><br><span class="line">            ta.select();</span><br><span class="line">            ta.setSelectionRange(<span class="number">0</span>, code.length);</span><br><span class="line">            ta.readOnly = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">var</span> result = <span class="built_in">document</span>.execCommand(<span class="string">'copy'</span>);</span><br><span class="line">            <span class="keyword">if</span> (result) $(<span class="keyword">this</span>).text(<span class="string">'复制成功'</span>);</span><br><span class="line">            <span class="keyword">else</span> $(<span class="keyword">this</span>).text(<span class="string">'复制失败'</span>);</span><br><span class="line">            ta.blur(); <span class="comment">// For iOS</span></span><br><span class="line">            $(<span class="keyword">this</span>).blur();</span><br><span class="line">        &#125;)).on(<span class="string">'mouseleave'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> $b = $(<span class="keyword">this</span>).find(<span class="string">'.copy-btn'</span>);</span><br><span class="line">            setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $b.text(<span class="string">'复制'</span>);</span><br><span class="line">            &#125;, <span class="number">300</span>);</span><br><span class="line">        &#125;).append(e);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><strong>Ps:记得引入连个<code>js</code>文件</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo之瞎折腾系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加伊布模型</title>
      <link href="/2019/09/08/Hexo%E6%B7%BB%E5%8A%A0%E4%BC%8A%E5%B8%83%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/09/08/Hexo%E6%B7%BB%E5%8A%A0%E4%BC%8A%E5%B8%83%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>Hexo</code>添加伊布模型~!<br><a id="more"></a></p><h6 id="1-在layout-ejs中加入以下html代码片段"><a href="#1-在layout-ejs中加入以下html代码片段" class="headerlink" title="1. 在layout.ejs中加入以下html代码片段"></a>1. 在<code>layout.ejs</code>中加入以下<code>html</code>代码片段</h6><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eevee"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"message"</span>&gt;</span>嗨，你好啊~~<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"body"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"head"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ears"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ear"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"lobe"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"ear"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"lobe"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"face"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyes"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eye"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyelid"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eye"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"eyelid"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nose"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"mouth"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"chest"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fur"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"patch"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fur"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"patch"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"fur"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"patch"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"legs"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-leg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-leg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-leg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"leg"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"inner-leg"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail"</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"tail -end"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h6 id="2-js相关代码"><a href="#2-js相关代码" class="headerlink" title="2. js相关代码"></a>2. <code>js</code>相关代码</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="params">()</span> =&gt;</span> &#123;</span><br><span class="line"><span class="comment">//   伊布复制消息</span></span><br><span class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">'copy'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        showMessage(<span class="string">'&lt;span style="color:red;"&gt;你都复制了些什么呀，转载要记得加上出处哦~~&lt;/span&gt;'</span>, <span class="number">5000</span>);</span><br><span class="line">        <span class="keyword">var</span> seletedText = <span class="built_in">window</span>.getSelection()</span><br><span class="line">        <span class="keyword">if</span> (seletedText.toString().length &lt; <span class="number">88</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        addCopyright(e)</span><br><span class="line">        e.preventDefault()</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">renderTip</span>(<span class="params">template, context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> tokenReg = <span class="regexp">/(\\)?\&#123;([^\&#123;\&#125;\\]+)(\\)?\&#125;/g</span>;</span><br><span class="line">        <span class="keyword">return</span> template.replace(tokenReg, <span class="function"><span class="keyword">function</span> (<span class="params">word, slash1, token, slash2</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (slash1 || slash2) &#123;</span><br><span class="line">                <span class="keyword">return</span> word.replace(<span class="string">'\\'</span>, <span class="string">''</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">var</span> variables = token.replace(<span class="regexp">/\s/g</span>, <span class="string">''</span>).split(<span class="string">'.'</span>);</span><br><span class="line">            <span class="keyword">var</span> currentObject = context;</span><br><span class="line">            <span class="keyword">var</span> i, length, variable;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>, length = variables.length; i &lt; length; ++i) &#123;</span><br><span class="line">                variable = variables[i];</span><br><span class="line">                currentObject = currentObject[variable];</span><br><span class="line">                <span class="keyword">if</span> (currentObject === <span class="literal">undefined</span> || currentObject === <span class="literal">null</span>) <span class="keyword">return</span> <span class="string">''</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> currentObject;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">String</span>.prototype.renderTip = <span class="function"><span class="keyword">function</span> (<span class="params">context</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> renderTip(<span class="keyword">this</span>, context);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">initTips</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        $.ajax(&#123;</span><br><span class="line">            cache: <span class="literal">true</span>,</span><br><span class="line">            url: <span class="string">`http://localhost:4000/message.json`</span>,</span><br><span class="line">            dataType: <span class="string">"json"</span>,</span><br><span class="line">            success: <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">                <span class="built_in">console</span>.log(result);</span><br><span class="line">                $.each(result.mouseover, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>) </span>&#123;</span><br><span class="line">                    $(tips.selector).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> text = tips.text;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tips.text)) text = tips.text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * tips.text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">                        text = text.renderTip(&#123;</span><br><span class="line">                            text: $(<span class="keyword">this</span>).text()</span><br><span class="line">                        &#125;);</span><br><span class="line">                        showMessage(text, <span class="number">3000</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">                $.each(result.click, <span class="function"><span class="keyword">function</span> (<span class="params">index, tips</span>) </span>&#123;</span><br><span class="line">                    $(tips.selector).click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                        <span class="keyword">var</span> text = tips.text;</span><br><span class="line">                        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(tips.text)) text = tips.text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * tips.text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">                        text = text.renderTip(&#123;</span><br><span class="line">                            text: $(<span class="keyword">this</span>).text()</span><br><span class="line">                        &#125;);</span><br><span class="line">                        showMessage(text, <span class="number">3000</span>);</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化消息</span></span><br><span class="line">    initTips();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">showMessage</span>(<span class="params">text, timeout</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">Array</span>.isArray(text)) text = text[<span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * text.length + <span class="number">1</span>) - <span class="number">1</span>];</span><br><span class="line">        $(<span class="string">'.message'</span>).stop();</span><br><span class="line">        $(<span class="string">'.message'</span>).html(text).fadeTo(<span class="number">200</span>, <span class="number">1</span>);</span><br><span class="line">        timeout = timeout || <span class="number">5000</span>;</span><br><span class="line">        hideMessage(timeout);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">hideMessage</span>(<span class="params">timeout</span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'.message'</span>).stop().css(<span class="string">'opacity'</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (timeout === <span class="literal">null</span>) timeout = <span class="number">5000</span>;</span><br><span class="line">        $(<span class="string">'.message'</span>).delay(timeout).fadeTo(<span class="number">200</span>, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)();</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.setInterval(showHitokoto, <span class="number">30000</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showHitokoto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.getJSON(<span class="string">'https://v1.hitokoto.cn/'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        showMessage(result.hitokoto, <span class="number">5000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showHitokoto</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $.getJSON(<span class="string">''</span>, <span class="function"><span class="keyword">function</span> (<span class="params">result</span>) </span>&#123;</span><br><span class="line">        showMessage(result.hitokoto, <span class="number">5000</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo之瞎折腾系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>jenkins通过ssh发送文件或执行命令</title>
      <link href="/2019/09/07/jenkins%E9%80%9A%E8%BF%87ssh%E5%8F%91%E9%80%81%E6%96%87%E4%BB%B6%E6%88%96%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/09/07/jenkins%E9%80%9A%E8%BF%87ssh%E5%8F%91%E9%80%81%E6%96%87%E4%BB%B6%E6%88%96%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>jenkins</code>通过<code>ssh</code>执行命令配置~!<br><a id="more"></a></p><h5 id="1-需求"><a href="#1-需求" class="headerlink" title="1.需求:"></a>1.需求:</h5><p>由于使用<code>docker</code>部署的<code>jenkins</code>,在项目构建完成之后,需要调用宿主机的<code>shell</code>脚本把服务启动起来</p><h5 id="2-在jenkins安装Publish-over-SSH插件"><a href="#2-在jenkins安装Publish-over-SSH插件" class="headerlink" title="2.在jenkins安装Publish over SSH插件"></a>2.在<code>jenkins</code>安装<code>Publish over SSH</code>插件</h5><p>系统管理 &gt; 插件管理 &gt; 可选插件: 搜索<code>Publish over SSH</code>,直接安装即可.</p><h5 id="3-配置Publish-over-SSH"><a href="#3-配置Publish-over-SSH" class="headerlink" title="3.配置Publish over SSH"></a>3.配置<code>Publish over SSH</code></h5><p>系统管理 &gt; 系统设置 &gt; Publish over SSH</p><p><img src="/images/pasted-47.png" alt="filename already exists, renamed"></p><p>这里直接采用了登录账号和密码直接登录的,没有采用配置密钥的方式.</p><p>PS:配置完后,可以点击右下角的测试按钮检查是否能连接上,如果成功即配置完成了,失败就检查下登录名和密码吧…</p><h5 id="4-Publish-over-SSH使用"><a href="#4-Publish-over-SSH使用" class="headerlink" title="4.Publish over SSH使用"></a>4.<code>Publish over SSH</code>使用</h5><p>创建任务的时,在够建步骤中选择<strong>通过SSH发送文件或执行命令</strong>,</p><p><img src="/images/pasted-48.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 测试服务器搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux配置LD_LIBRARY_PATH环境变量</title>
      <link href="/2019/09/07/Linux%E9%85%8D%E7%BD%AELD-LIBRARY-PATH%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/"/>
      <url>/2019/09/07/Linux%E9%85%8D%E7%BD%AELD-LIBRARY-PATH%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>Linux</code>配置<code>LD_LIBRARY_PATH</code>环境变量~!<br><a id="more"></a><br>项目开发中有用到一些第三方的动态库(so),就需要把<code>.so</code>文件放置某个目录下,然后配置环境变量即可..</p><h6 id="修改-etc-profile文件-加入以下配置即可"><a href="#修改-etc-profile文件-加入以下配置即可" class="headerlink" title="修改/etc/profile文件.加入以下配置即可."></a>修改<code>/etc/profile</code>文件.加入以下配置即可.</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">export LD_LIBRARY_PATH=/home/yanfa_ylcloud_java/solib:$LD_LIBRARY_PATH</span><br></pre></td></tr></table></figure><h6 id="刷新配置"><a href="#刷新配置" class="headerlink" title="刷新配置"></a>刷新配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><p>Ps:刷下配置后发现还是没有效果,需要重新启动项目..</p><h6 id="修改后"><a href="#修改后" class="headerlink" title="修改后:"></a>修改后:</h6><p><img src="/images/pasted-54.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 测试服务器搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker部署jenkins</title>
      <link href="/2019/09/05/docker%E9%83%A8%E7%BD%B2jenkins/"/>
      <url>/2019/09/05/docker%E9%83%A8%E7%BD%B2jenkins/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>使用<code>docker</code>部署<code>jenkins</code>,实现流水线部署项目~!</p><p><code>jenkins</code>容器地址:<a href="https://hub.docker.com/r/jenkins/jenkins" target="_blank" rel="noopener">https://hub.docker.com/r/jenkins/jenkins</a><br><a id="more"></a></p><p>使用<code>docker</code>部署<code>jenkins</code>,实现流水线部署项目~!</p><p><code>jenkins</code>容器地址:<a href="https://hub.docker.com/r/jenkins/jenkins" target="_blank" rel="noopener">https://hub.docker.com/r/jenkins/jenkins</a></p><h5 id="1-直接拉去官方镜像"><a href="#1-直接拉去官方镜像" class="headerlink" title="1. 直接拉去官方镜像"></a>1. 直接拉去官方镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull jenkins/jenkins</span><br></pre></td></tr></table></figure><h5 id="2-启动jenkins"><a href="#2-启动jenkins" class="headerlink" title="2. 启动jenkins"></a>2. 启动jenkins</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 8081:8080 --name jenkins --privileged=true  -v /home/softs/jenkins:/var/jenkins_home jenkins/jenkins:latest</span><br></pre></td></tr></table></figure><h6 id="2-1-参数说明"><a href="#2-1-参数说明" class="headerlink" title="2.1 参数说明:"></a>2.1 参数说明:</h6><ul><li><strong>-d</strong>: 后台运行容器</li><li><strong>-p</strong>: 把容器<code>8080</code>端口映射到宿主机<code>8081</code>端口,浏览器访问<code>8081</code>端口即可.</li><li><strong>–name</strong>: 容器的别名</li><li><strong>-v</strong>: 数据卷,把容器中的<code>/var/jenkins_home</code>目录映射到宿主机的<code>/home/softs/jenkins`</code>目录上,可以与宿主机共享空间</li></ul><h6 id="2-2-进入容器获取jenkins初始密码"><a href="#2-2-进入容器获取jenkins初始密码" class="headerlink" title="2.2 进入容器获取jenkins初始密码"></a>2.2 进入容器获取jenkins初始密码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it jenkins /bin/bash</span><br><span class="line"></span><br><span class="line">cat /var/jenkins_home/secrets/initialAdminPassword</span><br></pre></td></tr></table></figure><h5 id="3-配置jenkins"><a href="#3-配置jenkins" class="headerlink" title="3. 配置jenkins"></a>3. 配置<code>jenkins</code></h5><ul><li>系统管理 <code>&gt;</code> 全局工具配置</li></ul><p><strong>JDK/Maven/Git</strong>:这里都是使用自动安装,也可用通过数据卷映射,使用宿主机的配置</p><p><img src="/images/pasted-49.png" alt="filename already exists, renamed"></p><p>Ps:自动安装<code>JDK</code>需要通过<code>Oracle</code>等账号下载安装,没有就需要去注册一个..</p><h5 id="4-新建任务测试"><a href="#4-新建任务测试" class="headerlink" title="4. 新建任务测试"></a>4. 新建任务测试</h5><ul><li>接下来建立一个任务测试</li></ul><p><img src="/images/pasted-50.png" alt="filename already exists, renamed"></p><ul><li>源码管理配置</li></ul><p><img src="/images/pasted-51.png" alt="filename already exists, renamed"></p><ul><li>构建以及需要执行的命令配置</li></ul><p><img src="/images/pasted-52.png" alt="filename already exists, renamed"></p><h5 id="5-执行构建任务"><a href="#5-执行构建任务" class="headerlink" title="5. 执行构建任务"></a>5. 执行构建任务</h5><ul><li>查看控制台:</li></ul><p><img src="/images/pasted-53.png" alt="filename already exists, renamed"></p><p><strong>SUCCESS:表示构建成功.</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 测试服务器搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> jenkins </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis常用配置</title>
      <link href="/2019/09/04/Redis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/09/04/Redis%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>redis</code>常用的配置~!</p><p>把<code>redis</code>安装上去后，接下来我们来了解一下<code>redis</code>的常用配置。</p><p><code>Redis</code>的配置文件在<code>redis</code>安装目录中，文件名叫<code>redis.conf</code><br><a id="more"></a></p><blockquote><p>我们已经把<code>redis</code>安装上去了，接下来我们来了解一下<code>redis</code>的常用配置。<br><code>Redis</code>的配置文件在<code>redis</code>安装目录中，文件名叫<code>redis.conf</code></p></blockquote><h6 id="1-端口-port"><a href="#1-端口-port" class="headerlink" title="1.端口:port"></a>1.端口:<code>port</code></h6><ul><li><strong>port</strong>：服务的端口号，默认为<code>6379</code></li></ul><h6 id="2-后台运行-daemonize"><a href="#2-后台运行-daemonize" class="headerlink" title="2.后台运行:daemonize"></a>2.后台运行:<code>daemonize</code></h6><ul><li><strong>daemonize</strong>：后台运行，值为<code>yes | no</code> 默认为<code>no</code></li></ul><h6 id="3-密码-requirepass"><a href="#3-密码-requirepass" class="headerlink" title="3.密码:requirepass"></a>3.密码:<code>requirepass</code></h6><ul><li><strong>requirepass</strong>：密码，默认是没有密码</li></ul><p>Ps:登录有密码的<code>redis</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">redis-cli -p 6379 -a &lt;密码&gt;</span><br><span class="line"></span><br><span class="line">auth &lt;密码&gt;</span><br></pre></td></tr></table></figure><ul><li>也可用登录<code>redis</code>命令设置密码,但这是一次性的,重启后失效</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 设置密码</span><br><span class="line">config set requirepass test123</span><br><span class="line"></span><br><span class="line">// 获取密码</span><br><span class="line">config get requirepass</span><br></pre></td></tr></table></figure><h6 id="4-保护模式-protected-mode"><a href="#4-保护模式-protected-mode" class="headerlink" title="4.保护模式:protected-mode"></a>4.保护模式:<code>protected-mode</code></h6><ul><li><strong>protected-mode</strong>：保护模式，值为<code>es | no</code>默认是<code>yes</code>，不能远程访问该<code>redis</code>服务，如果需要远程访问，则该为<code>no</code>。</li></ul><h6 id="5-绑定的IP地址"><a href="#5-绑定的IP地址" class="headerlink" title="5.绑定的IP地址"></a>5.绑定的<code>IP</code>地址</h6><ul><li><strong>bind</strong>：绑定的<code>IP</code>地址，默认是绑定本机地址<code>127.0.0.1</code>，如果需要其他IP能访问到该<code>redis</code>服务，则在这个属性添加<code>IP</code>地址，或者直接把该属性注释掉，这样所有的<code>IP</code>地址都可以访问</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 测试服务器搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Redis安装</title>
      <link href="/2019/09/04/Redis%E5%AE%89%E8%A3%85/"/>
      <url>/2019/09/04/Redis%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p><code>Linux</code>安装<code>redis</code>步骤记录~!<br><a id="more"></a></p><h5 id="1-安装gcc"><a href="#1-安装gcc" class="headerlink" title="1.安装gcc"></a>1.安装<code>gcc</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y gcc</span><br></pre></td></tr></table></figure><h5 id="2-下载所需的-redis-安装包，并上传至服务器"><a href="#2-下载所需的-redis-安装包，并上传至服务器" class="headerlink" title="2.下载所需的 redis 安装包，并上传至服务器"></a>2.下载所需的 <code>redis</code> 安装包，并上传至服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/home/softs/redis</span><br></pre></td></tr></table></figure><h5 id="3-解压安装包"><a href="#3-解压安装包" class="headerlink" title="3.解压安装包"></a>3.解压安装包</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf redis.x.tar.gz</span><br></pre></td></tr></table></figure><h5 id="4-进入-redis-根目录-执行编译与安装"><a href="#4-进入-redis-根目录-执行编译与安装" class="headerlink" title="4.进入 redis 根目录,执行编译与安装"></a>4.进入 <code>redis</code> 根目录,执行编译与安装</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><h5 id="5-进入src目录，启动-redis-服务器"><a href="#5-进入src目录，启动-redis-服务器" class="headerlink" title="5.进入src目录，启动 redis 服务器"></a>5.进入<code>src</code>目录，启动 <code>redis</code> 服务器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">redis-server</span><br></pre></td></tr></table></figure><h5 id="6-注册redis服务并设置后台运行"><a href="#6-注册redis服务并设置后台运行" class="headerlink" title="6.注册redis服务并设置后台运行"></a>6.注册<code>redis</code>服务并设置后台运行</h5><ul><li><p>1、修改<code>redis.conf</code>配置文件中的<code>daemonize</code>为<code>yes</code></p></li><li><p>2、找到 <code>redis</code> 根目录下面 <code>utils</code> 中的 <code>redis_init_script</code> 文件，并将其复制到 <code>/etc/init.d/</code> 后重命名为 <code>redis</code></p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /home/softs/reddis/utils/redis_init_script /etc/init.d/redis</span><br></pre></td></tr></table></figure><ul><li>3、修改 <code>/etc/init.d/redis</code> 配置，将相关的 <code>redis</code> 路径已经配置文件路径修改为你自己的 <code>redis</code> 所在位置的路径即可。</li></ul><p><img src="/images/pasted-46.png" alt="filename already exists, renamed"></p><ul><li><p>4、此时就可以后台的方式运行<code>redis</code>了，在任意地方执行<code>Linux</code>服务命令，后台运行<code>redis</code>服务：</p><p>开启服务：<code>service redis start</code></p><p>关闭服务：<code>service redis stop</code></p></li></ul><p>PS: （注意：如果<code>redis</code>设置了密码，那么需要在<code>/etc/init.d/redis</code>这个脚本文件<code>stop</code>项，把<code>$CLIEXEC -P $REDISPORT shutdown</code>这行配置添加一个密码：<code>-a YouPassword</code>）,否则<code>redis</code>将不能正常关闭。</p><h5 id="7-Redis客户端测试"><a href="#7-Redis客户端测试" class="headerlink" title="7. Redis客户端测试"></a>7. <code>Redis</code>客户端测试</h5><ul><li><p>进入<code>src</code>目录，运行<code>redis</code>的客户端程序:<code>redis-cli</code></p></li><li><p>参数：</p><p><strong>-h</strong> 主机<code>ip</code>（不写的话默认本机）<br><strong>-p</strong> 端口（不写的话默认<code>6379</code>）<br><strong>-a</strong> 密码</p><h5 id="8-开启远程连接"><a href="#8-开启远程连接" class="headerlink" title="8. 开启远程连接"></a>8. 开启远程连接</h5></li><li><p>1、把<code>redis.conf</code>配置文件的<code>protected-mode</code>属性修改为<code>no</code>，关闭<code>redis</code>的包含模式。</p></li><li><p>2、把<code>redis.conf</code>配置文件的bind属性注释掉，让所有远程的<code>IP</code>都可以访问到该<code>redis</code>的服务。</p></li><li><p>3、由于开启了远程连接，所以有必要设置<code>redis</code>的访问密码，不然的话安全性太低，在<code>redis.conf</code>配置文件中模式是没有密码这行配置的，需要添加密码的话则新增该属性：<code>requirepass</code>，属性值为密码字符串。</p></li><li><p>4、开启<code>6379</code>网络端口，并重新加载防火墙规则。</p></li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 测试服务器搭建记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> redis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LocalDate操作时间</title>
      <link href="/2019/08/10/LocalDate%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/"/>
      <url>/2019/08/10/LocalDate%E6%93%8D%E4%BD%9C%E6%97%B6%E9%97%B4/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录工具类<code>API</code>👇:</p><ul><li style="list-style:none"><input type="checkbox" checked> 字符串转<code>LocalDate</code></li><li style="list-style:none"><input type="checkbox" checked> 获取连续时间集合</li><li style="list-style:none"><input type="checkbox" checked> 获取连续时间集合</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认的时间格式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFUALT_SHOT_TIME_FORMAT = <span class="string">"yyyy-MM-dd"</span>;</span><br></pre></td></tr></table></figure><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 默认的时间格式</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFUALT_SHOT_TIME_FORMAT = <span class="string">"yyyy-MM-dd"</span>;</span><br></pre></td></tr></table></figure><h5 id="1-字符串转LocalDate"><a href="#1-字符串转LocalDate" class="headerlink" title="1. 字符串转LocalDate"></a>1. 字符串转<code>LocalDate</code></h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> time 时间yyyy-MM-dd</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">stringToLocalDate</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">       DateTimeFormatter df = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">       <span class="keyword">return</span> LocalDateTime.parse(time, df);</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="2-两个时间相差多少天"><a href="#2-两个时间相差多少天" class="headerlink" title="2. 两个时间相差多少天"></a>2. 两个时间相差多少天</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取两个时间相差多少天</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dates</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">long</span> <span class="title">getDiffDays</span><span class="params">(String[] dates)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (dates.length &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        DateTimeFormatter fmt = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">        LocalDate begin = LocalDate.parse(dates[<span class="number">0</span>], fmt);</span><br><span class="line">        LocalDate end = LocalDate.parse(dates[<span class="number">1</span>], fmt);</span><br><span class="line">        <span class="keyword">return</span> end.toEpochDay() - begin.toEpochDay() + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-获取连续时间集合"><a href="#3-获取连续时间集合" class="headerlink" title="3. 获取连续时间集合"></a>3. 获取连续时间集合</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 数据填充</span></span><br><span class="line"><span class="comment">    * 可操作: 天/周/月/年</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> time  间隔天数</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> begin 开始时间</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;String&gt; <span class="title">getRangeIncres2</span><span class="params">(<span class="keyword">long</span> time, String begin)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">       List&lt;String&gt; list = Lists.newArrayList();</span><br><span class="line">       DateTimeFormatter fmt = DateTimeFormatter.ofPattern(<span class="string">"yyyy-MM-dd"</span>);</span><br><span class="line">       LocalDate localDate = LocalDate.parse(begin, fmt);</span><br><span class="line">       <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; time; i++) &#123;</span><br><span class="line">           list.add(localDate.plusDays(i).toString());</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><h5 id="4-计算时间差-xx天xx小时xx分钟"><a href="#4-计算时间差-xx天xx小时xx分钟" class="headerlink" title="4. 计算时间差:xx天xx小时xx分钟"></a>4. 计算时间差:xx天xx小时xx分钟</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 计算时间差:xx天xx小时xx分钟</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> endDate 结束时间</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> beginDate 开始时间</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> List&lt;Long&gt; <span class="title">getDatePoor</span><span class="params">(Date endDate, Date beginDate)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">long</span> nd = <span class="number">1000</span> * <span class="number">24</span> * <span class="number">60</span> * <span class="number">60</span>;<span class="comment">//每天毫秒数</span></span><br><span class="line">       <span class="keyword">long</span> nh = <span class="number">1000</span> * <span class="number">60</span> * <span class="number">60</span>;<span class="comment">//每小时毫秒数</span></span><br><span class="line">       <span class="keyword">long</span> nm = <span class="number">1000</span> * <span class="number">60</span>;<span class="comment">//每分钟毫秒数</span></span><br><span class="line">       <span class="keyword">long</span> diff = endDate.getTime() - beginDate.getTime(); <span class="comment">// 获得两个时间的毫秒时间差异</span></span><br><span class="line">       <span class="keyword">long</span> day = diff / nd;   <span class="comment">// 计算差多少天</span></span><br><span class="line">       <span class="keyword">long</span> hour = diff % nd / nh; <span class="comment">// 计算差多少小时</span></span><br><span class="line">       <span class="keyword">long</span> min = diff % nd % nh / nm;  <span class="comment">// 计算差多少分钟</span></span><br><span class="line">       System.out.println(day + <span class="string">"天"</span> + hour + <span class="string">"小时"</span> + min + <span class="string">"分钟"</span>);</span><br><span class="line">       List&lt;Long&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">       list.add(day);</span><br><span class="line">       list.add(hour);</span><br><span class="line">       list.add(min);</span><br><span class="line">       <span class="keyword">return</span> list;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具类收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch 中boolQueryBuilder的使用</title>
      <link href="/2019/08/08/ElasticSearch-%E4%B8%ADboolQueryBuilder%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/08/08/ElasticSearch-%E4%B8%ADboolQueryBuilder%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p><code>Bool</code>查询现在包括四种子句，<code>must</code>，<code>filter</code>,<code>should</code>,<code>must_not</code>.</p><p><img src="/images/pasted-44.png" alt="filename already exists, renamed"><br><a id="more"></a></p><blockquote><p>转载自:<a href="https://blog.csdn.net/metheir/article/details/85080334" target="_blank" rel="noopener">https://blog.csdn.net/metheir/article/details/85080334</a></p></blockquote><h5 id="1-为什么filter会快？"><a href="#1-为什么filter会快？" class="headerlink" title="1. 为什么filter会快？"></a>1. 为什么filter会快？</h5><p><img src="/images/pasted-44.png" alt="filename already exists, renamed"><br>看上面的流程图就能很明显的看到，<code>filter</code>与<code>query</code>还是有很大的区别的。</p><p>比如，<code>query</code>的时候，会先比较查询条件，然后计算分值，最后返回文档结果；</p><p>而<code>filter</code>则是先判断是否满足查询条件，如果不满足，会缓存查询过程（记录该文档不满足结果）；满足的话，就直接缓存结果。</p><p>综上所述，<code>filter</code>快在两个方面：</p><ul><li>1 对结果进行缓存</li><li>2 避免计算分值</li></ul><h5 id="2-bool查询的使用"><a href="#2-bool查询的使用" class="headerlink" title="2. bool查询的使用"></a>2. bool查询的使用</h5><p><code>Bool</code>查询对应<code>Lucene</code>中的<code>BooleanQuery</code>,它由一个或者多个子句组成,每个子句都有特定的类型</p><p><strong>must</strong><br>返回的文档必须满足<code>must</code>子句的条件,并且参与计算分值</p><p><strong>filter</strong><br>返回的文档必须满足<code>filter</code>子句的条件,但是不会像<code>must</code>一样,参与计算分值</p><p><strong>should</strong><br>返回的文档可能满足<code>should</code>子句的条件.在一个<code>bool</code>查询中,如果没有<code>must</code>或者<code>filter</code>,有一个或者多个<code>should</code>子句,那么只要满足一个就可以返回.<code>minimum_should_match</code>参数定义了至少满足几个子句.</p><p><strong>must_not</strong><br>返回的文档必须不满足定义的条件</p><blockquote><p>如果一个查询既有<code>filter</code>又有<code>should</code>,那么至少包含一个<code>should</code>子句.</p></blockquote><p><code>bool</code>查询也支持禁用协同计分选项<code>disable_coord</code>.一般计算分值的因素取决于所有的查询条件.</p><p><code>bool</code>查询也是采用<code>more_matches_is_better</code>的机制,因此满足<code>must和should</code>子句的文档将会合并起来计算分值.</p><h5 id="3-JavaAPI使用"><a href="#3-JavaAPI使用" class="headerlink" title="3.JavaAPI使用"></a>3.JavaAPI使用</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Test</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">searchApi2</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">    SearchRequest searchRequest = <span class="keyword">new</span> SearchRequest(<span class="string">"item"</span>);</span><br><span class="line">    SearchSourceBuilder sourceBuilder = <span class="keyword">new</span> SearchSourceBuilder();</span><br><span class="line">    BoolQueryBuilder boolQueryBuilder = QueryBuilders.boolQuery();</span><br><span class="line">    <span class="comment">// 必须匹配条件</span></span><br><span class="line">    boolQueryBuilder.must(QueryBuilders.matchQuery(<span class="string">"scompCode"</span>, <span class="string">"G0000001"</span>));</span><br><span class="line">    <span class="comment">// 模糊查询</span></span><br><span class="line">    boolQueryBuilder.filter(QueryBuilders.wildcardQuery(<span class="string">"itemDesc"</span>, <span class="string">"*手机*"</span>));</span><br><span class="line">    <span class="comment">// 范围查询 from:相当于闭区间; gt:相当于开区间(&gt;) gte:相当于闭区间 (&gt;=) lt:开区间(&lt;) lte:闭区间 (&lt;=)</span></span><br><span class="line">    boolQueryBuilder.filter(QueryBuilders.rangeQuery(<span class="string">"itemPrice"</span>).from(<span class="number">4500</span>).to(<span class="number">8899</span>));</span><br><span class="line">    sourceBuilder.query(boolQueryBuilder);</span><br><span class="line"></span><br><span class="line">    searchRequest.source(sourceBuilder);</span><br><span class="line">    SearchResponse searchResponse = client.search(searchRequest, RequestOptions.DEFAULT);</span><br><span class="line">    logger.info(<span class="string">"查询数据:&#123;&#125;"</span>, Arrays.toString(searchResponse.getHits().getHits()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> ElasticSearch系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch API</title>
      <link href="/2019/08/07/ElasticSearch-API/"/>
      <url>/2019/08/07/ElasticSearch-API/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li><code>ElasticSearch java API</code>应用<blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.0/java-rest-high-document-index.html" target="_blank" rel="noopener">https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.0/java-rest-high-document-index.html</a></p><a id="more"></a></blockquote></li></ul><h5 id="1-创建索引"><a href="#1-创建索引" class="headerlink" title="1. 创建索引"></a>1. 创建索引</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ElasticsearchRestClient</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LogManager.getLogger(ElasticsearchRestClient.class);</span><br><span class="line">    <span class="meta">@Before</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">beforGet</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        client = <span class="keyword">new</span> RestHighLevelClient(</span><br><span class="line">                RestClient.builder(<span class="keyword">new</span> HttpHost(<span class="string">"106.14.116.156"</span>, <span class="number">9200</span>, <span class="string">"http"</span>)));</span><br><span class="line">        logger.info(<span class="string">"ES客户端初始化"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@After</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">afterGet</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        client.close();</span><br><span class="line">        logger.info(<span class="string">"关闭ES连接"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 创建索引</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@throws</span> IOException</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">createIndex</span><span class="params">()</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        GetIndexRequest getIndexRequest = <span class="keyword">new</span> GetIndexRequest(<span class="string">"item"</span>);</span><br><span class="line">        <span class="comment">// 索引是否存在</span></span><br><span class="line">        <span class="keyword">boolean</span> exists = client.indices().exists(getIndexRequest, RequestOptions.DEFAULT);</span><br><span class="line">        <span class="keyword">if</span> (!exists) &#123;</span><br><span class="line">            CreateIndexRequest request = <span class="keyword">new</span> CreateIndexRequest(<span class="string">"item"</span>);</span><br><span class="line">            XContentBuilder builder = XContentFactory.jsonBuilder();</span><br><span class="line">            builder.startObject();</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">// 固定格式</span></span><br><span class="line">                builder.startObject(<span class="string">"properties"</span>);</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="comment">// itemCode字段</span></span><br><span class="line">                    builder.startObject(<span class="string">"itemCode"</span>);</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// 字段属性</span></span><br><span class="line">                        builder.field(<span class="string">"type"</span>, <span class="string">"keyword"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    builder.endObject();</span><br><span class="line"></span><br><span class="line">                    <span class="comment">// itemDesc字段</span></span><br><span class="line">                    builder.startObject(<span class="string">"itemDesc"</span>);</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="comment">// 字段属性</span></span><br><span class="line">                        builder.field(<span class="string">"type"</span>, <span class="string">"keyword"</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                    builder.endObject();</span><br><span class="line">                &#125;</span><br><span class="line">                builder.endObject();</span><br><span class="line">            &#125;</span><br><span class="line">            builder.endObject();</span><br><span class="line"></span><br><span class="line">            request.mapping(<span class="string">"doc"</span>, builder);</span><br><span class="line">            CreateIndexResponse createIndexResponse = client.indices().create(request, RequestOptions.DEFAULT);</span><br><span class="line">            logger.info(<span class="string">"创建索引结果:&#123;&#125;"</span>, createIndexResponse.isAcknowledged());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            logger.info(<span class="string">"[employee]索引已经存在"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="2-新增数据"><a href="#2-新增数据" class="headerlink" title="2.新增数据"></a>2.新增数据</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 新增数据</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> client</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index   索引</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id   文档id</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> jsonMap 需要建立索引的数据 key:字段,value:值</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">index</span><span class="params">(RestHighLevelClient client, String index,String id, Map&lt;String, Object&gt; jsonMap)</span> </span>&#123;</span><br><span class="line">        IndexRequest indexRequest = <span class="keyword">new</span> IndexRequest(index);</span><br><span class="line">        <span class="comment">// id为空则自动生成id</span></span><br><span class="line">        <span class="keyword">if</span> (StringUtil.isNotEmpty(id)) &#123;</span><br><span class="line">            indexRequest.id(id);</span><br><span class="line">        &#125;</span><br><span class="line">        indexRequest.source(jsonMap);</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            IndexResponse response = client.index(indexRequest, RequestOptions.DEFAULT);</span><br><span class="line">            logger.info(<span class="string">"索引结果:&#123;&#125;"</span>, response.status().getStatus());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="3-删除数据"><a href="#3-删除数据" class="headerlink" title="3.删除数据"></a>3.删除数据</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除数据</span></span><br><span class="line"><span class="comment">     * </span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> client</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 文档id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(RestHighLevelClient client, String index,String id)</span> </span>&#123;</span><br><span class="line">        DeleteRequest request = <span class="keyword">new</span> DeleteRequest(index, id);</span><br><span class="line">        DeleteResponse deleteResponse = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            deleteResponse = client.delete(request, RequestOptions.DEFAULT);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            logger.warn(<span class="string">"ES删除异常信息:&#123;&#125;"</span>,e.getMessage());</span><br><span class="line">        &#125;</span><br><span class="line">        logger.warn(<span class="string">"删除结果:&#123;&#125;"</span>,deleteResponse.status().getStatus());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h5 id="4-更新数据"><a href="#4-更新数据" class="headerlink" title="4.更新数据"></a>4.更新数据</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> client</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> index 索引名称</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> id 文档id</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(RestHighLevelClient client, String index,String id,Map&lt;String,Object&gt; map)</span> </span>&#123;</span><br><span class="line">        UpdateRequest request = <span class="keyword">new</span> UpdateRequest(index,id);</span><br><span class="line">        request.doc(map);</span><br><span class="line">        UpdateResponse updateResponse = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            updateResponse = client.update(</span><br><span class="line">                    request, RequestOptions.DEFAULT);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        logger.warn(<span class="string">"ES更新结果:&#123;&#125;"</span>,updateResponse.getResult());</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> ElasticSearch系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程调试springboot项目</title>
      <link href="/2019/07/27/%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95springboot%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/07/27/%E8%BF%9C%E7%A8%8B%E8%B0%83%E8%AF%95springboot%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p><code>IDEA</code>远程调试项目~!</p><p><img src="/images/pasted-41.png" alt="filename already exists, renamed"><br><a id="more"></a></p><h5 id="1-配置远程"><a href="#1-配置远程" class="headerlink" title="1. 配置远程"></a>1. 配置远程</h5><ul><li>①</li></ul><p><img src="/images/pasted-39.png" alt="filename already exists, renamed"></p><ul><li>②</li></ul><p><img src="/images/pasted-40.png" alt="filename already exists, renamed"></p><ul><li>③</li></ul><p><img src="/images/pasted-41.png" alt="filename already exists, renamed"></p><h5 id="2-启动项目"><a href="#2-启动项目" class="headerlink" title="2. 启动项目"></a>2. 启动项目</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar -agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:8888 &lt;jar包名称&gt;</span><br></pre></td></tr></table></figure><h5 id="3-远程debug开始"><a href="#3-远程debug开始" class="headerlink" title="3. 远程debug开始"></a>3. 远程debug开始</h5><p><img src="/images/pasted-42.png" alt="filename already exists, renamed"></p><h5 id="4-连接成功"><a href="#4-连接成功" class="headerlink" title="4. 连接成功"></a>4. 连接成功</h5><p><img src="/images/pasted-43.png" alt="filename already exists, renamed"></p><p><strong>在本地打断点,访问服务器接口时,在本地即可实时调试了</strong></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具配置相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>阿里CodeGIT账号密码获取方法</title>
      <link href="/2019/07/22/%E9%98%BF%E9%87%8CCodeGIT%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95/"/>
      <url>/2019/07/22/%E9%98%BF%E9%87%8CCodeGIT%E8%B4%A6%E5%8F%B7%E5%AF%86%E7%A0%81%E8%8E%B7%E5%8F%96%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>输入<a href="https://code.aliyun.com" target="_blank" rel="noopener">https://code.aliyun.com</a> -&gt; 设置 -&gt; 个人设置 <code>Username</code> （<code>GIT</code>账号）</p><p>输入<a href="https://code.aliyun.com/profile/password/edit" target="_blank" rel="noopener">https://code.aliyun.com/profile/password/edit</a> -&gt; 忘记密码 –&gt;到邮箱重置密码 （<code>GIT</code>密码）</p><a id="more"></a><p>输入<a href="https://code.aliyun.com" target="_blank" rel="noopener">https://code.aliyun.com</a> -&gt; 设置 -&gt; 个人设置 <code>Username</code> （<code>GIT</code>账号）</p><p>输入<a href="https://code.aliyun.com/profile/password/edit" target="_blank" rel="noopener">https://code.aliyun.com/profile/password/edit</a> -&gt; 忘记密码 –&gt;到邮箱重置密码 （<code>GIT</code>密码）</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Alibaba Cloud Toolkit插件使用</title>
      <link href="/2019/07/22/Alibaba-Cloud-Toolkit%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/07/22/Alibaba-Cloud-Toolkit%E6%8F%92%E4%BB%B6%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p><code>Alibaba Cloud Toolkit</code> 工具一键部署本地<code>jar</code>包<br><img src="/images/pasted-38.png" alt="upload successful"><br><a id="more"></a></p><h5 id="1-安装-Alibaba-Cloud-Toolkit"><a href="#1-安装-Alibaba-Cloud-Toolkit" class="headerlink" title="1.安装 Alibaba Cloud Toolkit"></a>1.安装 Alibaba Cloud Toolkit</h5><p>直接在<code>IDEA</code>插件中搜索安装即可</p><h5 id="2-添加远程服务器"><a href="#2-添加远程服务器" class="headerlink" title="2.添加远程服务器"></a>2.添加远程服务器</h5><p><img src="/images/pasted-35.png" alt="filename already exists, renamed"></p><h5 id="3-配置打包部署项目"><a href="#3-配置打包部署项目" class="headerlink" title="3. 配置打包部署项目"></a>3. 配置打包部署项目</h5><p><img src="/images/pasted-34.png" alt="filename already exists, renamed"></p><p><img src="/images/pasted-36.png" alt="filename already exists, renamed"><br><img src="/images/pasted-37.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 插件使用系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 插件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>时间转cron表达式</title>
      <link href="/2019/07/15/%E6%97%B6%E9%97%B4%E8%BD%ACcron%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
      <url>/2019/07/15/%E6%97%B6%E9%97%B4%E8%BD%ACcron%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录一个时间转<code>cron</code>表达式的工具类<br><a id="more"></a></p><h5 id="DateToCronUtil"><a href="#DateToCronUtil" class="headerlink" title="DateToCronUtil"></a>DateToCronUtil</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/7/12 13:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DateToCronUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(DateToCronUtil.class);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEFUALT_LONG_TIME_FORMAT = <span class="string">"yyyy-MM-dd HH:mm:ss"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String H = <span class="string">"H"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String D = <span class="string">"D"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String W = <span class="string">"W"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String M = <span class="string">"M"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String Q = <span class="string">"Q"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String Y = <span class="string">"Y"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每小时</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_H_CRON = <span class="string">"0 H * * * ? *"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每天</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_D_CRON = <span class="string">"0 H D * * ? *"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每周</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_W_CRON = <span class="string">"0 H D ? * W"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每月</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_M_CRON = <span class="string">"0 H D M * ? *"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每季度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_Q_CRON = <span class="string">"0 H D M 1/3 ? *"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 每年</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">static</span> String DEFAULT_Y_CRON = <span class="string">"0 H D M Y ? *"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> LocalDateTime <span class="title">stringToLocalDate</span><span class="params">(String time)</span> </span>&#123;</span><br><span class="line">        DateTimeFormatter df = DateTimeFormatter.ofPattern(DEFUALT_LONG_TIME_FORMAT);</span><br><span class="line">        <span class="keyword">return</span> LocalDateTime.parse(time, df);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> time 时间 yyyy-MM-dd HH:mm</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> timeType 类型:H-&gt;小时,D-&gt;天,W-&gt;周,M-&gt;月,Q-&gt;季度,Y-&gt;每年</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getCron</span><span class="params">(String time, String timeType)</span> </span>&#123;</span><br><span class="line">        LocalDateTime localDateTime = stringToLocalDate(time);</span><br><span class="line">        logger.info(<span class="string">"localDateTime:&#123;&#125;"</span>, localDateTime);</span><br><span class="line">        <span class="keyword">if</span> (DateToCronUtil.H.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_H_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DateToCronUtil.D.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_D_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.HOUR_OF_DAY) + <span class="string">""</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DateToCronUtil.W.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_W_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.HOUR_OF_DAY) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.W, (localDateTime.get(ChronoField.DAY_OF_WEEK) == <span class="number">7</span> ? <span class="number">1</span> : localDateTime.get(ChronoField.DAY_OF_WEEK) + <span class="number">1</span>) + <span class="string">""</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DateToCronUtil.M.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_M_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.HOUR_OF_DAY) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.M, localDateTime.get(ChronoField.MONTH_OF_YEAR) + <span class="string">""</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DateToCronUtil.Q.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_Q_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.HOUR_OF_DAY) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.DAY_OF_MONTH) + <span class="string">""</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (DateToCronUtil.Y.equals(timeType)) &#123;</span><br><span class="line">            <span class="keyword">return</span> DEFAULT_Y_CRON.replace(DateToCronUtil.H, localDateTime.get(ChronoField.MINUTE_OF_HOUR) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.HOUR_OF_DAY) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.D, localDateTime.get(ChronoField.DAY_OF_MONTH) + <span class="string">""</span>)</span><br><span class="line">                    .replace(DateToCronUtil.Y, localDateTime.get(ChronoField.MONTH_OF_YEAR) + <span class="string">""</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> DEFAULT_D_CRON;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">get</span><span class="params">()</span> </span>&#123;</span><br><span class="line"><span class="comment">//        DateTimeFormatter df = DateTimeFormatter.ofPattern(DEFUALT_LONG_TIME_FORMAT);</span></span><br><span class="line"><span class="comment">//        LocalDateTime now = LocalDateTime.parse("2019-07-11 14:22",df);</span></span><br><span class="line"><span class="comment">//        System.out.println(now);</span></span><br><span class="line"><span class="comment">//        System.out.println(now.get(ChronoField.MINUTE_OF_HOUR));</span></span><br><span class="line">        String d = getCron(<span class="string">"2019-07-16 14:25:12"</span>, <span class="string">"W"</span>);</span><br><span class="line">        System.out.println(d);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具类收藏 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ElasticSearch 9200端口与9300端口的区别</title>
      <link href="/2019/07/06/ElasticSearch-JAVA%E5%AE%A2%E6%88%B7%E7%AB%AF-%E7%AB%AF%E5%8F%A3/"/>
      <url>/2019/07/06/ElasticSearch-JAVA%E5%AE%A2%E6%88%B7%E7%AB%AF-%E7%AB%AF%E5%8F%A3/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p><code>ES</code>启动监听两个端口:<code>9300</code>和<code>9200</code></p></blockquote><h5 id="9300端口"><a href="#9300端口" class="headerlink" title="9300端口"></a>9300端口</h5><p><code>9300</code>是<code>Tcp</code>协议端口:通过<code>Tcp</code>协议通讯,<code>ES</code>集群之间是通过<code>9300</code>进行通讯,<code>java</code>客户端(TransportClient)的方式也是以<code>Tcp</code>协议在<code>9300</code>端口上与集群进行通讯.</p><h5 id="9200端口"><a href="#9200端口" class="headerlink" title="9200端口"></a>9200端口</h5><p><code>9200</code>是<code>Http</code>协议端口:主要用于外部通讯,外部使用<code>RESTful</code>接口进行访问.<br><a id="more"></a></p><blockquote><p><code>ES</code>启动监听两个端口:<code>9300</code>和<code>9200</code></p></blockquote><h5 id="9300端口-1"><a href="#9300端口-1" class="headerlink" title="9300端口"></a>9300端口</h5><p><code>9300</code>是<code>Tcp</code>协议端口:通过<code>Tcp</code>协议通讯,<code>ES</code>集群之间是通过<code>9300</code>进行通讯,<code>java</code>客户端(TransportClient)的方式也是以<code>Tcp</code>协议在<code>9300</code>端口上与集群进行通讯.</p><h5 id="9200端口-1"><a href="#9200端口-1" class="headerlink" title="9200端口"></a>9200端口</h5><p><code>9200</code>是<code>Http</code>协议端口:主要用于外部通讯,外部使用<code>RESTful</code>接口进行访问.</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> ElasticSearch系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 简单部署 ElasticSearch</title>
      <link href="/2019/07/02/Docker-%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2-ElasticSearch/"/>
      <url>/2019/07/02/Docker-%E7%AE%80%E5%8D%95%E9%83%A8%E7%BD%B2-ElasticSearch/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.0/java-rest-high-getting-started-initialization.html" target="_blank" rel="noopener">ElasticSearch官网API</a></p></blockquote><h4 id="一、ElasticSearch是什么"><a href="#一、ElasticSearch是什么" class="headerlink" title="一、ElasticSearch是什么?"></a>一、ElasticSearch是什么?</h4><p><code>Elasticsearch</code>也使用Java开发并使用<code>Lucene</code>作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的<code>RESTful API</code>来隐藏<code>Lucene</code>的复杂性，从而让全文搜索变得简单。<br>不过，<code>Elasticsearch</code>不仅仅是<code>Lucene</code>和全文搜索，我们还能这样去描述它：</p><ul><li>分布式的实时文件存储，每个字段都被索引并可被搜索</li><li>分布式的实时分析搜索引擎</li><li><p>可以扩展到上百台服务器，处理PB级结构化或非结构化数据</p><a id="more"></a><blockquote><p><a href="https://www.elastic.co/guide/en/elasticsearch/client/java-rest/7.0/java-rest-high-getting-started-initialization.html" target="_blank" rel="noopener">ElasticSearch官网API</a></p></blockquote><h4 id="一、ElasticSearch是什么-1"><a href="#一、ElasticSearch是什么-1" class="headerlink" title="一、ElasticSearch是什么?"></a>一、ElasticSearch是什么?</h4><p><code>Elasticsearch</code>也使用Java开发并使用<code>Lucene</code>作为其核心来实现所有索引和搜索的功能，但是它的目的是通过简单的<code>RESTful API</code>来隐藏<code>Lucene</code>的复杂性，从而让全文搜索变得简单。<br>不过，<code>Elasticsearch</code>不仅仅是<code>Lucene</code>和全文搜索，我们还能这样去描述它：</p></li><li><p>分布式的实时文件存储，每个字段都被索引并可被搜索</p></li><li>分布式的实时分析搜索引擎</li><li>可以扩展到上百台服务器，处理PB级结构化或非结构化数据</li></ul><h4 id="二、Docker-部署-ElasticSearch"><a href="#二、Docker-部署-ElasticSearch" class="headerlink" title="二、Docker 部署 ElasticSearch"></a>二、Docker 部署 ElasticSearch</h4><h5 id="2-1-拉取镜像"><a href="#2-1-拉取镜像" class="headerlink" title="2.1 拉取镜像"></a>2.1 拉取镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull docker.elastic.co/elasticsearch/elasticsearch:7.0.0</span><br></pre></td></tr></table></figure><h5 id="2-2-运行容器"><a href="#2-2-运行容器" class="headerlink" title="2.2 运行容器"></a>2.2 运行容器</h5><p><code>ElasticSearch</code>的默认端口是9200，我们把宿主环境9200端口映射到<code>Docker</code>容器中的9200端口，就可以访问到<code>Docker</code>容器中的<code>ElasticSearch</code>服务了，同时我们把这个容器命名为es。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name es -p 9200:9200 -p 9300:9300 -e &quot;discovery.type=single-node&quot; &lt;容器ID&gt;</span><br></pre></td></tr></table></figure><h5 id="2-3-配置跨域"><a href="#2-3-配置跨域" class="headerlink" title="2.3 配置跨域"></a>2.3 配置跨域</h5><h6 id="2-3-1-进入容器"><a href="#2-3-1-进入容器" class="headerlink" title="2.3.1 进入容器"></a>2.3.1 进入容器</h6><p>由于要进行配置，因此需要进入容器当中修改相应的配置信息。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it es /bin/bash</span><br></pre></td></tr></table></figure><h6 id="2-3-2-进行配置"><a href="#2-3-2-进行配置" class="headerlink" title="2.3.2 进行配置"></a>2.3.2 进行配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># 显示文件</span><br><span class="line">ls</span><br><span class="line">结果如下：</span><br><span class="line">LICENSE.txt  README.textile  config  lib   modules</span><br><span class="line">NOTICE.txt   bin             data    logs  plugins</span><br><span class="line"></span><br><span class="line"># 进入配置文件夹</span><br><span class="line">cd config</span><br><span class="line"></span><br><span class="line"># 显示文件</span><br><span class="line">ls</span><br><span class="line">结果如下：</span><br><span class="line">elasticsearch.keystore  ingest-geoip  log4j2.properties  roles.yml  users_roles</span><br><span class="line">elasticsearch.yml       jvm.options   role_mapping.yml   users</span><br><span class="line"></span><br><span class="line"># 修改配置文件</span><br><span class="line">vi elasticsearch.yml</span><br><span class="line"></span><br><span class="line"># 加入跨域配置</span><br><span class="line">http.cors.enabled: true</span><br><span class="line">http.cors.allow-origin: &quot;*&quot;</span><br></pre></td></tr></table></figure><h5 id="2-3-重启容器"><a href="#2-3-重启容器" class="headerlink" title="2.3 重启容器"></a>2.3 重启容器</h5><p>由于修改了配置，因此需要重启<code>ElasticSearch</code>容器。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker restart es</span><br></pre></td></tr></table></figure><p>展示如下：<br><img src="/images/pasted-32.png" alt="filename already exists, renamed"></p><h4 id="三、Docker-部署-ElasticSearch-Head"><a href="#三、Docker-部署-ElasticSearch-Head" class="headerlink" title="三、Docker 部署 ElasticSearch-Head"></a>三、Docker 部署 ElasticSearch-Head</h4><p>为什么要安装<code>ElasticSearch-Head</code>呢，原因是需要有一个管理界面进行查看<code>ElasticSearch</code>相关信息</p><h5 id="3-1-拉取镜像"><a href="#3-1-拉取镜像" class="headerlink" title="3.1 拉取镜像"></a>3.1 拉取镜像</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure><h5 id="3-2-运行容器"><a href="#3-2-运行容器" class="headerlink" title="3.2 运行容器"></a>3.2 运行容器</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d --name es_admin -p 9100:9100 mobz/elasticsearch-head:5</span><br></pre></td></tr></table></figure><p>展示如下：<br><img src="/images/pasted-33.png" alt="filename already exists, renamed"></p><p>这样，我们就完成了用<code>Docker</code>提供<code>Elasticsearch</code>服务，而不污染宿主机环境了，这样还有一个好处，如果想同时启动多个不同版本的<code>Elastcsearch</code>或者其他服务，Docker也是一个理想的解决方案。</p><blockquote><p>原文出处:<a href="https://www.cnblogs.com/jianxuanbing/p/9410800.html" target="_blank" rel="noopener">https://www.cnblogs.com/jianxuanbing/p/9410800.html</a></p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> ElasticSearch系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ElasticSearch </tag>
            
            <tag> 转载 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dubbo隐式参数丢失问题</title>
      <link href="/2019/06/29/dubbo%E9%9A%90%E5%BC%8F%E5%8F%82%E6%95%B0%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/"/>
      <url>/2019/06/29/dubbo%E9%9A%90%E5%BC%8F%E5%8F%82%E6%95%B0%E4%B8%A2%E5%A4%B1%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>记录在消费端连续调用两次远程服务导致隐式参数丢失问题~!<br><a id="more"></a></p></blockquote><h5 id="演示代码"><a href="#演示代码" class="headerlink" title="演示代码"></a>演示代码</h5><ul><li>controller层</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Reference</span></span><br><span class="line">    <span class="keyword">private</span> ICarService iCarService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 传递参数</span></span><br><span class="line">        RpcContext.getContext().setAttachment(<span class="string">"TOKEN"</span>,<span class="string">"测试隐士参数传递"</span>);</span><br><span class="line">        iCarService.test();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"参数"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>服务层</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span>(retries = -<span class="number">1</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CeshiServiceImpl</span> <span class="keyword">implements</span> <span class="title">ICeshiService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(CeshiServiceImpl.class);</span><br><span class="line"></span><br><span class="line"><span class="meta">@Reference</span></span><br><span class="line">   <span class="keyword">private</span> ICarService iCarService;</span><br><span class="line">   <span class="meta">@Reference</span></span><br><span class="line">   <span class="keyword">private</span> IUserInfoService iUserInfoService;</span><br><span class="line">    </span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String token = RpcContext.getContext().getAttachment(<span class="string">"TOKEN"</span>);</span><br><span class="line">        logger.info(<span class="string">"token信息:&#123;&#125;"</span>, token);</span><br><span class="line">        <span class="comment">// 第一次调用rpc服务</span></span><br><span class="line">        iCarService.test();</span><br><span class="line">        logger.info(<span class="string">"token信息:&#123;&#125;"</span>, RpcContext.getContext().getAttachment(<span class="string">"TOKEN"</span>));</span><br><span class="line">        <span class="comment">// 第二次调用rpc服务</span></span><br><span class="line">        iUserInfoService.test();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>ICarServiceImpl</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span>(retries = -<span class="number">1</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarServiceImpl</span> <span class="keyword">implements</span> <span class="title">ICarService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(CarServiceImpl.class);</span><br><span class="line">    </span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String token = RpcContext.getContext().getAttachment(<span class="string">"TOKEN"</span>);</span><br><span class="line">        logger.info(<span class="string">"carService:&#123;&#125;"</span>,token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>userInfoServiceImpl</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span>(retries = -<span class="number">1</span>)</span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserInfoServiceImpl</span> <span class="keyword">implements</span> <span class="title">IUserInfoService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Logger logger = LoggerFactory.getLogger(UserInfoServiceImpl.class);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String token = RpcContext.getContext().getAttachment(<span class="string">"TOKEN"</span>);</span><br><span class="line">        logger.info(<span class="string">"userInfoService:&#123;&#125;"</span>,token);</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="打印结果"><a href="#打印结果" class="headerlink" title="打印结果"></a>打印结果</h5><ul><li><p>ceshiService结果<br><img src="/images/pasted-29.png" alt="filename already exists, renamed"></p></li><li><p>ICarServiceImpl结果</p></li></ul><p><img src="/images/pasted-31.png" alt="filename already exists, renamed"></p><ul><li>userInfoServiceImpl结果</li></ul><p><img src="/images/pasted-30.png" alt="filename already exists, renamed"></p><h5 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Activate</span>(group = Constants.CONSUMER, order = -<span class="number">10000</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ConsumerContextFilter</span> <span class="keyword">implements</span> <span class="title">Filter</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Result <span class="title">invoke</span><span class="params">(Invoker&lt;?&gt; invoker, Invocation invocation)</span> <span class="keyword">throws</span> RpcException </span>&#123;</span><br><span class="line">        RpcContext.getContext()</span><br><span class="line">                .setInvoker(invoker)</span><br><span class="line">                .setInvocation(invocation)</span><br><span class="line">                .setLocalAddress(NetUtils.getLocalHost(), <span class="number">0</span>)</span><br><span class="line">                .setRemoteAddress(invoker.getUrl().getHost(),</span><br><span class="line">                        invoker.getUrl().getPort());</span><br><span class="line">        <span class="keyword">if</span> (invocation <span class="keyword">instanceof</span> RpcInvocation) &#123;</span><br><span class="line">            ((RpcInvocation) invocation).setInvoker(invoker);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> invoker.invoke(invocation);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 清空隐式参数</span></span><br><span class="line">            RpcContext.getContext().clearAttachments();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>消费端在执行Rpc调用之前，经过Filter处理, 会将信息写入RpcContex,而且在每次调用rpc后都会把隐式参数清空,所以在第二次调用rpc就无法拿到之前的隐式参数了</p></blockquote><h5 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h5><ul><li>Filter何时进行url过滤</li></ul><blockquote><p>filter（过滤器）作用于在intreceptor(拦截器)之前，不像intreceptor一样依赖于springmvc框架，只需要依赖于serverlet。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Dubbo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基本命令使用</title>
      <link href="/2019/06/24/docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/06/24/docker%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录<code>docker</code>常用命令<br><a id="more"></a></p><h6 id="1-查看本地镜像列表"><a href="#1-查看本地镜像列表" class="headerlink" title="1. 查看本地镜像列表"></a>1. 查看本地镜像列表</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images</span><br></pre></td></tr></table></figure><h6 id="2-查看运行中的容器"><a href="#2-查看运行中的容器" class="headerlink" title="2. 查看运行中的容器"></a>2. 查看运行中的容器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><h6 id="3-查看所有容器-包括未运行的"><a href="#3-查看所有容器-包括未运行的" class="headerlink" title="3. 查看所有容器(包括未运行的)"></a>3. 查看所有容器(包括未运行的)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a</span><br></pre></td></tr></table></figure><h6 id="4-删除镜像"><a href="#4-删除镜像" class="headerlink" title="4. 删除镜像"></a>4. 删除镜像</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi &lt;镜像ID&gt;</span><br></pre></td></tr></table></figure><h6 id="5-run命令"><a href="#5-run命令" class="headerlink" title="5. run命令"></a>5. run命令</h6><ul><li>docker run [参数] [镜像id] | [镜像名]:[镜像标签] [命令]</li></ul><blockquote><p>-i 表示容器的输入终端保持打开,不直接关闭<br>-t 表示开启一个虚拟终端, 绑定到标准输入上<br>-d 表示让该容器在后台运行<br>–name 给该容器起一个容器名，如果没有此参数，则有一个默认的容器名<br>–rm 停止该容器时，把容器删除掉</p></blockquote><h6 id="6-使用镜像运行容器"><a href="#6-使用镜像运行容器" class="headerlink" title="6. 使用镜像运行容器"></a>6. 使用镜像运行容器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it --name &lt;容器名称&gt; -d -p &lt;port:port&gt; &lt;镜像ID&gt;</span><br></pre></td></tr></table></figure><h6 id="7-启动容器"><a href="#7-启动容器" class="headerlink" title="7. 启动容器"></a>7. 启动容器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker start &lt;容器ID&gt;</span><br></pre></td></tr></table></figure><h6 id="8-停止容器"><a href="#8-停止容器" class="headerlink" title="8. 停止容器"></a>8. 停止容器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stop &lt;容器ID&gt;</span><br></pre></td></tr></table></figure><h6 id="9-删除容器"><a href="#9-删除容器" class="headerlink" title="9. 删除容器"></a>9. 删除容器</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm &lt;容器ID&gt;</span><br></pre></td></tr></table></figure><h6 id="10-查看docker的所有容器运行状态"><a href="#10-查看docker的所有容器运行状态" class="headerlink" title="10. 查看docker的所有容器运行状态"></a>10. 查看docker的所有容器运行状态</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker stats</span><br></pre></td></tr></table></figure><h6 id="11-进入容器里面"><a href="#11-进入容器里面" class="headerlink" title="11. 进入容器里面"></a>11. 进入容器里面</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it &lt;容器ID&gt; /bin/bash</span><br></pre></td></tr></table></figure><h6 id="12-查看容器运行日志-类似-tail-f-命令"><a href="#12-查看容器运行日志-类似-tail-f-命令" class="headerlink" title="12. 查看容器运行日志(类似 tail -f 命令)"></a>12. 查看容器运行日志(类似 <code>tail -f</code> 命令)</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs -f &lt;容器ID/名称&gt;</span><br></pre></td></tr></table></figure><h6 id="13-构建镜像"><a href="#13-构建镜像" class="headerlink" title="13. 构建镜像"></a>13. 构建镜像</h6><ul><li>进入存放<code>dockerfile</code>目录,执行构建命令</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build -t [镜像名]:[镜像标签] [存放dockerfile的目录]</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> docker容器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用 JConsole 监控 springboot 项目</title>
      <link href="/2019/06/24/%E4%BD%BF%E7%94%A8-JConsole-%E7%9B%91%E6%8E%A7-springboot-%E9%A1%B9%E7%9B%AE/"/>
      <url>/2019/06/24/%E4%BD%BF%E7%94%A8-JConsole-%E7%9B%91%E6%8E%A7-springboot-%E9%A1%B9%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>JConsole 使用记录~!<br><a id="more"></a></p><h5 id="添加启动参数"><a href="#添加启动参数" class="headerlink" title="添加启动参数"></a>添加启动参数</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar </span><br><span class="line">-Djava.rmi.server.hostname=x.x.x.x # 服务ip</span><br><span class="line">-Dcom.sun.management.jmxremote </span><br><span class="line">-Dcom.sun.management.jmxremote.port=1099 # 端口(不能与服务端口冲突)</span><br><span class="line">-Dcom.sun.management.jmxremote.authenticate=<span class="keyword">false</span> </span><br><span class="line">-Dcom.sun.management.jmxremote.ssl=<span class="keyword">false</span> </span><br><span class="line">-Xms200m -Xmx200m ylcloud-item-service-<span class="number">0.0</span>.1-SNAPSHOT.jar &gt; /pro/test/home/yanfa/nohup_item.out &amp; <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure><h5 id="启动JConsole"><a href="#启动JConsole" class="headerlink" title="启动JConsole"></a>启动<code>JConsole</code></h5><p>直接在<code>windows</code>命令窗口输入<code>JConsole</code></p><p><img src="/images/pasted-28.png" alt="filename already exists, renamed"></p><p>选择远程进程输入对应的<code>ip:port</code>即可</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dubbo重试机制</title>
      <link href="/2019/06/15/Dubbo%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6/"/>
      <url>/2019/06/15/Dubbo%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p><a href="http://dubbo.apache.org/zh-cn/docs/user/references/xml/dubbo-service.html" target="_blank" rel="noopener">DUBBO中文官方文档</a></p></blockquote><p>记录<code>Dubbo</code>重试机制配置~!<br><a id="more"></a></p><blockquote><p><a href="http://dubbo.apache.org/zh-cn/docs/user/references/xml/dubbo-service.html" target="_blank" rel="noopener">DUBBO中文官方文档</a></p></blockquote><h5 id="默认重试次数-2"><a href="#默认重试次数-2" class="headerlink" title="默认重试次数: 2"></a>默认重试次数: 2</h5><p>在官方文档中有介绍到<code>dubbo</code>的重试次数默认是<code>2</code></p><table><thead><tr><th>属性</th><th>对应URL参数</th><th>类型</th><th>是否必填</th><th>缺省值</th><th>作用</th><th>描述</th><th>兼容性</th></tr></thead><tbody><tr><td>retries</td><td>retries</td><td>int</td><td>可选</td><td>2</td><td>性能调优</td><td>远程服务调用重试次数，不包括第一次调用，不需要重试请设为0</td><td>2.0.0以上版本</td></tr></tbody></table><h5 id="修改重试次数"><a href="#修改重试次数" class="headerlink" title="修改重试次数"></a>修改重试次数</h5><ul><li><code>duboo-provider.xml</code>配置方式: 在<code>dubbo:service</code>配置<code>retries</code>参数</li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--常用菜单推荐--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dubbo:service</span> <span class="attr">ref</span>=<span class="string">"userMenuClickFacade"</span> <span class="attr">interface</span>=<span class="string">"com.ylcloud.user.facade.UserMenuClickFacade"</span> <span class="attr">retries</span>=<span class="string">"1"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"userMenuClickFacade"</span> <span class="attr">class</span>=<span class="string">"com.ylcloud.user.facade.impl.UserMenuClickFacadeImpl"</span>/&gt;</span></span><br></pre></td></tr></table></figure><h4 id="使用注解"><a href="#使用注解" class="headerlink" title="使用注解"></a>使用注解</h4><ul><li><p>如果使用的<code>@Service</code>配置重试次数,不设置<code>retries</code>参数,那么该参数默认值是0,但是不管显示配置<code>retries</code>为<code>0</code>,还是不显示设置,<code>0</code>都是使用<code>dubbo</code>默认的重试次数</p></li><li><p>如果要配置重试次数为<code>0</code>,只有把<code>retries</code>小于<code>0</code>才会起作用</p></li><li><p>如果使用<code>@Reference</code>引用服务时配置了<code>retries</code>,重试次数以改次数为准</p></li><li><p>只有显示设置<code>retries</code>大于或等于<code>1</code>才会起作用</p><h4 id="dubbo相关代码-dubbo版本-2-6-1"><a href="#dubbo相关代码-dubbo版本-2-6-1" class="headerlink" title="dubbo相关代码(dubbo版本:2.6.1)"></a>dubbo相关代码(dubbo版本:2.6.1)</h4></li><li><code>package com.alibaba.dubbo.rpc.cluster.support.FailoverClusterInvoker;</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Result <span class="title">doInvoke</span><span class="params">(Invocation invocation, <span class="keyword">final</span> List&lt;Invoker&lt;T&gt;&gt; invokers, LoadBalance loadbalance)</span> <span class="keyword">throws</span> RpcException </span>&#123;</span><br><span class="line">        List&lt;Invoker&lt;T&gt;&gt; copyinvokers = invokers;</span><br><span class="line">        checkInvokers(copyinvokers, invocation);</span><br><span class="line">        <span class="comment">// len:最多调用次数--&gt; 重试次数 + 1</span></span><br><span class="line">        <span class="keyword">int</span> len = getUrl().getMethodParameter(invocation.getMethodName(), Constants.RETRIES_KEY, Constants.DEFAULT_RETRIES) + <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 控制至少调用一次:即重试次数为 0</span></span><br><span class="line">        <span class="keyword">if</span> (len &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">            len = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="comment">/** 部分源码省略**/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="dubbo注册服务相关代码"><a href="#dubbo注册服务相关代码" class="headerlink" title="dubbo注册服务相关代码"></a>dubbo注册服务相关代码</h4><ul><li><code>package com.alibaba.dubbo.config.AbstractConfig;</code></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">appendAnnotation</span><span class="params">(Class&lt;?&gt; annotationClass, Object annotation)</span> </span>&#123;</span><br><span class="line"><span class="comment">/** 省略部分代码 **/</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// 获取直接配置的数据</span></span><br><span class="line">Object value = method.invoke(annotation, <span class="keyword">new</span> Object[<span class="number">0</span>]);</span><br><span class="line"><span class="comment">// 如果不为空并且不等于默认值,则注册url中</span></span><br><span class="line"><span class="keyword">if</span> (value != <span class="keyword">null</span> &amp;&amp; !value.equals(method.getDefaultValue())) &#123;</span><br><span class="line">   </span><br><span class="line"><span class="comment">/** 省略部分代码 **/</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line"><span class="comment">/** 省略部分代码 **/</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>所以如果使用注解配置重试次数,如果配置的是默认值,则不会注册到url中,会使用dubbo默认的值</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Dubbo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx+ffmpeg搭建推流服务器</title>
      <link href="/2019/06/14/Nginx-ffmpeg%E6%90%AD%E5%BB%BA%E6%8E%A8%E6%B5%81%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2019/06/14/Nginx-ffmpeg%E6%90%AD%E5%BB%BA%E6%8E%A8%E6%B5%81%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>环境👇:</p><ul><li>CentOS7</li></ul><p>搭建推流服务器~!<br><a id="more"></a></p><h5 id="安装Nginx-忽略"><a href="#安装Nginx-忽略" class="headerlink" title="安装Nginx(忽略)"></a>安装<code>Nginx</code>(忽略)</h5><ul><li>略<h5 id="直接进入到Nginx的解压目录"><a href="#直接进入到Nginx的解压目录" class="headerlink" title="直接进入到Nginx的解压目录"></a>直接进入到<code>Nginx</code>的解压目录</h5></li></ul><p>// 参考:这是我目录<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/softs/nginx-1.10.1</span><br></pre></td></tr></table></figure><p></p><ul><li>目录下面的内容:</li></ul><p><img src="/images/pasted-26.png" alt="filename already exists, renamed"></p><h5 id="下载nginx-rtmp-module-并解压"><a href="#下载nginx-rtmp-module-并解压" class="headerlink" title="下载nginx-rtmp-module,并解压"></a>下载<code>nginx-rtmp-module</code>,并解压</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/arut/nginx-rtmp-module/archive/master.zip</span><br><span class="line"></span><br><span class="line">unzip  master.zip</span><br></pre></td></tr></table></figure><h5 id="先备份Nginx-稳点来"><a href="#先备份Nginx-稳点来" class="headerlink" title="先备份Nginx(稳点来)"></a>先备份<code>Nginx</code>(稳点来)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h5 id="重新配置Nginx"><a href="#重新配置Nginx" class="headerlink" title="重新配置Nginx"></a>重新配置<code>Nginx</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-http_ssl_module --add-module=/usr/local/softs/nginx-1.10.1/nginx-rtmp-module-master</span><br><span class="line"></span><br><span class="line">make</span><br></pre></td></tr></table></figure><p>PS: 用<code>make</code>,不要使用<code>make install</code>,不然会覆盖已经添加的模块<br>(网上是这么说的,但是好像没有效果,我之前装了<code>ssl</code>模块的,直接就给我覆盖掉了)</p><p>因为我之前就加了个<code>ssl</code>模块,所有我直接在配置上加上了,不过之前也有备份</p><h5 id="将新的nginx覆盖旧安装目录"><a href="#将新的nginx覆盖旧安装目录" class="headerlink" title="将新的nginx覆盖旧安装目录"></a>将新的<code>nginx</code>覆盖旧安装目录</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h5 id="修改Nginx配置文件-nginx-conf"><a href="#修改Nginx配置文件-nginx-conf" class="headerlink" title="修改Nginx配置文件(nginx.conf)"></a>修改<code>Nginx</code>配置文件(<code>nginx.conf</code>)</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">rtmp &#123;                #RTMP服务</span><br><span class="line">    server &#123;</span><br><span class="line">       listen 1935;  #//服务端口</span><br><span class="line">       chunk_size 4096;   #//数据传输块的大小</span><br><span class="line">       application vod &#123;</span><br><span class="line">           play /opt/video; #//视频文件存放位置。</span><br><span class="line">       &#125;</span><br><span class="line">       application live&#123; #直播</span><br><span class="line">           live on;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PS: rtmp是一个单独的模块,不要放在<code>http</code>里面</p><h5 id="重启Nginx"><a href="#重启Nginx" class="headerlink" title="重启Nginx"></a>重启<code>Nginx</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/sbin</span><br><span class="line"></span><br><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><h5 id="安装EPEL-Release，因为安装需要使用其他的repo源，所以需要EPEL支持"><a href="#安装EPEL-Release，因为安装需要使用其他的repo源，所以需要EPEL支持" class="headerlink" title="安装EPEL Release，因为安装需要使用其他的repo源，所以需要EPEL支持"></a>安装<code>EPEL Release</code>，因为安装需要使用其他的<code>repo</code>源，所以需要EPEL支持</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y epel-release</span><br></pre></td></tr></table></figure><h5 id="安装完成之后，可以查看是否安装成功"><a href="#安装完成之后，可以查看是否安装成功" class="headerlink" title="安装完成之后，可以查看是否安装成功"></a>安装完成之后，可以查看是否安装成功</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum repolist</span><br></pre></td></tr></table></figure><h5 id="安装nux-dextop-源"><a href="#安装nux-dextop-源" class="headerlink" title="安装nux-dextop 源"></a>安装nux-dextop 源</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm</span><br></pre></td></tr></table></figure><h5 id="安装ffmpeg"><a href="#安装ffmpeg" class="headerlink" title="安装ffmpeg"></a>安装<code>ffmpeg</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y ffmpeg</span><br></pre></td></tr></table></figure><h5 id="安装完成后检查ffmpeg-版本"><a href="#安装完成后检查ffmpeg-版本" class="headerlink" title="安装完成后检查ffmpeg 版本"></a>安装完成后检查ffmpeg 版本</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -version</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-27.png" alt="filename already exists, renamed"></p><h5 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -re -i lgz.mp4 -c copy -f flv rtmp://localhost:1935/live/film</span><br></pre></td></tr></table></figure><h5 id="使用VLC"><a href="#使用VLC" class="headerlink" title="使用VLC"></a>使用<code>VLC</code></h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rtmp://&#123;你的服务IP&#125;:1935/live/film</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
            <tag> 推流服务器 </tag>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>结束Windows占用端口进程</title>
      <link href="/2019/06/12/%E7%BB%93%E6%9D%9FWindows%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E8%BF%9B%E7%A8%8B/"/>
      <url>/2019/06/12/%E7%BB%93%E6%9D%9FWindows%E5%8D%A0%E7%94%A8%E7%AB%AF%E5%8F%A3%E8%BF%9B%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>netstat -ano | findstr 80 //列出进程极其占用的端口，且包含 80<br>tasklist | findstr 9268<br>taskkill -PID &lt;进程号&gt; -F //强制关闭某个进程<br><a id="more"></a></p><!-- rebuild by neat -->]]></content>
      
      
      
        <tags>
            
            <tag> Windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL函数使用记录</title>
      <link href="/2019/06/06/QL%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2019/06/06/QL%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>sql函数使用记录~!</p><a id="more"></a><h5 id="SUM函数中使用case"><a href="#SUM函数中使用case" class="headerlink" title="SUM函数中使用case"></a><code>SUM</code>函数中使用<code>case</code></h5><h6 id="统计t1-groupNumber大于2的数量"><a href="#统计t1-groupNumber大于2的数量" class="headerlink" title="统计t1.groupNumber大于2的数量"></a>统计<code>t1.groupNumber</code>大于2的数量</h6><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> </span><br><span class="line"><span class="keyword">IF</span>(</span><br><span class="line"><span class="keyword">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> t1.groupNumber &gt; <span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) / <span class="keyword">COUNT</span>(t1.groupNumber),</span><br><span class="line"><span class="keyword">SUM</span>(<span class="keyword">case</span> <span class="keyword">when</span> t1.groupNumber &gt; <span class="number">2</span> <span class="keyword">then</span> <span class="number">1</span> <span class="keyword">else</span> <span class="number">0</span> <span class="keyword">end</span>) / <span class="keyword">COUNT</span>(t1.groupNumber),</span><br><span class="line"><span class="number">0</span></span><br><span class="line">) <span class="keyword">AS</span> fgl </span><br><span class="line"><span class="keyword">FROM</span> </span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(visitor_code) groupNumber <span class="keyword">FROM</span> sales_order <span class="keyword">WHERE</span> scomp_code = <span class="string">'G0000001'</span> <span class="keyword">GROUP</span> <span class="keyword">BY</span> visitor_code) t1;</span><br></pre></td></tr></table></figure><h6 id="格式化日期分组查询"><a href="#格式化日期分组查询" class="headerlink" title="格式化日期分组查询"></a>格式化日期分组查询</h6><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>DATE_FORMAT(creater_time,’%Y-%m’)</td><td>订货日期(日)</td></tr><tr><td>DATE_FORMAT(creater_time,’%Y-%m-%d’)</td><td>订货日期(月)</td></tr></tbody></table><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="number">1</span>),<span class="keyword">DATE_FORMAT</span>(creater_time,<span class="string">'%Y-%m-%d'</span>) <span class="keyword">FROM</span> patrolshop_plan <span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">DATE_FORMAT</span>(creater_time,<span class="string">'%Y-%m-%d'</span>)</span><br></pre></td></tr></table></figure><ul><li>日效果:</li></ul><p><img src="/images/pasted-24.png" alt="filename already exists, renamed"></p><ul><li>月效果:</li></ul><p><img src="/images/pasted-25.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> MySQL数据库系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQL函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xml文件注释注意事项</title>
      <link href="/2019/06/06/xml%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>/2019/06/06/xml%E6%96%87%E4%BB%B6%E6%B3%A8%E9%87%8A%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>记录一个调试中偶然碰到的问题~!</p><p>在mapper.xml文件中注释语句必须使用<code>&lt;!-- --&gt;</code><br><a id="more"></a><br>在一次调试中直接在<code>mapper.xml</code>顺手使用<code>CTRL + /</code>了快捷键注释:<code>#</code>符号</p><p>然而那一行代码也是变灰了也就没留意</p><p>在访问的时候直接报错了</p><p>之后换成<code>&lt;!-- --&gt;</code>即可</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> BUG系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sourcetree 更新git账号密码</title>
      <link href="/2019/05/31/sourectree%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/05/31/sourectree%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>Sourcetree记录~!<br><a id="more"></a></p><h5 id="更新git密码"><a href="#更新git密码" class="headerlink" title="更新git密码"></a>更新git密码</h5><p>使用sourcetree时登录git账号,git账号修改了密码后sourcetree在<strong>提交/拉取</strong>代码时只会报错,并不会弹出git登录窗口让用户重新登录.</p><h5 id="解决方法-windows"><a href="#解决方法-windows" class="headerlink" title="解决方法: windows"></a>解决方法: windows</h5><p>进入以下目录,删除<code>passwd</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\USERNAME\AppData\Local\Atlassian\SourceTree</span><br></pre></td></tr></table></figure><p>删除文件后,再次<strong>拉取/提交</strong>代码就会弹出git登录窗口</p><h5 id="修改git登录名称"><a href="#修改git登录名称" class="headerlink" title="修改git登录名称"></a>修改git登录名称</h5><p>sourcetree重新登录git时无法修改用户名称</p><h5 id="解决方法-windows-1"><a href="#解决方法-windows-1" class="headerlink" title="解决方法: windows"></a>解决方法: windows</h5><p>进入上面目录,修改<code>userhosts</code>文件对应的登录名称即可</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ZK分布式锁</title>
      <link href="/2019/05/17/ZK%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/"/>
      <url>/2019/05/17/ZK%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>只做记录<a id="more"></a><h5 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h5>使用<code>curator</code>客户端操作<code>zookeeper</code></li><li>引入依赖</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 版本号 --&gt;</span><br><span class="line">&lt;curator.version&gt;4.0.0&lt;/curator.version&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- ZK客户端:curator --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.curator&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;curator-recipes&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;$&#123;curator.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ul><li><code>zookeeper</code>相关依赖</li></ul><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 版本号 --&gt;</span><br><span class="line">&lt;zookeeper.version&gt;3.4.10&lt;/zookeeper.version&gt;</span><br><span class="line">&lt;zkclient.version&gt;0.10&lt;/zkclient.version&gt;</span><br><span class="line"></span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;com.101tec&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;zkclient&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;$&#123;zkclient.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.zookeeper&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;zookeeper&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;$&#123;zookeeper.version&#125;&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><ul><li>代码实现</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/15 13:33</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ZKLock</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * zk客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> CuratorFramework client = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> InterProcessMutex mutex = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 初始化zk客户端</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">"开始初始化zk客户端"</span>);</span><br><span class="line">        <span class="comment">// 重试策略:重试3次,每次重试间隔1s</span></span><br><span class="line">        RetryPolicy retryPolicy = <span class="keyword">new</span> ExponentialBackoffRetry(<span class="number">1000</span>, <span class="number">3</span>);</span><br><span class="line">        client =</span><br><span class="line">                CuratorFrameworkFactory.builder()</span><br><span class="line">                        .connectString(<span class="string">"139.159.253.188:2181"</span>)<span class="comment">// zk地址</span></span><br><span class="line">                        .sessionTimeoutMs(<span class="number">15000</span>) <span class="comment">// 会话超时时间</span></span><br><span class="line">                        .connectionTimeoutMs(<span class="number">30000</span>) <span class="comment">// 连接超时时间</span></span><br><span class="line">                        .retryPolicy(retryPolicy) <span class="comment">// 重试策略</span></span><br><span class="line">                        .namespace(<span class="string">"YL_LGZ"</span>) <span class="comment">// 名称</span></span><br><span class="line">                        .build();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 启动zk客户端连接zk</span></span><br><span class="line">        client.start();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> code 节点名称</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(String code)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"创建节点对象"</span>);</span><br><span class="line">        mutex = <span class="keyword">new</span> InterProcessMutex(client, code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 加锁:互斥锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">lock</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mutex.acquire();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"枷锁失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 释放锁</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">unLock</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            mutex.release();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            System.out.println(<span class="string">"释放锁失败"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/15 15:06</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestLock</span> <span class="keyword">extends</span> <span class="title">ZKLock</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">TestLock</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.init(<span class="string">"/LGZ_TEST_CODE"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> <span class="keyword">throws</span> InterruptedException </span>&#123;</span><br><span class="line">        TestLock testLock = <span class="keyword">new</span> TestLock();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            testLock.lock();</span><br><span class="line">            System.out.println(<span class="string">""</span>);</span><br><span class="line">            Thread.sleep(<span class="number">5000</span>);</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            testLock.unLock();</span><br><span class="line">            System.out.println(<span class="string">"释放成功"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 分布式锁 </tag>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>zk命令</title>
      <link href="/2019/05/15/zk%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/05/15/zk%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>zk操作命令<a id="more"></a><h5 id="启动zk"><a href="#启动zk" class="headerlink" title="启动zk"></a>启动zk</h5></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./zkServer.sh   start</span><br></pre></td></tr></table></figure><h5 id="连接客户端"><a href="#连接客户端" class="headerlink" title="连接客户端"></a>连接客户端</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@ecs-e339-0002 bin]# ./zkCli.sh</span><br></pre></td></tr></table></figure><h5 id="ls查看命令"><a href="#ls查看命令" class="headerlink" title="ls查看命令"></a><code>ls</code>查看命令</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[zk: localhost:2181(CONNECTED) 2] ls /</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 中间件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> zookeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Shell脚本</title>
      <link href="/2019/05/13/Shell%E8%84%9A%E6%9C%AC/"/>
      <url>/2019/05/13/Shell%E8%84%9A%E6%9C%AC/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>收藏常用的shell脚本<a id="more"></a></li></ul><h5 id="重启java项目"><a href="#重启java项目" class="headerlink" title="重启java项目"></a>重启<code>java</code>项目</h5><ul><li>test.sh (结束进程)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "Stopping SpringBoot Application for CMP"</span><br><span class="line">pid=`ps -ef | grep $1* | grep -v grep | awk '&#123;print $2&#125;'`</span><br><span class="line">if [ -n "$pid" ]</span><br><span class="line">then </span><br><span class="line">kill -9 $pid</span><br><span class="line">echo 'kill process'</span><br><span class="line">else </span><br><span class="line">echo "no pid"</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><ul><li>tt.sh(检查项目是否启动完毕)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">echo "start script ................"</span><br><span class="line"></span><br><span class="line">file=$1</span><br><span class="line"></span><br><span class="line">while [ -f $file ]</span><br><span class="line">do</span><br><span class="line">    echo "find log ........."</span><br><span class="line">    result=`grep "启动成功" $file`</span><br><span class="line">    if [[ "$result" != "" ]]</span><br><span class="line">    then</span><br><span class="line">        echo "springboot start ........."</span><br><span class="line">        break</span><br><span class="line">    else</span><br><span class="line">        echo "running ......."</span><br><span class="line">        sleep 1s</span><br><span class="line">    fi</span><br><span class="line">done</span><br><span class="line">echo "springboot Started..........."</span><br></pre></td></tr></table></figure><ul><li>run.sh(主shell脚本)</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line">source /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">版本信息</span></span><br><span class="line">jarversion='-0.0.1-SNAPSHOT.jar'</span><br><span class="line"><span class="meta">#</span><span class="bash">日志路径</span></span><br><span class="line">logpath='/pro/test/home/yanfa/'</span><br><span class="line"></span><br><span class="line">runjar()&#123;</span><br><span class="line"></span><br><span class="line">        sh test.sh $1</span><br><span class="line"></span><br><span class="line">        nohup java -jar $4 $1$jarversion &gt; $logpath$2 &amp; 2&gt;&amp;1 &amp;</span><br><span class="line"></span><br><span class="line">        sh tt.sh $logpath$2</span><br><span class="line"></span><br><span class="line">        echo $3</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">runjar 'ylcloud-item-service' 'nohup_item.out' '商品模块启动完成' '-Xms10m -Xmx200m'</span><br><span class="line"></span><br><span class="line">echo '项目启动成功'</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git命令</title>
      <link href="/2019/05/13/git%E5%91%BD%E4%BB%A4-1/"/>
      <url>/2019/05/13/git%E5%91%BD%E4%BB%A4-1/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>记录常用的git命令<a id="more"></a></li></ul><h6 id="删除已关联的远程仓库"><a href="#删除已关联的远程仓库" class="headerlink" title="删除已关联的远程仓库"></a>删除已关联的远程仓库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></table></figure><h6 id="暂存到本地仓库"><a href="#暂存到本地仓库" class="headerlink" title="暂存到本地仓库"></a>暂存到本地仓库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;add 3 files.&quot;</span><br></pre></td></tr></table></figure><h6 id="推送到远程仓库"><a href="#推送到远程仓库" class="headerlink" title="推送到远程仓库"></a>推送到远程仓库</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">// 强行推送</span><br><span class="line">git pull origin master -f</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之动态代理模式</title>
      <link href="/2019/05/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/05/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>动态代理类是在程序运行期间由 JVM 通过反射等机制动态的生成的，所以不存在代理类的字节码文件，代理对象和真实对象的关系是在程序运行时期才确定的。<br><a id="more"></a></p><blockquote><p>动态代理类是在程序运行期间由 JVM 通过反射等机制动态的生成的，所以不存在代理类的字节码文件，代理对象和真实对象的关系是在程序运行时期才确定的。</p><ul><li>如何动态的创建一份字节码：</li></ul></blockquote><p>由于 <code>JVM</code> 通过字节码的二进制信息加载类的，如果我们在运行期系统中，遵循 <code>Java</code> 编译系统组织 <code>.class</code> 文件的格式和结构，生成相应的二进制数据，然后再把这个二进制数据加载转换成对应的类。如此，就完成了在代码中动态创建一个类的能力了。</p><h5 id="相关资料"><a href="#相关资料" class="headerlink" title="相关资料"></a>相关资料</h5><ul><li>InvocationHandler 类</li></ul><blockquote><p>InvocationHandler是由代理实例的调用处理程序实现的接口 。<br>每个代理实例都有一个关联的调用处理程序。 当在代理实例上调用方法时，方法调用将被编码并分派到其调用处理程序的invoke方法。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主要方法：public Object invoke(Object proxy, Method method, Object[] args)</span><br><span class="line">方法职责：负责集中处理动态代理类上的所有方法调用</span><br><span class="line">参数：</span><br><span class="line">proxy ：生成的代理对象    </span><br><span class="line">   method：当前调用的真实方法对象    </span><br><span class="line">   args ：当前调用方法的实参</span><br><span class="line">返回：真实方法的返回结果</span><br></pre></td></tr></table></figure><ul><li>Proxy 类</li></ul><blockquote><p>Proxy提供了创建动态代理类和实例的静态方法，它也是由这些方法创建的所有动态代理类的超类。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">主要方法：public static Object newProxyInstance(ClassLoader loader, Class&lt;?&gt;[] interfaces,InvocationHandler hanlder)</span><br><span class="line">方法职责：为指定类加载器、一组接口及调用处理器生成动态代理类实例 </span><br><span class="line">参数:   </span><br><span class="line">   loader ：类加载器，一般传递真实对象的类加载器   </span><br><span class="line">   interfaces：代理类需要实现的接口  </span><br><span class="line">   hanlder：代理对象如何做增强:</span><br><span class="line">返回：创建的代理对象</span><br></pre></td></tr></table></figure><table><thead><tr><th>静态方法</th></tr></thead><tbody><tr><td>static Object</td><td>newProxyInstance(ClassLoader loader, 类&lt;?&gt;[] interfaces, InvocationHandler h) 返回指定接口的代理类的实例，该接口将方法调用分派给指定的调用处理程序。</td></tr></tbody></table><h5 id="实现动态代理方式"><a href="#实现动态代理方式" class="headerlink" title="实现动态代理方式"></a>实现动态代理方式</h5><ul><li style="list-style:none"><input type="checkbox" checked> 针对有接口：使用 JDK 动态代理；</li><li style="list-style:none"><input type="checkbox"> 针对无接口：使用 CGLIB 或 Javassist 组件。<br>若使用 JDK 动态代理生成代理类,真实类必须实现一个接口</li></ul><h5 id="代码实现-JDK动态代理"><a href="#代码实现-JDK动态代理" class="headerlink" title="代码实现(JDK动态代理)"></a>代码实现(JDK动态代理)</h5><ul><li>代理接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 9:42</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 代理接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签订合同</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contract 合同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(String name, String contract)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>真实对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 10:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 真实对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签订合同</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name     姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contract 合同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String name, String contract)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是真实对象,与"</span> + name + <span class="string">"签订了"</span> + contract);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>事务</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 11:17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 事务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTransactionManger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开启事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">rollback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"回滚事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"提交事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>处理器</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/11 16:45</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransactionManagerHandler</span> <span class="keyword">implements</span> <span class="title">InvocationHandler</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 真实对象</span></span><br><span class="line">    <span class="keyword">private</span> Object target;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 事务对象</span></span><br><span class="line">    <span class="keyword">private</span> MyTransactionManger tx;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(Object target)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMyTransactionManger</span><span class="params">(MyTransactionManger tx)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.tx = tx;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取代理对象</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T&gt; <span class="function">T <span class="title">getProxy</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (T) Proxy.newProxyInstance(</span><br><span class="line">                target.getClass().getClassLoader(),</span><br><span class="line">                target.getClass().getInterfaces(),</span><br><span class="line">                <span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Object <span class="title">invoke</span><span class="params">(Object proxy, Method method, Object[] args)</span> <span class="keyword">throws</span> Throwable </span>&#123;</span><br><span class="line">        Object result = <span class="keyword">null</span>;</span><br><span class="line">        tx.begin();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            result = method.invoke(target,args);</span><br><span class="line">            tx.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            tx.rollback();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/11 16:58</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        MyTransactionManger tx = <span class="keyword">new</span> MyTransactionManger();</span><br><span class="line">        EmployeeService employeeService = <span class="keyword">new</span> EmployeeServiceImpl();</span><br><span class="line"></span><br><span class="line">        TransactionManagerHandler handler = <span class="keyword">new</span> TransactionManagerHandler();</span><br><span class="line"></span><br><span class="line">        handler.setMyTransactionManger(tx);</span><br><span class="line">        handler.setTarget(employeeService);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"真实类:"</span> + employeeService);</span><br><span class="line">        EmployeeService proxy = handler.getProxy();</span><br><span class="line">        System.out.println(<span class="string">"代理类:"</span> + proxy);</span><br><span class="line"></span><br><span class="line">        proxy.save(<span class="string">"张三"</span>,<span class="string">"10年长期合同"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开启事务</span><br><span class="line">我是真实对象,与张三签订了10年长期合同</span><br><span class="line">提交事务</span><br></pre></td></tr></table></figure><h5 id="调用流程"><a href="#调用流程" class="headerlink" title="调用流程"></a>调用流程</h5><p><img src="/images/pasted-23.png" alt="filename already exists, renamed"></p><h5 id="JDK动态代理总结"><a href="#JDK动态代理总结" class="headerlink" title="JDK动态代理总结"></a>JDK动态代理总结</h5><ul><li>Java 动态代理是使用 java.lang.reflect 包中的 Proxy 类与 InvocationHandler 接口这两个来完成的。</li><li>要使用 JDK 动态代理，委托类必须实现接口。</li><li>JDK 动态代理将会拦截所有 pubic 的方法（因为只能调用接口中定义的方法），这样即使在接口中增加了新的方法，不用修改代码也会被拦截。</li><li>动态代理的最小单位是类（类中某些方法都会被处理），如果只想拦截一部分方法，可以在 invoke 方法中对要执行的方法名进行判断。</li><li>对接口创建代理优于对类创建代理，因为会产生更加松耦合的系统，也更符合面向接口编程规范。<br>若委托类实现了接口，优先选用 JDK 动态代理。<br>若委托类没有实现任何接口，使用 Javassit 和 CGLIB 动态代理。</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之静态代理模式</title>
      <link href="/2019/05/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/05/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>客户端直接使用的都是代理对象，不知道真实对象是谁，此时代理对象可以在客户端和真实对象之间起到中介的作用。</p></blockquote><p>1.1、代理对象完全包含真实对象，客户端使用的都是代理对象的方法，和真实对象没有直接关系；<br>1.2、代理模式的职责：把不是真实对象该做的事情从真实对象上撇开——职责分离。<br><a id="more"></a></p><h5 id="代理模式"><a href="#代理模式" class="headerlink" title="代理模式"></a>代理模式</h5><blockquote><p>客户端直接使用的都是代理对象，不知道真实对象是谁，此时代理对象可以在客户端和真实对象之间起到中介的作用。</p></blockquote><p>1.1、代理对象完全包含真实对象，客户端使用的都是代理对象的方法，和真实对象没有直接关系；<br>1.2、代理模式的职责：把不是真实对象该做的事情从真实对象上撇开——职责分离。</p><h5 id="1-静态代理"><a href="#1-静态代理" class="headerlink" title="1. 静态代理"></a>1. 静态代理</h5><p>在程序运行前就已经存在代理类的字节码文件,代理对象和真实对象的关系在运行前就确定了.<br><img src="/images/pasted-22.png" alt="filename already exists, renamed"></p><h5 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h5><ul><li>代理接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 9:42</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 代理接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签订合同</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name 姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contract 合同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">save</span><span class="params">(String name, String contract)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>真实对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 10:31</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 真实对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeServiceImpl</span> <span class="keyword">implements</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签订合同</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name     姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contract 合同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String name, String contract)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是真实对象,与"</span> + name + <span class="string">"签订了"</span> + contract);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>代理对象</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 10:34</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 代理对象</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EmployeeProxyImpl</span> <span class="keyword">implements</span> <span class="title">EmployeeService</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 真实对象</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> EmployeeService target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> MyTransactionManger myTransactionManger;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setTarget</span><span class="params">(EmployeeService target)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.target = target;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setMyTransactionManger</span><span class="params">(MyTransactionManger myTransactionManger)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.myTransactionManger = myTransactionManger;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 签订合同</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> name     姓名</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> contract 合同</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String name, String contract)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        myTransactionManger.begin();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 真实对象只负责签订合同</span></span><br><span class="line">            target.save(name,contract);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// TODO 签订合同后处理一系列其他问题</span></span><br><span class="line"></span><br><span class="line">            myTransactionManger.commit();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            myTransactionManger.rollback();</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>事务</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 11:17</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 事务</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTransactionManger</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">begin</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"开启事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span>  <span class="title">rollback</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"回滚事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">commit</span><span class="params">()</span></span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"提交事务"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/9 11:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 测试</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        EmployeeServiceImpl employeeService = <span class="keyword">new</span> EmployeeServiceImpl();</span><br><span class="line">        EmployeeProxyImpl employeeProxy = <span class="keyword">new</span> EmployeeProxyImpl();</span><br><span class="line">        MyTransactionManger myTransactionManger = <span class="keyword">new</span> MyTransactionManger();</span><br><span class="line">        employeeProxy.setMyTransactionManger(myTransactionManger);</span><br><span class="line"></span><br><span class="line">        employeeProxy.setTarget(employeeService);</span><br><span class="line"></span><br><span class="line">        employeeProxy.save(<span class="string">" 张三 "</span>,<span class="string">"10长期合同~!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">开启事务</span><br><span class="line">我是真实对象,与 张三 签订了10长期合同~!</span><br><span class="line">提交事务</span><br></pre></td></tr></table></figure><h5 id="3-静态代理优缺点"><a href="#3-静态代理优缺点" class="headerlink" title="3. 静态代理优缺点"></a>3. 静态代理优缺点</h5><ul><li>优点<br>业务只需要关注业务逻辑本身,保证了业务类的重要性.把真实对象隐藏起来,保护真实对象</li><li>缺点<br>代理对象的某个接口只服务于某一种类型的对象,也就是为每个真实类创建一个代理类.<br>若需要代理的方法很多,那么就要为每一种方法都进行代理处理.<br>若接口增加一个方法,除了所有实现类需要实现这个方法,代理类也需要实现此方法.</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之观察者模式</title>
      <link href="/2019/05/08/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/05/08/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>在对象之间定义了一对多的依赖，这样一来，当一个对象改变状态，依赖它的对象会收到通知并自动更新。<br><a id="more"></a></p><h5 id="观察者模式的定义"><a href="#观察者模式的定义" class="headerlink" title="观察者模式的定义"></a>观察者模式的定义</h5><p>在对象之间定义了一对多的依赖，这样一来，当一个对象改变状态，依赖它的对象会收到通知并自动更新。</p><h5 id="MQ的发布订阅模式"><a href="#MQ的发布订阅模式" class="headerlink" title="MQ的发布订阅模式"></a>MQ的发布订阅模式</h5><p>其实就是发布订阅模式，发布者发布信息，订阅者获取信息，订阅了就能收到信息，没订阅就收不到信息。</p><h5 id="模式涵盖的角色"><a href="#模式涵盖的角色" class="headerlink" title="模式涵盖的角色"></a>模式涵盖的角色</h5><ul><li>抽象被观察者角色：<blockquote><p>也就是一个抽象主题，它把所有对观察者对象的引用保存在一个集合中，每个主题都可以有任意数量的观察者。抽象主题提供一个接口，可以增加和删除观察者角色。一般用一个抽象类和接口来实现。</p></blockquote></li><li>抽象观察者角色：<blockquote><p>为所有的具体观察者定义一个接口，在得到主题通知时更新自己。</p></blockquote></li><li>具体被观察者角色：<blockquote><p>也就是一个具体的主题，在集体主题的内部状态改变时，所有登记过的观察者发出通知。</p></blockquote></li><li>具体观察者角色：<blockquote><p>实现抽象观察者角色所需要的更新接口，一边使本身的状态与制图的状态相协调。</p></blockquote></li></ul><h5 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h5><ul><li>被观察者接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/8 13:42</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 被观察者接口</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observerable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册观察者</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">registerObServer</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 移除观察</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">removeObServer</span><span class="params">(Observer observer)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知观察者</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">notifyObServer</span><span class="params">(String message)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>观察者接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/8 13:44</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当被观察者发布消息时,调用观察者的update方法,更新消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">update</span><span class="params">(String message)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>被观察者</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/8 13:51</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 公众号</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WechatServer</span> <span class="keyword">implements</span> <span class="title">Observerable</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 寄存订阅了该公众号的用户(观察者)</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;Observer&gt; observerList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 注册观察者</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">registerObServer</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        observerList.add(observer);</span><br><span class="line">        System.out.println(<span class="string">"["</span> + ((User) observer).getName() + <span class="string">"]"</span> + <span class="string">"关注了公众号~!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 取消观察</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> observer 观察者</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeObServer</span><span class="params">(Observer observer)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (observer == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">boolean</span> remove = observerList.remove(observer);</span><br><span class="line">        <span class="keyword">if</span> (remove) &#123;</span><br><span class="line">            System.out.println(<span class="string">"["</span> + ((User) observer).getName() + <span class="string">"]"</span> + <span class="string">"取消了关注~! (╯‵□′)╯︵┻━┻"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 通知观察者</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">notifyObServer</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (Observer observer : observerList) &#123;</span><br><span class="line">            observer.update(message);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>观察者</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/8 13:56</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 观察者</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> <span class="keyword">implements</span> <span class="title">Observer</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 当被观察者发布消息时,调用观察者的update方法,更新消息</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> message 消息</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(String message)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"我是:"</span> + name + <span class="string">","</span> + message);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/5/8 14:24</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Observer u1 = <span class="keyword">new</span> User(<span class="string">"张三"</span>);</span><br><span class="line">        Observer u2 = <span class="keyword">new</span> User(<span class="string">"李四"</span>);</span><br><span class="line">        Observer u3 = <span class="keyword">new</span> User(<span class="string">"王五"</span>);</span><br><span class="line"></span><br><span class="line">        Observerable wecahtService = <span class="keyword">new</span> WechatServer();</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 观察(订阅)公众号</span></span><br><span class="line">        wecahtService.registerObServer(u1);</span><br><span class="line">        wecahtService.registerObServer(u2);</span><br><span class="line">        wecahtService.registerObServer(u3);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发布消息</span></span><br><span class="line">        wecahtService.notifyObServer(<span class="string">"第一波福利"</span>);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 取消关注</span></span><br><span class="line">        wecahtService.removeObServer(u1);</span><br><span class="line">        System.out.println(<span class="string">"--------------------------------"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发布消息</span></span><br><span class="line">        wecahtService.notifyObServer(<span class="string">"这是第二波福利"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>测试结果</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[张三]关注了公众号~!</span><br><span class="line">[李四]关注了公众号~!</span><br><span class="line">[王五]关注了公众号~!</span><br><span class="line">--------------------------------</span><br><span class="line">我是:张三,第一波福利</span><br><span class="line">我是:李四,第一波福利</span><br><span class="line">我是:王五,第一波福利</span><br><span class="line">--------------------------------</span><br><span class="line">[张三]取消了关注~! (╯‵□′)╯︵┻━┻</span><br><span class="line">--------------------------------</span><br><span class="line">我是:李四,这是第二波福利</span><br><span class="line">我是:王五,这是第二波福利</span><br></pre></td></tr></table></figure><h5 id="参考"><a href="#参考" class="headerlink" title="参考:"></a>参考:</h5><p><a href="https://www.cnblogs.com/luohanguo/p/7825656.html" target="_blank" rel="noopener">JAVA设计模式之观察者模式</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux相关命令</title>
      <link href="/2019/04/26/Linux%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/04/26/Linux%E7%9B%B8%E5%85%B3%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>如题<br>记录不常用的Linux命令<a id="more"></a></li></ul><h6 id="运行java项目"><a href="#运行java项目" class="headerlink" title="运行java项目"></a>运行<code>java</code>项目</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup java -jar -Xms10m -Xmx200m ylcloud-item-service-0.0.1-SNAPSHOT.jar &gt; /pro/test/home/yanfa/nohup_item.out &amp; 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>nohup: 后台启动项目</p><p>-Xms10m -Xmx200m: jvm虚拟机参数</p><h6 id="查看某端口占用的线程的pid"><a href="#查看某端口占用的线程的pid" class="headerlink" title="查看某端口占用的线程的pid"></a>查看某端口占用的线程的<code>pid</code></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nlp |grep :4000</span><br></pre></td></tr></table></figure><h6 id="查看pid占用的端口号"><a href="#查看pid占用的端口号" class="headerlink" title="查看pid占用的端口号"></a>查看<code>pid</code>占用的端口号</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -nap | grep 32716</span><br></pre></td></tr></table></figure><h5 id="二-防火墙"><a href="#二-防火墙" class="headerlink" title="二. 防火墙"></a>二. 防火墙</h5><h6 id="2-1-查看所有打开的端口"><a href="#2-1-查看所有打开的端口" class="headerlink" title="2.1 查看所有打开的端口"></a>2.1 查看所有打开的端口</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --list-ports</span><br></pre></td></tr></table></figure><h6 id="2-2-开启端口（–permanent参数为永久生效，不加则重启后失效）"><a href="#2-2-开启端口（–permanent参数为永久生效，不加则重启后失效）" class="headerlink" title="2.2 开启端口（–permanent参数为永久生效，不加则重启后失效）"></a>2.2 开启端口（–permanent参数为永久生效，不加则重启后失效）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --zone=public --add-port=端口号/tcp --permanent</span><br></pre></td></tr></table></figure><h6 id="2-3-更新防火墙规则："><a href="#2-3-更新防火墙规则：" class="headerlink" title="2.3 更新防火墙规则："></a>2.3 更新防火墙规则：</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h6 id="2-4-查看防火墙状态"><a href="#2-4-查看防火墙状态" class="headerlink" title="2.4 查看防火墙状态"></a>2.4 查看防火墙状态</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --state</span><br><span class="line"></span><br><span class="line">###### 查看安装目录</span><br></pre></td></tr></table></figure><p>which git<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##### 查看文件大小</span><br></pre></td></tr></table></figure><p></p><p>du -sh *<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">##### 重启``nginx``</span><br><span class="line">- 在``sbin``目录下执行命令</span><br></pre></td></tr></table></figure><p></p><p>./nginx -s reload<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">##### 查找文件</span><br></pre></td></tr></table></figure><p></p><p>find / -name ${fileName}<br><code>`</code></p><h5 id="VI操作"><a href="#VI操作" class="headerlink" title="VI操作"></a>VI操作</h5><p>VI操作:</p><p>用的是键盘的左边的数字键</p><p>逐字符移动:<br>行内跳转:<br>右边的数字键0:跳转到行首(编辑模式)<br>$(Shift+4): 跳转到行尾(编辑模式)<br>^(Shift+6): 跳转到行首的第一个字母位置(编辑模式)</p><p>行间跳转:(末行模式)<br>gg: 跳转到文件第一行(编辑模式)<br>G(Shift+g): 跳到文件的最后一行(编辑模式)</p><p>直接输入行号就可以跳转到对应行<br>注意:可以先把行号显示出来:set number</p><p>在编辑模式下:<br>ctrl+f 向下翻一页 forward<br>ctrl+b 向上翻一页 backward</p><p>dd: 删除光标所在行 (编辑模式)<br>3dd:从光标行开始删除3行(编辑模式)<br>——1,4d 删除第一行到第四行(末行模式)</p><p>u 撤销上一个操作(编辑模式)</p><p>yy 复制光标所在行 (编辑模式)<br>2yy 从光标行开始复制2行(编辑模式)<br>p: 粘贴命令</p><p>末行模式:<br>文件的查找<br>/parttern 从前往后查找<br>?parttern 从后往前查找<br>n: 下一个匹配的字符串<br>N: 上一个匹配的字符串</p><p>g:全局替换<br>i:忽略大小写<br>%s/f/F/gi</p><p>创建文件<br>vi 文件名<br>touch 文件名</p><p>创建目录<br>mkdir 目录名<br>mkdir -p 目录名1/目录名2 创建层级目录 可以是相对目录,也可以是绝对目录</p><p>rm 文件名<br>rm -f 文件名<br>rm -fr 目录 删除目录必须使用 -r 递归删除</p><p>拷贝: cp<br>拷贝目录的话要带上参数-r<br>移动: mv: mv</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之策略模式</title>
      <link href="/2019/04/26/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/04/26/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>策略模式思想是针对一组算法，将每一种算法都封装到具有共同接口的独立的类中，从而是它们可以相互替换.策略模式的最大特点是使得算法可以在不影响客户端的情况下发生变化，从而改变不同的功能。<br><a id="more"></a></p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>思想是针对一组算法，将每一种算法都封装到具有共同接口的独立的类中，从而是它们可以相互替换.策略模式的最大特点是使得算法可以在不影响客户端的情况下发生变化，从而改变不同的功能。</p><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li><p>接口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/26 14:37</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">Condition</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 条件</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> num 数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> num)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> LuGuoZheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2019/4/26 14:36</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Version</span> 3.0</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@description</span> 策略模式</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Strategy</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 过滤数据方法</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> nums 数据源</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> condition 策略</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">filteNum</span><span class="params">(List&lt;Integer&gt; nums,Condition condition)</span></span>&#123;</span><br><span class="line">        List&lt;Integer&gt; newNums = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Integer num : nums) &#123;</span><br><span class="line">            <span class="keyword">if</span> (condition.check(num))&#123;</span><br><span class="line">                newNums.add(num);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> newNums;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Test</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        List&lt;Integer&gt; list = List.of(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>);</span><br><span class="line">        <span class="comment">// 使用匿名内部类测试</span></span><br><span class="line">        list = filteNum(list, <span class="keyword">new</span> Condition() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> num % <span class="number">2</span> == <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(list); <span class="comment">// [2, 4, 6]</span></span><br><span class="line"></span><br><span class="line">        list = filteNum(list, <span class="keyword">new</span> Condition() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> num &lt; <span class="number">5</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        System.out.println(list); <span class="comment">// [2, 4]</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之模板模式</title>
      <link href="/2019/04/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/04/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>模板模式就是有很多相同的步骤的，在某一些地方可能有一些差别适合于这种模式,不同的地方通过子类覆写方法实现子类的特性.<br><a id="more"></a></p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>模板模式就是有很多相同的步骤的，在某一些地方可能有一些差别适合于这种模式,不同的地方通过子类覆写方法实现子类的特性.</p><h3 id="2-代码实现"><a href="#2-代码实现" class="headerlink" title="2. 代码实现"></a>2. 代码实现</h3><ul><li>抽象类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Times</span> </span>&#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> SimpleDateFormat fmt = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"HH:mm:ss.SSS"</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">doWord</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(String title)</span> </span>&#123;</span><br><span class="line">title = (title == <span class="keyword">null</span>) ? <span class="string">""</span> : (<span class="string">"【"</span> + title + <span class="string">"】"</span>);</span><br><span class="line">System.out.println(title);</span><br><span class="line">System.out.println(<span class="string">"开始："</span> + fmt.format(<span class="keyword">new</span> Date()));</span><br><span class="line"><span class="keyword">long</span> begin = System.currentTimeMillis();</span><br><span class="line"></span><br><span class="line">doWord();</span><br><span class="line"></span><br><span class="line"><span class="keyword">long</span> end = System.currentTimeMillis();</span><br><span class="line">System.out.println(<span class="string">"结束："</span> + fmt.format(<span class="keyword">new</span> Date()));</span><br><span class="line"><span class="keyword">double</span> delta = (end - begin) / <span class="number">1000.0</span>;</span><br><span class="line">System.out.println(<span class="string">"耗时："</span> + delta + <span class="string">"秒"</span>);</span><br><span class="line">System.out.println(<span class="string">"-------------------------------------"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>子类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyTemplate</span> <span class="keyword">extends</span> <span class="title">Times</span></span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doWord</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1000</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1000</span>; j++) &#123;</span><br><span class="line">                sum += j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        System.out.println(sum);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">new</span> MyTemplate().test(<span class="string">"doWord"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>设计模式之单例模式</title>
      <link href="/2019/04/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/04/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>单例模式就是单例对象的类只能运行一个实例存在,并且存在一个公共静态的方法来获取该实例<br><a id="more"></a></p><h3 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h3><p>单例模式就是单例对象的类只能运行一个实例存在,并且存在一个公共静态的方法来获取该实例</p><h3 id="2-使用场景"><a href="#2-使用场景" class="headerlink" title="2. 使用场景"></a>2. 使用场景</h3><p><strong>spring</strong>框架就是单例模式的</p><h3 id="3-代码实现"><a href="#3-代码实现" class="headerlink" title="3. 代码实现"></a>3. 代码实现</h3><h4 id="3-1-懒汉式-双检查保证线程安全"><a href="#3-1-懒汉式-双检查保证线程安全" class="headerlink" title="3.1 懒汉式(双检查保证线程安全)"></a>3.1 懒汉式(双检查保证线程安全)</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String namge;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">volatile</span> <span class="keyword">static</span> Singleton INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有化构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span> <span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供公共静态方法获取实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>)&#123;</span><br><span class="line">            <span class="keyword">synchronized</span> (Singleton.class)&#123;</span><br><span class="line">                <span class="keyword">if</span> (INSTANCE == <span class="keyword">null</span>)&#123;</span><br><span class="line">                    INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-饥饿式"><a href="#3-2-饥饿式" class="headerlink" title="3.2 饥饿式"></a>3.2 饥饿式</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * 优点: 直接在类加载时就初始化一个实例,可以避免线程安全问题</span></span><br><span class="line"><span class="comment"> * 缺点: 由于是类加载时就初始化了一个实例,如果一直没有使用该实例,会造成内存浪费,而且没能起到懒加载效果</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 私有化构造器</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">()</span></span>&#123;&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化一个实例</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE = <span class="keyword">new</span> Singleton();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 提供公共静态方法获取实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">getInstance</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-枚举"><a href="#3-3-枚举" class="headerlink" title="3.3 枚举"></a>3.3 枚举</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">enum</span> Singleton &#123;</span><br><span class="line"></span><br><span class="line">    INSTANCE;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-枚举反编译-使用XJad反编译"><a href="#3-4-枚举反编译-使用XJad反编译" class="headerlink" title="3.4 枚举反编译(使用XJad反编译)"></a>3.4 枚举反编译(使用<code>XJad</code>反编译)</h4><p>通过反编译可以看出就是一个<strong>饥饿式</strong>单例模式,所有实现单例模式直接写一个<strong>枚举</strong>即可.<br></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 使用final修饰类,并继承了Enum类</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Singleton</span> <span class="keyword">extends</span> <span class="title">Enum</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton INSTANCE;</span><br><span class="line"><span class="keyword">private</span> String name;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> Singleton $VALUES[];</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> Singleton[] values()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (Singleton[])$VALUES.clone();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Singleton <span class="title">valueOf</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (Singleton)Enum.valueOf(<span class="number">53554F</span>8B6A215F0F/Singleton, name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="title">Singleton</span><span class="params">(String s, <span class="keyword">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">super</span>(s, i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.name = name;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在静态代码块中直接创建了一个实例</span></span><br><span class="line"><span class="keyword">static</span> </span><br><span class="line">&#123;</span><br><span class="line">INSTANCE = <span class="keyword">new</span> Singleton(<span class="string">"INSTANCE"</span>, <span class="number">0</span>);</span><br><span class="line">$VALUES = (<span class="keyword">new</span> Singleton[] &#123;</span><br><span class="line">INSTANCE</span><br><span class="line">&#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 设计模式系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 设计模式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四→六月份学习计划(二季度)</title>
      <link href="/2019/04/23/%E5%9B%9B%E2%80%94%E2%80%94%E5%85%AD%E6%9C%88%E4%BB%BD%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87/"/>
      <url>/2019/04/23/%E5%9B%9B%E2%80%94%E2%80%94%E5%85%AD%E6%9C%88%E4%BB%BD%E5%AD%A6%E4%B9%A0%E7%9B%AE%E6%A0%87/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>如题</li></ul><p>spring使用到的设计模式:</p><ul><li>简单工厂</li><li>工厂方法（Factory Method）</li><li>单例（Singleton）</li><li>适配器（Adapter）</li><li>包装器（Decorator）</li><li>代理（Proxy）</li><li>观察者（Observer）</li><li>策略（Strategy）</li><li>模板方法（Template Method）</li></ul><a id="more"></a><h5 id="计划安排"><a href="#计划安排" class="headerlink" title="计划安排"></a>计划安排</h5><ul><li style="list-style:none"><input type="checkbox"> 四 → 五月份学习<a href="https://ke.qq.com/course/385223" target="_blank" rel="noopener">数据结构与算法课程</a></li><li style="list-style:none"><input type="checkbox"> 在<a href="https://leetcode-cn.com/problemset/all/" target="_blank" rel="noopener">LeetCode</a>练习算法题</li><li style="list-style:none"><input type="checkbox"> 巩固学习一种设计模式并实现<h4 id="进行中计划"><a href="#进行中计划" class="headerlink" title="进行中计划"></a>进行中计划</h4></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://ke.qq.com/course/385223" target="_blank" rel="noopener">数据结构与算法课程</a></li><li style="list-style:none"><input type="checkbox" checked> 算法练习</li><li style="list-style:none"><input type="checkbox" checked> 设计模式<h4 id="计划进度-代码"><a href="#计划进度-代码" class="headerlink" title="计划进度    (代码)"></a>计划进度 (<a href="https://github.com/lgz8370/DataStructuresAndAlgorithms" target="_blank" rel="noopener">代码</a>)</h4></li><li style="list-style:none"><input type="checkbox"> 算法练习</li><li style="list-style:none"><input type="checkbox"> 设计模式<ul><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/04/24/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8D%95%E4%BE%8B%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">单例模式</a></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/04/25/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E6%A8%A1%E6%9D%BF%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">模板模式</a></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/04/26/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E7%AD%96%E7%95%A5%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">策略模式</a></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/05/08/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E8%A7%82%E5%AF%9F%E8%80%85%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">观察者模式</a></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/05/09/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E9%9D%99%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">静态代理模式</a></li><li style="list-style:none"><input type="checkbox" checked> <a href="https://www.lgzblog.com/2019/05/13/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E4%B9%8B%E5%8A%A8%E6%80%81%E4%BB%A3%E7%90%86%E6%A8%A1%E5%BC%8F/" target="_blank" rel="noopener">动态代理模式</a></li></ul></li></ul><!-- rebuild by neat -->]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>算法复杂度</title>
      <link href="/2019/04/19/%E5%A4%8D%E6%9D%82%E5%BA%A6/"/>
      <url>/2019/04/19/%E5%A4%8D%E6%9D%82%E5%BA%A6/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><ul><li>时间复杂度:<br>估算程序指令的执行次数(执行时间)</li><li>空间复杂度:<br>估算所需占用的存储空间</li></ul><p>算法网站👇:<br><a href="https://leetcode-cn.com/" target="_blank" rel="noopener">https://leetcode-cn.com/</a><br><a id="more"></a></p><h5 id="时间复杂度"><a href="#时间复杂度" class="headerlink" title="时间复杂度"></a>时间复杂度</h5><ul><li style="list-style:none"><input type="checkbox"> 百度百科:<br>时间复杂度是同一问题可用不同算法解决，而一个算法的质量优劣将影响到算法乃至程序的效率。算法分析的目的在于选择合适算法和改进算法。</li><li style="list-style:none"><input type="checkbox" checked> 个人理解:<br>估算程序指令的执行次数(执行时间)</li></ul><h5 id="空间复杂度"><a href="#空间复杂度" class="headerlink" title="空间复杂度"></a>空间复杂度</h5><ul><li style="list-style:none"><input type="checkbox"> 百度百科:<br>空间复杂度(Space Complexity)是对一个算法在运行过程中临时占用存储空间大小的量度，记做S(n)=O(f(n))。比如直接插入排序的时间复杂度是O(n^2),空间复杂度是O(1) 。而一般的递归算法就要有O(n)的空间复杂度了，因为每次递归都要存储返回信息。一个算法的优劣主要从算法的执行时间和所需要占用的存储空间两个方面衡量。</li><li style="list-style:none"><input type="checkbox" checked> 个人理解:<br>估算所需占用的存储空间</li></ul><h5 id="大O表示法"><a href="#大O表示法" class="headerlink" title="大O表示法"></a>大O表示法</h5><p>一般用大O表示法来描述复杂度,表示的是数据规模n对应的复杂度<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">忽略常数、系数、低阶</span><br><span class="line"></span><br><span class="line">9   &gt;&gt;&gt;   O(1)</span><br><span class="line"></span><br><span class="line">2n + 3   &gt;&gt;&gt;   O(n)</span><br><span class="line"></span><br><span class="line">$n^2$ + 2n + 6   &gt;&gt;&gt;   O($n^2$)</span><br><span class="line"></span><br><span class="line">$4n^3$ + $3n^2$ + 22n + 100  &gt;&gt;&gt;  O($n^3$)</span><br></pre></td></tr></table></figure><p></p><ul><li>注意:<br>大O表示法仅仅只是一种粗略的分析模型,是一种估算,能帮助我们短时间内了解一个算法的执行效率</li></ul><h5 id="常见的复杂度"><a href="#常见的复杂度" class="headerlink" title="常见的复杂度"></a>常见的复杂度</h5><p><img src="/images/pasted-18.png" alt="filename already exists, renamed"></p><h5 id="对数阶细节"><a href="#对数阶细节" class="headerlink" title="对数阶细节"></a>对数阶细节</h5><ul><li><p>对数阶一般省略底数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$log_2 n = log_2 9 * log_9 n$</span><br></pre></td></tr></table></figure></li><li><p>$所以log_2 n、log_9 n统称为log_n$</p></li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 数据结构与算法系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 复杂度 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>dubbo隐式参数传递</title>
      <link href="/2019/04/17/Dobbu%E9%9A%90%E5%BC%8F%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/"/>
      <url>/2019/04/17/Dobbu%E9%9A%90%E5%BC%8F%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>记录一个<code>dobbu</code>传递隐式参数<code>demo</code>,调用<code>RPC</code>服务时用于<strong>服务消费者</strong>向<strong>服务提供者</strong>传递隐式参数,比如向服务提供者传递<code>token</code>信息.<br><a id="more"></a></p></blockquote><h5 id="上下文信息"><a href="#上下文信息" class="headerlink" title="上下文信息"></a>上下文信息</h5><p><code>RpcContext</code>是一个<code>ThreadLocal</code>的临时状态记录器，当接收到RPC请求，或发起RPC请求时，<code>RpcContext</code>的状态都会变化。比如A调用B，B再调用C，则B机器上，在B调用C之前，<code>RpcContext</code>记录的是A调用B的信息，在B调用C之后，<code>RpcContext</code>记录的是B调用C。</p><hr><h5 id="服务消费者-controller层"><a href="#服务消费者-controller层" class="headerlink" title="服务消费者:controller层"></a>服务消费者:controller层</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Reference</span></span><br><span class="line">    <span class="keyword">private</span> ICarService iCarService;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/test"</span>)</span><br><span class="line">    <span class="meta">@ResponseBody</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">test</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 传递参数</span></span><br><span class="line">        RpcContext.getContext().setAttachment(<span class="string">"TOKEN"</span>,<span class="string">"测试隐士参数传递"</span>);</span><br><span class="line">        iCarService.test();</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"参数"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="服务提供者-service层"><a href="#服务提供者-service层" class="headerlink" title="服务提供者:service层"></a>服务提供者:service层</h5><ul><li>接口</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ICarService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">test</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>实现类</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CarServiceImpl</span> <span class="keyword">implements</span> <span class="title">ICarService</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 获取参数</span></span><br><span class="line">        String token = RpcContext.getContext().getAttachment(<span class="string">"TOKEN"</span>);</span><br><span class="line">        System.out.println(token);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="项目使用场景"><a href="#项目使用场景" class="headerlink" title="项目使用场景"></a>项目使用场景</h5><p>在项目中使用的是登录后,会生成一个<code>token</code>返回给用户,用户每次登录都要把改<code>token</code>带过来进行登录验证,验证通过后则去调用<code>RPC</code>服务,可以通过隐士参数传递把<code>token</code>传递到服务提供者,这样就可以获取到当前登录用户的<code>token</code>,然后去获取当前登录用户信息.</p><h5 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h5><p>如果使用<code>setAttachments</code>会把原来的参数清空,后再保存现在的参数.</p><ul><li>源码</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> RpcContext <span class="title">setAttachments</span><span class="params">(Map&lt;String, String&gt; attachment)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 清空参数</span></span><br><span class="line">    <span class="keyword">this</span>.attachments.clear();</span><br><span class="line">    <span class="keyword">if</span> (attachment != <span class="keyword">null</span> &amp;&amp; attachment.size() &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">this</span>.attachments.putAll(attachment);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Dubbo系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>配置maven打包方式</title>
      <link href="/2019/04/15/%E9%85%8D%E7%BD%AEmaven%E6%89%93%E5%8C%85%E6%96%B9%E5%BC%8F/"/>
      <url>/2019/04/15/%E9%85%8D%E7%BD%AEmaven%E6%89%93%E5%8C%85%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>使用<code>maven-jar-plugin和maven-dependency-plugin</code>插件打包<br><img src="/images/pasted-17.png" alt="filename already exists, renamed"><br><a id="more"></a></p><h5 id="使用maven-jar-plugin和maven-dependency-plugin打包的原因及好处"><a href="#使用maven-jar-plugin和maven-dependency-plugin打包的原因及好处" class="headerlink" title="使用maven-jar-plugin和maven-dependency-plugin打包的原因及好处"></a>使用<code>maven-jar-plugin</code>和<code>maven-dependency-plugin</code>打包的原因及好处</h5><p>现在项目使用的<code>springboot</code>框架搭建的<code>maven</code>项目,由于使用<code>jenkins</code>自动部署项目,而且并没有配置单个模块部署,导致每次部署都要<code>10</code>来分钟,严重浪费时间,现在使用该插件打包后不用每次都使用<code>jenkins</code>部署,直接本地打包好之后替换掉服务器的<code>jar</code>就行,而且打包完可以看到<code>jar</code>是很小的,上传也很快</p><h5 id="1-配置pom文件"><a href="#1-配置pom文件" class="headerlink" title="1. 配置pom文件"></a>1. 配置<code>pom</code>文件</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">&lt;plugin&gt;</span><br><span class="line">    &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;</span><br><span class="line">    &lt;configuration&gt;</span><br><span class="line">        &lt;archive&gt;</span><br><span class="line">            &lt;manifest&gt;</span><br><span class="line">            &lt;!-- springboot启动类 --&gt;</span><br><span class="line">                &lt;mainClass&gt;cn.lgz.shop.GoodsApp&lt;/mainClass&gt;</span><br><span class="line">                &lt;addClasspath&gt;true&lt;/addClasspath&gt;</span><br><span class="line">                &lt;classpathPrefix&gt;lib/&lt;/classpathPrefix&gt;</span><br><span class="line">            &lt;/manifest&gt;</span><br><span class="line">        &lt;/archive&gt;</span><br><span class="line">    &lt;/configuration&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br><span class="line">&lt;plugin&gt;</span><br><span class="line">  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;</span><br><span class="line">  &lt;artifactId&gt;maven-dependency-plugin&lt;/artifactId&gt;</span><br><span class="line">  &lt;version&gt;3.1.1&lt;/version&gt;</span><br><span class="line">  &lt;executions&gt;</span><br><span class="line">      &lt;execution&gt;</span><br><span class="line">          &lt;id&gt;copy-dependencies&lt;/id&gt;</span><br><span class="line">          &lt;phase&gt;package&lt;/phase&gt;</span><br><span class="line">          &lt;goals&gt;</span><br><span class="line">              &lt;goal&gt;copy-dependencies&lt;/goal&gt;</span><br><span class="line">          &lt;/goals&gt;</span><br><span class="line">          &lt;configuration&gt;</span><br><span class="line">              &lt;outputDirectory&gt;$&#123;project.build.directory&#125;/lib&lt;/outputDirectory&gt;</span><br><span class="line">              &lt;overWriteReleases&gt;false&lt;/overWriteReleases&gt;</span><br><span class="line">              &lt;overWriteSnapshots&gt;false&lt;/overWriteSnapshots&gt;</span><br><span class="line">              &lt;overWriteIfNewer&gt;true&lt;/overWriteIfNewer&gt;</span><br><span class="line">          &lt;/configuration&gt;</span><br><span class="line">      &lt;/execution&gt;</span><br><span class="line">  &lt;/executions&gt;</span><br><span class="line">&lt;/plugin&gt;</span><br></pre></td></tr></table></figure><h5 id="2-打包效果"><a href="#2-打包效果" class="headerlink" title="2. 打包效果"></a>2. 打包效果</h5><p>打包后会把项目代码和依赖分离开来:</p><ul><li>依赖会打包到<code>lib</code>目录</li><li>项目代码会打包成一个<code>jar</code>包</li></ul><p><img src="/images/pasted-17.png" alt="filename already exists, renamed"></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 工具配置相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSL数字证书Nginx配置部署</title>
      <link href="/2019/04/13/SSL%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6Nginx%E9%85%8D%E7%BD%AE%E9%83%A8%E7%BD%B2/"/>
      <url>/2019/04/13/SSL%E6%95%B0%E5%AD%97%E8%AF%81%E4%B9%A6Nginx%E9%85%8D%E7%BD%AE%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>记录Nginx配置SSL数字证书的步骤以及遇到一些的问题</p></blockquote><ul><li style="list-style:none"><input type="checkbox" checked> 实践成果：为本网站部署<code>SSL</code>证书，实现<code>https</code>访问</li></ul><p>👇环境以及证书👇:</p><ul><li>阿里云服务器: CentOS7</li><li><p>SSL数字证书: Symantec DV SSL证书（免费版）</p><a id="more"></a><h5 id="一-添加SSL模块"><a href="#一-添加SSL模块" class="headerlink" title="一. 添加SSL模块"></a>一. 添加<code>SSL</code>模块</h5><h6 id="1-0-进入nginx解压目录"><a href="#1-0-进入nginx解压目录" class="headerlink" title="1.0 进入nginx解压目录"></a>1.0 进入<code>nginx</code>解压目录</h6></li></ul><p><img src="/images/pasted-12.png" alt="filename already exists, renamed"></p><ul><li>使用执行以下命令添加<code>SSL</code>模块</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --with-http_ssl_module</span><br></pre></td></tr></table></figure><ul><li>如果报错<code>./configure: error: SSL modules require the OpenSSL library.</code>则执行</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">yum -y install openssl openssl-devel</span><br><span class="line"></span><br><span class="line">./configure</span><br></pre></td></tr></table></figure><ul><li><p>执行<code>make</code>（切记不能<code>make install</code>会覆盖安装目录）</p></li><li><p>将原来<code>nginx</code>备份(可选）:如果自己<code>nginx</code>有什么重要配置可以先备份以防丢失</p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><ul><li>将新的<code>nginx</code>覆盖旧安装目录</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp objs/nginx /usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><h5 id="二-配置SSL证书"><a href="#二-配置SSL证书" class="headerlink" title="二. 配置SSL证书"></a>二. 配置<code>SSL</code>证书</h5><h6 id="1-0-进入Nginx安装目录conf目录-PS-安装目录和解压目录不是同一个目录）"><a href="#1-0-进入Nginx安装目录conf目录-PS-安装目录和解压目录不是同一个目录）" class="headerlink" title="1.0 进入Nginx安装目录conf目录(PS:安装目录和解压目录不是同一个目录）"></a>1.0 进入<code>Nginx</code>安装目录<code>conf</code>目录(PS:安装目录和解压目录不是同一个目录）</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/nginx/conf/</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-14.png" alt="filename already exists, renamed"></p><ul><li>创建<code>cert</code>目录,并把准备好的<code>SSL</code>数字证书放在该目录下</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir cert</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-15.png" alt="filename already exists, renamed"></p><ul><li>返回<code>conf</code>文件，编辑<code>nginx.conf</code>配置文件，找到以下内容</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> # HTTPS server</span><br><span class="line"> #server &#123;</span><br><span class="line"> #listen 443;</span><br><span class="line"> #server_name localhost;</span><br><span class="line"> #ssl_certificate cert.pem;</span><br><span class="line"> #ssl_certificate_key cert.key;</span><br><span class="line"> #ssl_session_timeout 5m;</span><br><span class="line"> #ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span><br><span class="line"> #ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;</span><br><span class="line"> #ssl_prefer_server_ciphers on;</span><br><span class="line"> #location / &#123;</span><br><span class="line">#root   html;</span><br><span class="line">#index  index.html index.htm;</span><br><span class="line">#proxy_pass      http://localhost:4000;</span><br><span class="line">#&#125;</span><br><span class="line">#&#125;</span><br></pre></td></tr></table></figure><ul><li>把以上内容替换为以下内容，或者注释以上内容重新添加也可以：</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 以下属性中以ssl开头的属性代表与证书配置有关，其他属性请根据自己的需要进行配置。</span><br><span class="line">  server &#123;</span><br><span class="line">  listen 443;</span><br><span class="line">  server_name localhost;  # localhost修改为您证书绑定的域名。</span><br><span class="line">  ssl on;   #设置为on启用SSL功能。</span><br><span class="line">  root html;</span><br><span class="line">  index index.html index.htm;</span><br><span class="line">  ssl_certificate cert/domain name.pem;   #将domain name.pem替换成您证书的文件名。</span><br><span class="line">  ssl_certificate_key cert/domain name.key;   #将domain name.key替换成您证书的密钥文件名。</span><br><span class="line">  ssl_session_timeout 5m;</span><br><span class="line">  ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;  #使用此加密套件。</span><br><span class="line">  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;   #使用该协议进行配置。</span><br><span class="line">  ssl_prefer_server_ciphers on;   </span><br><span class="line">  location / &#123;</span><br><span class="line">  root html;   #站点目录。</span><br><span class="line">  index index.html index.htm;   #添加属性。</span><br><span class="line">  &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="三-配置阿里云服务器安全组规则"><a href="#三-配置阿里云服务器安全组规则" class="headerlink" title="三. 配置阿里云服务器安全组规则"></a>三. 配置阿里云服务器安全组规则</h5><p>⭐ 如果你以上步骤都没有问题，但是还是访问不了，那就要查看下是否有配置<code>443</code>端口的安全组，如果没有<br>加上即可。</p><p><img src="/images/pasted-16.png" alt="filename already exists, renamed"></p><h5 id="四-参考资料"><a href="#四-参考资料" class="headerlink" title="四. 参考资料"></a>四. 参考资料</h5><p><a href="https://help.aliyun.com/document_detail/98728.html" target="_blank" rel="noopener">https://help.aliyun.com/document_detail/98728.html</a><br><a href="https://help.aliyun.com/video_detail/54216.html?spm=5176.2000002.0.0.19057747sUlwcd" target="_blank" rel="noopener">https://help.aliyun.com/video_detail/54216.html?spm=5176.2000002.0.0.19057747sUlwcd</a><br><a href="https://blog.csdn.net/weiyangdong/article/details/80008543" target="_blank" rel="noopener">https://blog.csdn.net/weiyangdong/article/details/80008543</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> 服务器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> SSL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Excel导入导出</title>
      <link href="/2019/04/10/Excel%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/"/>
      <url>/2019/04/10/Excel%E5%AF%BC%E5%85%A5%E5%AF%BC%E5%87%BA/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>记录一个<code>java</code>基于<code>jxl</code>实现的<code>Excel</code>导入导出功能<br><a id="more"></a></p></blockquote><h5 id="一-引入依赖"><a href="#一-引入依赖" class="headerlink" title="一. 引入依赖"></a>一. 引入依赖</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;net.sourceforge.jexcelapi&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;jxl&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.6.12&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><h5 id="二-导出"><a href="#二-导出" class="headerlink" title="二. 导出"></a>二. 导出</h5><h6 id="2-0-接口编写"><a href="#2-0-接口编写" class="headerlink" title="2.0 接口编写"></a>2.0 接口编写</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(value = <span class="string">"/export"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">test</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">WritableWorkbook workbook = Workbook.createWorkbook(response.getOutputStream());</span><br><span class="line"><span class="comment">// 响应格式</span></span><br><span class="line">response.setContentType(<span class="string">"application/vnd.ms-excel"</span>);</span><br><span class="line">response.setHeader(<span class="string">"Content-Disposition"</span>, <span class="string">"attachment;</span></span><br><span class="line"><span class="string">    filename="</span> + URLEncoder.encode(<span class="string">"文件名称.xls"</span>, <span class="string">"UTF-8"</span>));</span><br><span class="line"><span class="comment">// 创建一个工作簿:</span></span><br><span class="line">WritableSheet sheet1 = workbook.createSheet(<span class="string">"工作簿名称"</span>, <span class="number">0</span>);</span><br><span class="line">Label label1 = <span class="keyword">new</span> Label(<span class="number">0</span>, <span class="number">0</span>, <span class="string">"商品id"</span>);</span><br><span class="line">sheet1.addCell(label1);</span><br><span class="line">Label label2 = <span class="keyword">new</span> Label(<span class="number">1</span>, <span class="number">0</span>, <span class="string">"公司编号"</span>);</span><br><span class="line">sheet1.addCell(label2);</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询数据写到workbook中</span></span><br><span class="line">workbook.write();</span><br><span class="line">System.out.println(<span class="string">"查询数据写到workbook中"</span>);</span><br><span class="line"><span class="comment">//关闭资源</span></span><br><span class="line">workbook.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h6 id="2-1-导出效果如下"><a href="#2-1-导出效果如下" class="headerlink" title="2.1 导出效果如下"></a>2.1 导出效果如下</h6><p><img src="/images/pasted-11.png" alt="filename already exists, renamed"></p><h5 id="三-导入"><a href="#三-导入" class="headerlink" title="三. 导入"></a>三. 导入</h5><h6 id="3-0-读取Excel接口"><a href="#3-0-读取Excel接口" class="headerlink" title="3.0 读取Excel接口"></a>3.0 读取<code>Excel</code>接口</h6><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@PostMapping</span>(value = <span class="string">"/excel"</span>)</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">importExcel</span><span class="params">(MultipartFile file)</span> </span>&#123;</span><br><span class="line">Workbook workbook = <span class="keyword">null</span>;</span><br><span class="line">List&lt;ItemDto&gt; items = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">HashMap&lt;String, ItemDto&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="comment">//获取xls文件Excel</span></span><br><span class="line">workbook = Workbook.getWorkbook(file.getInputStream());</span><br><span class="line"><span class="comment">//获取商品工作簿:可通过索引获取不同工作簿</span></span><br><span class="line">Sheet itemSheet = workbook.getSheet(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//获取总行数</span></span><br><span class="line"><span class="keyword">int</span> rows = itemSheet.getRows();</span><br><span class="line"><span class="comment">//格式化导入的日期格式</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; rows; i++) &#123;</span><br><span class="line">Cell[] row = itemSheet.getRow(i);</span><br><span class="line"><span class="keyword">if</span> (row.length == <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">String itemId = itemSheet.getCell(<span class="number">0</span>, i).getContents();</span><br><span class="line">System.out.println(itemId);</span><br><span class="line"></span><br><span class="line">String scompCode = itemSheet.getCell(<span class="number">1</span>, i).getContents();</span><br><span class="line">System.out.println(scompCode);</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="comment">//关闭资源</span></span><br><span class="line">workbook.close();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> Excel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo之瞎折腾系列</title>
      <link href="/2019/03/30/Hexo%E7%9E%8E%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/"/>
      <url>/2019/03/30/Hexo%E7%9E%8E%E6%8A%98%E8%85%BE%E7%B3%BB%E5%88%97/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><p>该文档记录Theme-AD主题个人博客部署到云服务器以及记录新增的一些小功能~！</p><p>Theme-AD主题具体搭建步骤可以参考：<a href="https://godbmw.com/tags/Hexo/" target="_blank" rel="noopener">https://godbmw.com/tags/Hexo/</a></p><p>Let’s Go~!<br><a id="more"></a><br>Theme-AD主题具体搭建步骤可以参考：<a href="https://godbmw.com/tags/Hexo/" target="_blank" rel="noopener">https://godbmw.com/tags/Hexo/</a></p><h5 id="一-云服务器部署Hexo"><a href="#一-云服务器部署Hexo" class="headerlink" title="一.云服务器部署Hexo"></a>一.云服务器部署Hexo</h5><p>参考文档：<a href="https://www.jianshu.com/p/b2e47ec9359d" target="_blank" rel="noopener">https://www.jianshu.com/p/b2e47ec9359d</a></p><h6 id="1-1-后台运行Hexo"><a href="#1-1-后台运行Hexo" class="headerlink" title="1.1 后台运行Hexo"></a>1.1 后台运行<code>Hexo</code></h6><p>部署到云服务器后如果还是在<code>hexo</code>根目录下使用命令启动，会有个问题就是：当你断开服务器连接之后hexo服务就会停止，无法访问。</p><p>那么可以用pm2启动<code>hexo</code>，这样hexo就在后台运行了，就算断开服务器连接也不会停止</p><h6 id="1-2-安装pm2"><a href="#1-2-安装pm2" class="headerlink" title="1.2 安装pm2"></a>1.2 安装<code>pm2</code></h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g pm2</span><br></pre></td></tr></table></figure><p>ps：如果感兴趣也可以了解下<code>Linux</code>的<code>nohup</code>命令</p><h6 id="1-2-在hexo创建run-js文件"><a href="#1-2-在hexo创建run-js文件" class="headerlink" title="1.2 在hexo创建run.js文件"></a>1.2 在<code>hexo</code>创建<code>run.js</code>文件</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//run.js</span></span><br><span class="line"><span class="keyword">const</span> &#123; exec &#125; = <span class="built_in">require</span>(<span class="string">'child_process'</span>)</span><br><span class="line">exec(<span class="string">'hexo server'</span>,(error, stdout, stderr) =&gt; &#123;</span><br><span class="line">  <span class="keyword">if</span>(error)&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">`exec error: <span class="subst">$&#123;error&#125;</span>`</span>)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`stdout: <span class="subst">$&#123;stdout&#125;</span>`</span>);</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="string">`stderr: <span class="subst">$&#123;stderr&#125;</span>`</span>);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h6 id="1-3-运行脚本"><a href="#1-3-运行脚本" class="headerlink" title="1.3 运行脚本"></a>1.3 运行脚本</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pm2 start run.js</span><br></pre></td></tr></table></figure><h5 id="二-为自己的博客添加萌宠"><a href="#二-为自己的博客添加萌宠" class="headerlink" title="二.为自己的博客添加萌宠"></a>二.为自己的博客添加萌宠</h5><p>参考博客：<a href="https://blog.csdn.net/u010820857/article/details/82270736" target="_blank" rel="noopener">https://blog.csdn.net/u010820857/article/details/82270736</a></p><h6 id="2-1-安装模块"><a href="#2-1-安装模块" class="headerlink" title="2.1 安装模块"></a>2.1 安装模块</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><h6 id="2-2-选择想要的萌宠"><a href="#2-2-选择想要的萌宠" class="headerlink" title="2.2 选择想要的萌宠"></a>2.2 选择想要的萌宠</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-model-chitose</span><br><span class="line">live2d-widget-model-epsilon2_1</span><br><span class="line">live2d-widget-model-gf</span><br><span class="line">live2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)</span><br><span class="line">live2d-widget-model-haruto</span><br><span class="line">live2d-widget-model-hibiki</span><br><span class="line">live2d-widget-model-hijiki</span><br><span class="line">live2d-widget-model-izumi</span><br><span class="line">live2d-widget-model-koharu</span><br><span class="line">live2d-widget-model-miku</span><br><span class="line">live2d-widget-model-ni-j</span><br><span class="line">live2d-widget-model-nico</span><br><span class="line">live2d-widget-model-nietzsche</span><br><span class="line">live2d-widget-model-nipsilon</span><br><span class="line">live2d-widget-model-nito</span><br><span class="line">live2d-widget-model-shizuku</span><br><span class="line">live2d-widget-model-tororo</span><br><span class="line">live2d-widget-model-tsumiki</span><br><span class="line">live2d-widget-model-unitychan</span><br><span class="line">live2d-widget-model-wanko</span><br><span class="line">live2d-widget-model-z16</span><br></pre></td></tr></table></figure><h6 id="2-3-选择好之后还需要安装"><a href="#2-3-选择好之后还需要安装" class="headerlink" title="2.3 选择好之后还需要安装"></a>2.3 选择好之后还需要安装</h6><p>例如我选择的是：<code>live2d-widget-model-z16</code><br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install live2d-widget-model-z16</span><br></pre></td></tr></table></figure><p></p><h6 id="2-4-最后一步配置Hexo的主配置文件-config-yml"><a href="#2-4-最后一步配置Hexo的主配置文件-config-yml" class="headerlink" title="2.4 最后一步配置Hexo的主配置文件_config.yml"></a>2.4 最后一步配置<code>Hexo</code>的主配置文件<code>_config.yml</code></h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: <span class="literal">true</span></span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:</span><br><span class="line">    use: live2d-widget-model-z16 <span class="comment">// 这里改为自己选择的萌宠 其他参数可以根据自己喜好看着修改</span></span><br><span class="line">  display:</span><br><span class="line">    position: right</span><br><span class="line">    width: <span class="number">150</span></span><br><span class="line">    height: <span class="number">300</span></span><br><span class="line">  mobile:</span><br><span class="line">    show: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h5 id="三-hexo部署到GitHub后绑定域名-未备案域名也可以"><a href="#三-hexo部署到GitHub后绑定域名-未备案域名也可以" class="headerlink" title="三. hexo部署到GitHub后绑定域名(未备案域名也可以)"></a>三. <code>hexo</code>部署到<code>GitHub</code>后绑定域名(未备案域名也可以)</h5><h6 id="3-1-GitHub相关配置"><a href="#3-1-GitHub相关配置" class="headerlink" title="3.1 GitHub相关配置"></a>3.1 <code>GitHub</code>相关配置</h6><p>在根目录下添加<code>CNAME</code>文件(名称大写),在文件中输入域名<br>CNAME 文件:<br><img src="/images/pasted-4.png" alt="filename already exists, renamed"></p><p>文件内容就是你的域名:<br><img src="/images/pasted-5.png" alt="filename already exists, renamed"></p><p>在设置中配置域名:<br><img src="/images/pasted-6.png" alt="filename already exists, renamed"></p><p><img src="/images/pasted-9.png" alt="filename already exists, renamed"></p><h6 id="3-2-修改域名解析记录"><a href="#3-2-修改域名解析记录" class="headerlink" title="3.2 修改域名解析记录"></a>3.2 修改域名解析记录</h6><p>按照下面添加域名解析记录:<br><img src="/images/pasted-10.png" alt="filename already exists, renamed"><br>ps:截图中记录值的<code>ip</code>是通过<code>ping`自己的</code>xxx.github.io<code></code>得到</p><h5 id="四-新增站内搜索功能"><a href="#四-新增站内搜索功能" class="headerlink" title="四. 新增站内搜索功能"></a>四. 新增站内搜索功能</h5><p>原本<code>Theme-AD</code>主题是没有站内搜索的,本站点移植的是<a href="https://zhwangart.github.io/" target="_blank" rel="noopener">Ocean</a>主题的站内搜索功能.</p><h6 id="4-1-修改header-ejs文件"><a href="#4-1-修改header-ejs文件" class="headerlink" title="4.1 修改header.ejs文件"></a>4.1 修改<code>header.ejs</code>文件</h6><p>把原本主题的搜索框移除,在相对应位置加入<code>搜索按钮</code>和<code>搜索框</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">&lt;header <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-header"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-header-brand"</span>&gt;</span><br><span class="line">    &lt;% <span class="keyword">if</span>(theme.nav_name) &#123; %&gt;</span><br><span class="line">      &lt;span <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-header-brand-title"</span>&gt;</span><br><span class="line">        &lt;a href=<span class="string">"&lt;%- url_for('/') %&gt;"</span>&gt;<span class="xml"><span class="tag">&lt;<span class="name">%-</span> <span class="attr">theme.nav_name</span> %&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line">      &lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">    &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp">    &lt;% if(theme.motto) &#123; %&gt;</span></span><br><span class="line"><span class="regexp">      &lt;span class="site-header-brand-motto"&gt; | &lt;%- theme.motto %&gt;&lt;/</span>span&gt;</span><br><span class="line">    &lt;% &#125; %&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="site-header-right"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;nav class="site-header-navigation"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;% for(let link of theme.nav) &#123; %&gt;</span></span><br><span class="line"><span class="regexp">        &lt;a href="&lt;%- url_for(link.path) %&gt;" target="&lt;%- link.path.startsWith('http') ? '_blank' : '_self' %&gt;"&gt;&lt;%= link.name%&gt;&lt;/</span>a&gt;</span><br><span class="line">      &lt;% &#125; %&gt;</span><br><span class="line">    &lt;<span class="regexp">/nav&gt;</span></span><br><span class="line"><span class="regexp">    </span></span><br><span class="line"><span class="regexp">    &lt;!-- 搜索按钮 --&gt;</span></span><br><span class="line"><span class="regexp">    &lt;nav class="navbar"&gt;</span></span><br><span class="line"><span class="regexp">        &lt;a href="#" class="nav-item-link nav-item-search" title="&lt;%= __('搜索') %&gt;"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;i class="fe fe-search"&gt;&lt;/i</span>&gt;</span><br><span class="line">          &lt;%- theme.search_text %&gt;</span><br><span class="line">        &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>nav&gt;</span><br><span class="line">    </span><br><span class="line">    &lt;div <span class="class"><span class="keyword">class</span></span>=<span class="string">"site-header-btn"</span>&gt;</span><br><span class="line">      &lt;% <span class="keyword">if</span>(theme.github) &#123; %&gt;</span><br><span class="line">        &lt;a href=<span class="string">"&lt;%- theme.github %&gt;"</span> target=<span class="string">"_blank"</span> id=<span class="string">"site-github"</span>&gt;</span><br><span class="line">          &lt;i <span class="class"><span class="keyword">class</span></span>=<span class="string">"fa fa-github-alt"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">i</span>&gt;</span></span></span><br><span class="line">        &lt;<span class="regexp">/a&gt;</span></span><br><span class="line"><span class="regexp">      &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>dev&gt;</span><br><span class="line">&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;!-- 搜索框 --&gt;</span></span><br><span class="line"><span class="regexp">&lt;div class="search-form-wrap"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="local-search local-search-plugin"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;input type="search" id="local-search-input" class="local-search-input" placeholder="Search..."&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div id="local-search-result" class="local-search-result"&gt;&lt;/</span>div&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>div&gt;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/header&gt;</span></span><br><span class="line"><span class="regexp">&lt;nav class="table-content" id="site-nav"&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="table-content-title"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;span&gt;导航&lt;/</span>span&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;div class="table-content-main"&gt;</span></span><br><span class="line"><span class="regexp">    &lt;ol class="toc"&gt;</span></span><br><span class="line"><span class="regexp">      &lt;% for(let link of theme.nav) &#123; %&gt;</span></span><br><span class="line"><span class="regexp">        &lt;li class="toc-item"&gt;</span></span><br><span class="line"><span class="regexp">          &lt;a href="&lt;%- url_for(link.path) %&gt;" target="&lt;%- link.path.startsWith('http') ? '_blank' : '_self' %&gt;"&gt;</span></span><br><span class="line"><span class="regexp">            &lt;%= link.name %&gt;</span></span><br><span class="line"><span class="regexp">          &lt;/</span>a&gt;</span><br><span class="line">        &lt;<span class="regexp">/li&gt;</span></span><br><span class="line"><span class="regexp">      &lt;% &#125; %&gt;</span></span><br><span class="line"><span class="regexp">    &lt;/</span>ol&gt;</span><br><span class="line">  &lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">&lt;/</span>nav&gt;</span><br><span class="line">&lt;div id=<span class="string">"site-process"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h6 id="4-2-把Ocean主题中source中css的feathericon移到自己主题的css目录下"><a href="#4-2-把Ocean主题中source中css的feathericon移到自己主题的css目录下" class="headerlink" title="4.2 把Ocean主题中source中css的feathericon移到自己主题的css目录下"></a>4.2 把<a href="https://zhwangart.github.io/" target="_blank" rel="noopener">Ocean</a>主题中<code>source</code>中<code>css</code>的<code>feathericon</code>移到自己主题的<code>css</code>目录下</h6><p><img src="/images/pasted-19.png" alt="filename already exists, renamed"></p><h6 id="4-3-在css目录下创建-feathericon-styl文件"><a href="#4-3-在css目录下创建-feathericon-styl文件" class="headerlink" title="4.3 在css目录下创建_feathericon.styl文件"></a>4.3 在<code>css</code>目录下创建<code>_feathericon.styl</code>文件</h6><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"utf-8"</span></span><br><span class="line"></span><br><span class="line">//---------------------------------------------------------------------------</span><br><span class="line">// feathericon</span><br><span class="line">//---------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// variables</span><br><span class="line">feathericon-font-path = <span class="string">'feathericon/'</span> !default;</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// font path</span><br><span class="line">@<span class="keyword">font-face</span></span><br><span class="line">  <span class="selector-tag">font-family</span> <span class="selector-tag">feathericon</span></span><br><span class="line">  <span class="selector-tag">font-weight</span> <span class="selector-tag">normal</span></span><br><span class="line">  <span class="selector-tag">font-style</span> <span class="selector-tag">normal</span></span><br><span class="line">  src: url(feathericon-font-path + 'feathericon.eot')</span><br><span class="line">  src: url(feathericon-font-path + 'feathericon.eot?#iefix') format('embedded-opentype'),</span><br><span class="line">          url(feathericon-font-path + 'feathericon.woff') format('woff'),</span><br><span class="line">          url(feathericon-font-path + 'feathericon.ttf') format('truetype'),</span><br><span class="line">          url(feathericon-font-path + 'feathericon.svg') format('svg');</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">// feathericon</span><br><span class="line">//</span><br><span class="line"><span class="selector-class">.fe</span></span><br><span class="line">  <span class="selector-tag">display</span> <span class="selector-tag">inline-block</span></span><br><span class="line">  <span class="selector-tag">font</span> <span class="selector-tag">normal</span> <span class="selector-tag">normal</span> <span class="selector-tag">normal</span> 16<span class="selector-tag">px</span> <span class="selector-tag">feathericon</span></span><br><span class="line">  <span class="selector-tag">font-size</span> <span class="selector-tag">inherit</span></span><br><span class="line">  <span class="selector-tag">text-rendering</span> <span class="selector-tag">auto</span></span><br><span class="line">  <span class="selector-tag">-webkit-font-smoothing</span> <span class="selector-tag">antialiased</span></span><br><span class="line">  <span class="selector-tag">-moz-osx-font-smoothing</span> <span class="selector-tag">grayscale</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fe-search</span><span class="selector-pseudo">:before</span> &#123; <span class="attribute">content</span>: <span class="string">"\f14e"</span>; &#125;</span><br><span class="line"><span class="selector-class">.fe-search-minus</span><span class="selector-pseudo">:before</span> &#123; <span class="attribute">content</span>: <span class="string">"\f16a"</span>; &#125;</span><br><span class="line"><span class="selector-class">.fe-search-plus</span><span class="selector-pseudo">:before</span> &#123; <span class="attribute">content</span>: <span class="string">"\f16b"</span>; &#125;</span><br></pre></td></tr></table></figure><h6 id="4-4-在css目录下创建-mixins-styl文件"><a href="#4-4-在css目录下创建-mixins-styl文件" class="headerlink" title="4.4 在css目录下创建_mixins.styl文件"></a>4.4 在<code>css</code>目录下创建<code>_mixins.styl</code>文件</h6><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">border-radius</span>(<span class="selector-tag">n</span>)</span><br><span class="line">  <span class="selector-tag">-webkit-border-radius</span> <span class="selector-tag">n</span></span><br><span class="line">  <span class="selector-tag">-moz-border-radius</span> <span class="selector-tag">n</span></span><br><span class="line">  <span class="selector-tag">border-radius</span> <span class="selector-tag">n</span></span><br><span class="line"></span><br><span class="line">// Media queries</span><br></pre></td></tr></table></figure><h6 id="4-5-在css目录下创建-variables-styl文件"><a href="#4-5-在css目录下创建-variables-styl文件" class="headerlink" title="4.5 在css目录下创建_variables.styl文件"></a>4.5 在<code>css</code>目录下创建<code>_variables.styl</code>文件</h6><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// Config</span><br><span class="line">support-for-ie = false</span><br><span class="line">vendor-prefixes = webkit moz ms official</span><br><span class="line"></span><br><span class="line">// Fonts</span><br><span class="line">font-size-browser = 62.5%</span><br><span class="line">font-size-base    = 1.4rem</span><br><span class="line">font-family-base  = "Helvetica Neue", Helvetica, "PingFang SC", "Hiragino Sans GB", "Microsoft YaHei", "微软雅黑", Arial, sans-serif</span><br><span class="line">font-line-height  = 1.7</span><br><span class="line"></span><br><span class="line">// Colors</span><br><span class="line">sea           = #1e3e3f</span><br><span class="line">froth-light   = #f4f4f4</span><br><span class="line">white         = #ffffff</span><br><span class="line">sand-light    = #9c8079</span><br><span class="line">sand          = #9e6a4d</span><br><span class="line"></span><br><span class="line">// Border</span><br><span class="line">border-radius   = 0.4rem</span><br><span class="line">border-width    = 0.1rem</span><br><span class="line">border-color    = froth</span><br></pre></td></tr></table></figure><h6 id="4-6-在css目录下创建style-styl文件"><a href="#4-6-在css目录下创建style-styl文件" class="headerlink" title="4.6 在css目录下创建style.styl文件"></a>4.6 在<code>css</code>目录下创建<code>style.styl</code>文件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">@import &quot;_variables&quot;</span><br><span class="line">@import &quot;_feathericon&quot;</span><br><span class="line">//@import &quot;_normalize&quot;</span><br><span class="line">@import &quot;_mixins&quot;</span><br><span class="line">@import &quot;search&quot;</span><br><span class="line"></span><br><span class="line">*,</span><br><span class="line">*::before</span><br><span class="line">*::after</span><br><span class="line">  box-sizing border-box</span><br><span class="line"></span><br><span class="line">html</span><br><span class="line">  font-size font-size-browser</span><br><span class="line"></span><br><span class="line">body</span><br><span class="line">  background-color body-background</span><br><span class="line">  font-family font-family-base</span><br><span class="line">  font-size font-size-base</span><br><span class="line">  line-height font-line-height</span><br><span class="line">  color body-color</span><br><span class="line">  padding 0</span><br><span class="line">  margin 0</span><br><span class="line">  overflow-x hidden</span><br><span class="line">  text-size-adjust: 100%</span><br><span class="line">  ::selection</span><br><span class="line">    background sea-lighter</span><br><span class="line">    color froth</span><br></pre></td></tr></table></figure><h6 id="4-7-修改header-js文件-替换掉所有内容"><a href="#4-7-修改header-js文件-替换掉所有内容" class="headerlink" title="4.7 修改header.js文件(替换掉所有内容)"></a>4.7 修改<code>header.js</code>文件(替换掉所有内容)</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Search ------------</span></span><br><span class="line">    <span class="keyword">var</span> $searchWrap = $(<span class="string">'.search-form-wrap'</span>),</span><br><span class="line">        isSearchAnim = <span class="literal">false</span>,</span><br><span class="line">        searchAnimDuration = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> startSearchAnim = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        isSearchAnim = <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> stopSearchAnim = <span class="function"><span class="keyword">function</span> (<span class="params">callback</span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            isSearchAnim = <span class="literal">false</span>;</span><br><span class="line">            callback &amp;&amp; callback();</span><br><span class="line">        &#125;, searchAnimDuration);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">'.nav-item-search'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isSearchAnim) <span class="keyword">return</span>;</span><br><span class="line">        startSearchAnim();</span><br><span class="line">        $searchWrap.addClass(<span class="string">'on'</span>);</span><br><span class="line">        stopSearchAnim(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            $(<span class="string">'.local-search-input'</span>).focus();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $(<span class="built_in">document</span>).mouseup(<span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> _con = $(<span class="string">'.local-search'</span>);</span><br><span class="line">        <span class="keyword">if</span> (!_con.is(e.target) &amp;&amp; _con.has(e.target).length === <span class="number">0</span>) &#123;</span><br><span class="line">            $searchWrap.removeClass(<span class="string">'on'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 移动设备侦测</span></span><br><span class="line">    <span class="keyword">var</span> isMobile = &#123;</span><br><span class="line">        Android: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> navigator.userAgent.match(<span class="regexp">/Android/i</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        BlackBerry: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> navigator.userAgent.match(<span class="regexp">/BlackBerry/i</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        iOS: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> navigator.userAgent.match(<span class="regexp">/iPhone|iPad|iPod/i</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        Opera: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> navigator.userAgent.match(<span class="regexp">/Opera Mini/i</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        Windows: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> navigator.userAgent.match(<span class="regexp">/IEMobile/i</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">        any: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> (isMobile.Android() || isMobile.BlackBerry() || isMobile.iOS() || isMobile.Opera() || isMobile.Windows());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 建议在移动端不初始化，其实 /search.xml 文件还挺大的，</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">'.local-search'</span>).size() &amp;&amp; !isMobile.any()) &#123;</span><br><span class="line">        $.getScript(<span class="string">'/js/search.js'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            searchFunc(<span class="string">"/search.xml"</span>, <span class="string">'local-search-input'</span>, <span class="string">'local-search-result'</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Share ------------</span></span><br><span class="line">    $(<span class="string">'body'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="string">'.article-share-box.on'</span>).removeClass(<span class="string">'on'</span>);</span><br><span class="line">    &#125;).on(<span class="string">'click'</span>, <span class="string">'.article-share-link'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e.stopPropagation();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> $<span class="keyword">this</span> = $(<span class="keyword">this</span>),</span><br><span class="line">            url = $<span class="keyword">this</span>.attr(<span class="string">'data-url'</span>),</span><br><span class="line">            encodedUrl = <span class="built_in">encodeURIComponent</span>(url),</span><br><span class="line">            id = <span class="string">'article-share-box-'</span> + $<span class="keyword">this</span>.attr(<span class="string">'data-id'</span>),</span><br><span class="line">            offset = $<span class="keyword">this</span>.offset();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="string">'#'</span> + id).length) &#123;</span><br><span class="line">            <span class="keyword">var</span> box = $(<span class="string">'#'</span> + id);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (box.hasClass(<span class="string">'on'</span>)) &#123;</span><br><span class="line">                box.removeClass(<span class="string">'on'</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> html = [</span><br><span class="line">                <span class="string">'&lt;div id="'</span> + id + <span class="string">'" class="article-share-box"&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;input class="article-share-input" value="'</span> + url + <span class="string">'"&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;div class="article-share-links"&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;a href="https://twitter.com/intent/tweet?url='</span> + encodedUrl + <span class="string">'" class="article-share-twitter" target="_blank" title="Twitter"&gt;&lt;/a&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;a href="https://www.facebook.com/sharer.php?u='</span> + encodedUrl + <span class="string">'" class="article-share-facebook" target="_blank" title="Facebook"&gt;&lt;/a&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;a href="http://pinterest.com/pin/create/button/?url='</span> + encodedUrl + <span class="string">'" class="article-share-pinterest" target="_blank" title="Pinterest"&gt;&lt;/a&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;a href="https://plus.google.com/share?url='</span> + encodedUrl + <span class="string">'" class="article-share-google" target="_blank" title="Google+"&gt;&lt;/a&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;/div&gt;'</span>,</span><br><span class="line">                <span class="string">'&lt;/div&gt;'</span></span><br><span class="line">            ].join(<span class="string">''</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">var</span> box = $(html);</span><br><span class="line">            $(<span class="string">'body'</span>).append(box);</span><br><span class="line">        &#125;</span><br><span class="line">        $(<span class="string">'.article-share-box.on'</span>).hide();</span><br><span class="line"></span><br><span class="line">        box.css(&#123;</span><br><span class="line">            top: offset.top + <span class="number">25</span>,</span><br><span class="line">            left: offset.left</span><br><span class="line">        &#125;).addClass(<span class="string">'on'</span>);</span><br><span class="line">    &#125;).on(<span class="string">'click'</span>, <span class="string">'.article-share-box'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e.stopPropagation();</span><br><span class="line">    &#125;).on(<span class="string">'click'</span>, <span class="string">'.article-share-box-input'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        $(<span class="keyword">this</span>).select();</span><br><span class="line">    &#125;).on(<span class="string">'click'</span>, <span class="string">'.article-share-box-link'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">        e.preventDefault();</span><br><span class="line">        e.stopPropagation();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">window</span>.open(<span class="keyword">this</span>.href, <span class="string">'article-share-box-window-'</span> + <span class="built_in">Date</span>.now(), <span class="string">'width=500,height=450'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fancybox</span></span><br><span class="line">    <span class="keyword">if</span> ($.fancybox) &#123;</span><br><span class="line">        $(<span class="string">'[data-fancybox]'</span>).fancybox(&#123;</span><br><span class="line">            protect: <span class="literal">true</span></span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// lazyload</span></span><br><span class="line">    <span class="comment">//$(".lazy").lazyload();</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">        $(<span class="string">".anchor"</span>).click(<span class="function"><span class="keyword">function</span> (<span class="params">event</span>) </span>&#123;</span><br><span class="line">            event.preventDefault();</span><br><span class="line">            $(<span class="string">'html,body'</span>).animate(&#123;<span class="attr">scrollTop</span>: $(<span class="keyword">this</span>.hash).offset().top&#125;, <span class="number">500</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Mobile nav</span></span><br><span class="line">    <span class="keyword">var</span> $content = $(<span class="string">'.content'</span>),</span><br><span class="line">        $sidebar = $(<span class="string">'.sidebar'</span>),</span><br><span class="line">        isMobileNavAnim = <span class="literal">false</span>,</span><br><span class="line">        mobileNavAnimDuration = <span class="number">200</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> startMobileNavAnim = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        isMobileNavAnim = <span class="literal">true</span>;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> stopMobileNavAnim = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        setTimeout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            isMobileNavAnim = <span class="literal">false</span>;</span><br><span class="line">        &#125;, mobileNavAnimDuration);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    $(<span class="string">'.navbar-toggle'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isMobileNavAnim) <span class="keyword">return</span>;</span><br><span class="line">        startMobileNavAnim();</span><br><span class="line">        $content.toggleClass(<span class="string">'on'</span>);</span><br><span class="line">        $sidebar.toggleClass(<span class="string">'on'</span>);</span><br><span class="line">        stopMobileNavAnim();</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    $($content).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (isMobileNavAnim || !$content.hasClass(<span class="string">'on'</span>)) <span class="keyword">return</span>;</span><br><span class="line">        $content.removeClass(<span class="string">'on'</span>);</span><br><span class="line">        $sidebar.removeClass(<span class="string">'on'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">&#125;)(jQuery);</span><br></pre></td></tr></table></figure><h6 id="4-8-引入jquery-2-0-3-min-js"><a href="#4-8-引入jquery-2-0-3-min-js" class="headerlink" title="4.8 引入jquery-2.0.3.min.js"></a>4.8 引入<code>jquery-2.0.3.min.js</code></h6><h6 id="4-9-创建search-js文件"><a href="#4-9-创建search-js文件" class="headerlink" title="4.9 创建search.js文件"></a>4.9 创建<code>search.js</code>文件</h6><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A local search script with the help of [hexo-generator-search](https://github.com/PaicHyperionDev/hexo-generator-search)</span></span><br><span class="line"><span class="comment">// Copyright (C) 2015 </span></span><br><span class="line"><span class="comment">// Joseph Pan &lt;http://github.com/wzpan&gt;</span></span><br><span class="line"><span class="comment">// Shuhao Mao &lt;http://github.com/maoshuhao&gt;</span></span><br><span class="line"><span class="comment">// This library is free software; you can redistribute it and/or modify</span></span><br><span class="line"><span class="comment">// it under the terms of the GNU Lesser General Public License as</span></span><br><span class="line"><span class="comment">// published by the Free Software Foundation; either version 2.1 of the</span></span><br><span class="line"><span class="comment">// License, or (at your option) any later version.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// This library is distributed in the hope that it will be useful, but</span></span><br><span class="line"><span class="comment">// WITHOUT ANY WARRANTY; without even the implied warranty of</span></span><br><span class="line"><span class="comment">// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU</span></span><br><span class="line"><span class="comment">// Lesser General Public License for more details.</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"><span class="comment">// You should have received a copy of the GNU Lesser General Public</span></span><br><span class="line"><span class="comment">// License along with this library; if not, write to the Free Software</span></span><br><span class="line"><span class="comment">// Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA</span></span><br><span class="line"><span class="comment">// 02110-1301 USA</span></span><br><span class="line"><span class="comment">// </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> searchFunc = <span class="function"><span class="keyword">function</span> (<span class="params">path, search_id, content_id</span>) </span>&#123;</span><br><span class="line"><span class="meta">  'use strict'</span>;</span><br><span class="line">  <span class="keyword">var</span> BTN = <span class="string">"&lt;button type='button' class='local-search-close' id='local-search-close'&gt;&lt;/button&gt;"</span>;</span><br><span class="line">  $.ajax(&#123;</span><br><span class="line">    url: path,</span><br><span class="line">    dataType: <span class="string">"xml"</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span> (<span class="params">xmlResponse</span>) </span>&#123;</span><br><span class="line">      <span class="comment">// get the contents from search data</span></span><br><span class="line">      <span class="keyword">var</span> datas = $(<span class="string">"entry"</span>, xmlResponse).map(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">          title: $(<span class="string">"title"</span>, <span class="keyword">this</span>).text(),</span><br><span class="line">          content: $(<span class="string">"content"</span>, <span class="keyword">this</span>).text(),</span><br><span class="line">          url: $(<span class="string">"url"</span>, <span class="keyword">this</span>).text()</span><br><span class="line">        &#125;;</span><br><span class="line">      &#125;).get();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">var</span> $input = <span class="built_in">document</span>.getElementById(search_id);</span><br><span class="line">      <span class="keyword">var</span> $resultContent = <span class="built_in">document</span>.getElementById(content_id);</span><br><span class="line"></span><br><span class="line">      $input.addEventListener(<span class="string">'input'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> str = <span class="string">'&lt;ul class="search-result-list"&gt;'</span>;</span><br><span class="line">        <span class="keyword">var</span> keywords = <span class="keyword">this</span>.value.trim().toLowerCase().split(<span class="regexp">/[\s]+/</span>);</span><br><span class="line">        $resultContent.innerHTML = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">this</span>.value.trim().length &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// perform local searching</span></span><br><span class="line">        datas.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">var</span> isMatch = <span class="literal">true</span>;</span><br><span class="line">          <span class="comment">// var content_index = [];</span></span><br><span class="line">          <span class="keyword">if</span> (!data.title || data.title.trim() === <span class="string">''</span>) &#123;</span><br><span class="line">            data.title = <span class="string">"Untitled"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">var</span> data_title = data.title.trim().toLowerCase();</span><br><span class="line">          <span class="keyword">var</span> data_content = data.content.trim().replace(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">""</span>).toLowerCase();</span><br><span class="line">          <span class="keyword">var</span> data_url = data.url;</span><br><span class="line">          <span class="keyword">var</span> index_title = <span class="number">-1</span>;</span><br><span class="line">          <span class="keyword">var</span> index_content = <span class="number">-1</span>;</span><br><span class="line">          <span class="keyword">var</span> first_occur = <span class="number">-1</span>;</span><br><span class="line">          <span class="comment">// only match artiles with not empty contents</span></span><br><span class="line">          <span class="keyword">if</span> (data_content !== <span class="string">''</span>) &#123;</span><br><span class="line">            keywords.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">keyword, i</span>) </span>&#123;</span><br><span class="line">              index_title = data_title.indexOf(keyword);</span><br><span class="line">              index_content = data_content.indexOf(keyword);</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (index_title &lt; <span class="number">0</span> &amp;&amp; index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                isMatch = <span class="literal">false</span>;</span><br><span class="line">              &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span> (index_content &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                  index_content = <span class="number">0</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span>) &#123;</span><br><span class="line">                  first_occur = index_content;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// content_index.push(&#123;index_content:index_content, keyword_len:keyword_len&#125;);</span></span><br><span class="line">              &#125;</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            isMatch = <span class="literal">false</span>;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">// show search results</span></span><br><span class="line">          <span class="keyword">if</span> (isMatch) &#123;</span><br><span class="line">            str += <span class="string">"&lt;li&gt;&lt;a href='"</span> + data_url + <span class="string">"' class='search-result-title'&gt;"</span> + data_title + <span class="string">"&lt;/a&gt;"</span>;</span><br><span class="line">            <span class="keyword">var</span> content = data.content.trim().replace(<span class="regexp">/&lt;[^&gt;]+&gt;/g</span>, <span class="string">""</span>);</span><br><span class="line">            <span class="keyword">if</span> (first_occur &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">              <span class="comment">// cut out 100 characters</span></span><br><span class="line">              <span class="keyword">var</span> start = first_occur - <span class="number">20</span>;</span><br><span class="line">              <span class="keyword">var</span> end = first_occur + <span class="number">80</span>;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (start &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                start = <span class="number">0</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (start == <span class="number">0</span>) &#123;</span><br><span class="line">                end = <span class="number">100</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">if</span> (end &gt; content.length) &#123;</span><br><span class="line">                end = content.length;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">              <span class="keyword">var</span> match_content = content.substr(start, end);</span><br><span class="line"></span><br><span class="line">              <span class="comment">// highlight all keywords</span></span><br><span class="line">              keywords.forEach(<span class="function"><span class="keyword">function</span> (<span class="params">keyword</span>) </span>&#123;</span><br><span class="line">                <span class="keyword">var</span> regS = <span class="keyword">new</span> <span class="built_in">RegExp</span>(keyword, <span class="string">"gi"</span>);</span><br><span class="line">                match_content = match_content.replace(regS, <span class="string">"&lt;em class=\"search-keyword\"&gt;"</span> + keyword + <span class="string">"&lt;/em&gt;"</span>);</span><br><span class="line">              &#125;);</span><br><span class="line"></span><br><span class="line">              str += <span class="string">"&lt;p class=\"search-result\"&gt;"</span> + match_content + <span class="string">"...&lt;/p&gt;"</span></span><br><span class="line">            &#125;</span><br><span class="line">            str += <span class="string">"&lt;/li&gt;"</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        str += <span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line">        <span class="keyword">if</span> (str.indexOf(<span class="string">'&lt;li&gt;'</span>) === <span class="number">-1</span>) &#123;</span><br><span class="line">          <span class="keyword">return</span> $resultContent.innerHTML = BTN + <span class="string">"&lt;div class=\"search-result-empty\"&gt;&lt;p&gt;&lt;i class=\"fe fe-tired\"&gt;&lt;/i&gt; 没有找到内容，更换下搜索词试试吧~&lt;p&gt;&lt;/div&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        $resultContent.innerHTML = BTN + str;</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line">  $(<span class="built_in">document</span>).on(<span class="string">'click'</span>, <span class="string">'#local-search-close'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">'#local-search-input'</span>).val(<span class="string">''</span>);</span><br><span class="line">    $(<span class="string">'#local-search-result'</span>).html(<span class="string">''</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h6 id="4-10-最后修改head-ejs文件-引入js和css"><a href="#4-10-最后修改head-ejs文件-引入js和css" class="headerlink" title="4.10 最后修改head.ejs文件,引入js和css"></a>4.10 最后修改<code>head.ejs</code>文件,引入<code>js</code>和<code>css</code></h6><p><img src="/images/pasted-20.png" alt="filename already exists, renamed"></p><h5 id="五-添加置顶功能"><a href="#五-添加置顶功能" class="headerlink" title="五. 添加置顶功能"></a>五. 添加置顶功能</h5><h6 id="5-1-在hexo目录下执行以下命令"><a href="#5-1-在hexo目录下执行以下命令" class="headerlink" title="5.1 在hexo目录下执行以下命令"></a>5.1 在<code>hexo</code>目录下执行以下命令</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index --save</span><br><span class="line"></span><br><span class="line">npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure><h6 id="5-2-在index-ejs加入以下代码"><a href="#5-2-在index-ejs加入以下代码" class="headerlink" title="5.2 在index.ejs加入以下代码"></a>5.2 在<code>index.ejs</code>加入以下代码</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;% if(psg.top === true) &#123;%&gt;</span><br><span class="line">  &lt;i class=&quot;fa fa-thumb-tack&quot;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;font color=7D26CD&gt;置顶&lt;/font&gt; |</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-21.png" alt="filename already exists, renamed"></p><h6 id="5-3-在需要置顶的博文中添加"><a href="#5-3-在需要置顶的博文中添加" class="headerlink" title="5.3 在需要置顶的博文中添加"></a>5.3 在需要置顶的博文中添加</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">top: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure><h5 id="六-使用hexo-neat压缩页面"><a href="#六-使用hexo-neat压缩页面" class="headerlink" title="六. 使用hexo-neat压缩页面"></a>六. 使用<code>hexo-neat</code>压缩页面</h5><h6 id="6-1-安装hexo-neat插件"><a href="#6-1-安装hexo-neat插件" class="headerlink" title="6.1 安装hexo-neat插件"></a>6.1 安装hexo-neat插件</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-neat --save</span><br></pre></td></tr></table></figure><h6 id="6-2-在站点-config-yml配置文件中添加配置"><a href="#6-2-在站点-config-yml配置文件中添加配置" class="headerlink" title="6.2 在站点_config.yml配置文件中添加配置"></a>6.2 在站点<code>_config.yml</code>配置文件中添加配置</h6><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"># hexo-neat</span><br><span class="line"># 博文压缩</span><br><span class="line">neat_enable: true</span><br><span class="line"># 压缩html</span><br><span class="line">neat_html:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line"># 压缩css: 这里只是压缩页面的css,如果是在source目录下的css要在exclude移除掉,否则压缩后会直接变成一个空文件  </span><br><span class="line">neat_css:</span><br><span class="line">  enable: true</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;**/*.min.css&apos;</span><br><span class="line"># 压缩js:(同css说明)</span><br><span class="line">neat_js:</span><br><span class="line">  enable: true</span><br><span class="line">  mangle: true</span><br><span class="line">  output:</span><br><span class="line">  compress:</span><br><span class="line">  exclude:</span><br><span class="line">    - &apos;**/*.min.js&apos;</span><br><span class="line">    - &apos;**/jquery.fancybox.pack.js&apos;</span><br><span class="line">    - &apos;**/index.js&apos;</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Hexo之瞎折腾系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-安装(CentOS7)</title>
      <link href="/2019/03/27/Untitled/"/>
      <url>/2019/03/27/Untitled/</url>
      
        <content type="html"><![CDATA[<!-- build time:Sat Oct 12 2019 17:33:13 GMT+0800 (China Standard Time) --><blockquote><p>CentOS7<code>docker</code>安装步骤<br><a id="more"></a></p></blockquote><p>1.安装需要的软件包:yum-util提供yum-config-manager功能<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p></p><p>ps:如果安装过docker,需要重装可以先删除在装:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 查看是否有安装</span><br><span class="line">dockeryum list installed | grep docker</span><br><span class="line">    </span><br><span class="line">//有则删除对应的包</span><br><span class="line">yum remove docker ......</span><br></pre></td></tr></table></figure><p></p><!-- more --><p>1.安装需要的软件包:yum-util提供yum-config-manager功能<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p></p><p>ps:如果安装过docker,需要重装可以先删除在装:<br></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 查看是否有安装</span><br><span class="line">dockeryum list installed | grep docker</span><br><span class="line">    </span><br><span class="line">//有则删除对应的包</span><br><span class="line">yum remove docker ......</span><br></pre></td></tr></table></figure><p></p><p><br><br>2.设置yum源(阿里源)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p><br><br>3.查看yum库中有没有docker-ce</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum list | grep docker-ce</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-0.png" alt="filename already exists, renamed"></p><p>4.安装docker</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y docker-ce</span><br></pre></td></tr></table></figure><p><br><br>5.如果需要设置开机自动启动</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//先启动docker服务端</span><br><span class="line">systemctl start docker</span><br><span class="line"></span><br><span class="line">//启动docker服务开机自启</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p><br><br>6.校验docker是否启动成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><p><img src="/images/pasted-1.png" alt="filename already exists, renamed"><br><br></p><h5 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题:"></a>常见问题:</h5><h5 id="普通用户运行docker-命令会报错"><a href="#普通用户运行docker-命令会报错" class="headerlink" title="　　普通用户运行docker 命令会报错:"></a>　　普通用户运行docker 命令会报错:</h5><p>由于docker daemon需要绑定到主机的 Unix socket 而不是普通的TCP端口,而 Unix socket 的宿主为 root 用户,如果其他用户使用 docker 命令只有在命令钱添加 sudo 才能执行成功,如果不想每次使用 docker 命令是还要多敲 sudo ,可以按照下面的方法解决:<br>s<br>1.切换到 root 用户</p><p>2.把普通用户添加到 docker 组</p><p>3.再切换到&lt;普通用户&gt;</p><p>4.验证 docker 命令是否成功</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> docker容器系列 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
