{"meta":{"title":"卢国峥的个人网站","subtitle":"哈哈哈","description":null,"author":"卢国峥","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-03-28T07:41:43.000Z","updated":"2019-03-29T03:52:49.000Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-03-25T16:30:47.191Z","updated":"2019-03-25T07:52:46.000Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Excel导入导出","slug":"Excel导入导出","date":"2019-04-10T07:00:00.000Z","updated":"2019-04-10T09:36:42.366Z","comments":true,"path":"2019/04/10/Excel导入导出/","link":"","permalink":"http://yoursite.com/2019/04/10/Excel导入导出/","excerpt":"记录一个java基于jxl实现的Excel导入导出功能","text":"记录一个java基于jxl实现的Excel导入导出功能 一. 引入依赖12345&lt;dependency&gt; &lt;groupId&gt;net.sourceforge.jexcelapi&lt;/groupId&gt; &lt;artifactId&gt;jxl&lt;/artifactId&gt; &lt;version&gt;2.6.12&lt;/version&gt;&lt;/dependency&gt; 二. 导出2.0 接口编写1234567891011121314151617181920@RequestMapping(value = &quot;/export&quot;)public void test(HttpServletResponse response) throws Exception &#123; WritableWorkbook workbook = Workbook.createWorkbook(response.getOutputStream()); // 响应格式 response.setContentType(&quot;application/vnd.ms-excel&quot;); response.setHeader(&quot;Content-Disposition&quot;, &quot;attachment; filename=&quot; + URLEncoder.encode(&quot;文件名称.xls&quot;, &quot;UTF-8&quot;)); // 创建一个工作簿: WritableSheet sheet1 = workbook.createSheet(&quot;工作簿名称&quot;, 0); Label label1 = new Label(0, 0, &quot;商品id&quot;); sheet1.addCell(label1); Label label2 = new Label(1, 0, &quot;公司编号&quot;); sheet1.addCell(label2); //查询数据写到workbook中 workbook.write(); System.out.println(&quot;查询数据写到workbook中&quot;); //关闭资源 workbook.close();&#125; 2.1 导出效果如下 三. 导入3.0 读取Excel接口12345678910111213141516171819202122232425262728293031@PostMapping(value = &quot;/excel&quot;)public void importExcel(MultipartFile file) &#123; Workbook workbook = null; List&lt;ItemDto&gt; items = new ArrayList&lt;&gt;(); HashMap&lt;String, ItemDto&gt; map = new HashMap&lt;&gt;(); try &#123; //获取xls文件Excel workbook = Workbook.getWorkbook(file.getInputStream()); //获取商品工作簿:可通过索引获取不同工作簿 Sheet itemSheet = workbook.getSheet(0); //获取总行数 int rows = itemSheet.getRows(); //格式化导入的日期格式 for (int i = 1; i &lt; rows; i++) &#123; Cell[] row = itemSheet.getRow(i); if (row.length == 0) &#123; continue; &#125; String itemId = itemSheet.getCell(0, i).getContents(); System.out.println(itemId); String scompCode = itemSheet.getCell(1, i).getContents(); System.out.println(scompCode); &#125; &#125; catch (Exception e) &#123; e.printStackTrace(); &#125; finally &#123; //关闭资源 workbook.close(); &#125;&#125;","categories":[{"name":"java","slug":"java","permalink":"http://yoursite.com/categories/java/"}],"tags":[{"name":"java","slug":"java","permalink":"http://yoursite.com/tags/java/"},{"name":"Excel","slug":"Excel","permalink":"http://yoursite.com/tags/Excel/"}],"author":"卢国峥"},{"title":"Hexo之瞎折腾系列","slug":"Hexo瞎折腾系列","date":"2019-03-30T12:11:00.000Z","updated":"2019-04-03T09:42:50.985Z","comments":true,"path":"2019/03/30/Hexo瞎折腾系列/","link":"","permalink":"http://yoursite.com/2019/03/30/Hexo瞎折腾系列/","excerpt":"该文档记录Theme-AD主题个人博客部署到云服务器以及记录新增的一些小功能~！ Theme-AD主题具体搭建步骤可以参考：https://godbmw.com/tags/Hexo/ Let’s Go","text":"该文档记录Theme-AD主题个人博客部署到云服务器以及记录新增的一些小功能~！ Theme-AD主题具体搭建步骤可以参考：https://godbmw.com/tags/Hexo/ Let’s GoTheme-AD主题具体搭建步骤可以参考：https://godbmw.com/tags/Hexo/ 1.云服务器部署Hexo参考文档：https://www.jianshu.com/p/b2e47ec9359d 1.0 后台运行Hexo部署到云服务器后如果还是在hexo根目录下使用命令启动，会有个问题就是：当你断开服务器连接之后hexo服务就会停止，无法访问。 那么可以用pm2启动hexo，这样hexo就在后台运行了，就算断开服务器连接也不会停止 1.1 安装pm21npm install -g pm2 ps：如果感兴趣也可以了解下Linux的nohup命令 1.2 在hexo创建run.js文件12345678910//run.jsconst &#123; exec &#125; = require(&apos;child_process&apos;)exec(&apos;hexo server&apos;,(error, stdout, stderr) =&gt; &#123; if(error)&#123; console.log(`exec error: $&#123;error&#125;`) return &#125; console.log(`stdout: $&#123;stdout&#125;`); console.log(`stderr: $&#123;stderr&#125;`);&#125;) 1.3 运行脚本1pm2 start run.js 2.为自己的博客添加萌宠参考博客：https://blog.csdn.net/u010820857/article/details/82270736 2.0 安装模块1npm install --save hexo-helper-live2d 2.1 选择想要的萌宠12345678910111213141516171819202122live2d-widget-model-chitoselive2d-widget-model-epsilon2_1live2d-widget-model-gflive2d-widget-model-haru/01 (use npm install --save live2d-widget-model-haru)live2d-widget-model-haru/02 (use npm install --save live2d-widget-model-haru)live2d-widget-model-harutolive2d-widget-model-hibikilive2d-widget-model-hijikilive2d-widget-model-izumilive2d-widget-model-koharulive2d-widget-model-mikulive2d-widget-model-ni-jlive2d-widget-model-nicolive2d-widget-model-nietzschelive2d-widget-model-nipsilonlive2d-widget-model-nitolive2d-widget-model-shizukulive2d-widget-model-tororolive2d-widget-model-tsumikilive2d-widget-model-unitychanlive2d-widget-model-wankolive2d-widget-model-z16 2.2 选择好之后还需要安装例如我选择的是：live2d-widget-model-z161npm install live2d-widget-model-z16 2.3 最后一步配置Hexo的主配置文件_config.yml1234567891011live2d: enable: true scriptFrom: local model: use: live2d-widget-model-z16 // 这里改为自己选择的萌宠 其他参数可以根据自己喜好看着修改 display: position: right width: 150 height: 300 mobile: show: true 3 hexo部署到GitHub后绑定域名(未备案域名也可以)3.0 GitHub相关配置在根目录下添加CNAME文件(名称大写),在文件中输入域名CNAME 文件: 文件内容就是你的域名: 在设置中配置域名: 3.1 修改域名解析记录按照下面添加域名解析记录:ps:截图中记录值的ip是通过ping`自己的xxx.github.io得到","categories":[{"name":"Hexo之瞎折腾系列","slug":"Hexo之瞎折腾系列","permalink":"http://yoursite.com/categories/Hexo之瞎折腾系列/"}],"tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://yoursite.com/tags/Hexo/"},{"name":"博客","slug":"博客","permalink":"http://yoursite.com/tags/博客/"}],"author":"卢国峥"},{"title":"docker-安装(CentOS7)","slug":"Untitled","date":"2019-03-27T09:24:00.000Z","updated":"2019-04-10T08:12:51.235Z","comments":true,"path":"2019/03/27/Untitled/","link":"","permalink":"http://yoursite.com/2019/03/27/Untitled/","excerpt":"CentOS7docker安装步骤","text":"CentOS7docker安装步骤 1.安装需要的软件包:yum-util提供yum-config-manager功能1yum install -y yum-utils device-mapper-persistent-data lvm2 ps:如果安装过docker,需要重装可以先删除在装:12345// 查看是否有安装dockeryum list installed | grep docker//有则删除对应的包yum remove docker ...... 1.安装需要的软件包:yum-util提供yum-config-manager功能1yum install -y yum-utils device-mapper-persistent-data lvm2 ps:如果安装过docker,需要重装可以先删除在装:12345// 查看是否有安装dockeryum list installed | grep docker//有则删除对应的包yum remove docker ...... 2.设置yum源(阿里源)1yum-config-manager --add-repo http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo 3.查看yum库中有没有docker-ce1yum list | grep docker-ce 4.安装docker1yum install -y docker-ce 5.如果需要设置开机自动启动12345 //先启动docker服务端systemctl start docker//启动docker服务开机自启systemctl enable docker 6.校验docker是否启动成功1docker version 常见问题: 普通用户运行docker 命令会报错: 由于docker daemon需要绑定到主机的 Unix socket 而不是普通的TCP端口,而 Unix socket 的宿主为 root 用户,如果其他用户使用 docker 命令只有在命令钱添加 sudo 才能执行成功,如果不想每次使用 docker 命令是还要多敲 sudo ,可以按照下面的方法解决:s 1.切换到 root 用户 2.把普通用户添加到 docker 组 3.再切换到&lt;普通用户&gt; 4.验证 docker 命令是否成功","categories":[{"name":"docker容器系列","slug":"docker容器系列","permalink":"http://yoursite.com/categories/docker容器系列/"}],"tags":[{"name":"docker","slug":"docker","permalink":"http://yoursite.com/tags/docker/"}],"author":"卢国峥"}]}